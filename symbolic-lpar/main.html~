<html>
<head>
  <title>Verification Condition Generation via Theorem Proving</title>
</head>
<body TEXT="#000000" 
      BGCOLOR="FFFFFF"
      LINK ="#FF0000"
      VLINK="#A020F0" 
      ALINK="#FFD700"
      fixed>

<H1>Verification Condition Generation via Theorem Proving</H1>

<big>
<a href="http://web.cecs.pdx.edu/~jmatthew">J. Matthews</a>, <a
href="http://www.cs.utexas.edu/~moore">J S. Moore</a>, <a
href="http://www.cs.utexas.edu/~sandip">S. Ray</a>, and D. Vroon</big>
<br><br>

In <a href="http://www.lix.polytechnique.fr/~hermann">M. Hermann</a> and <a
href="http://www.voronkov.com">A. Voronkov</a>, editors, Proceedings of the <a
href="http://www.lix.polytechnique.fr/~hermann/LPAR2006/">13th International
Conference on Logic for Programming, Artificial Intelligence, and Reasoning
(LPAR 2006)</a>, Phnom Penh, Cambodia, November 2006, volume 4246 of LNCS,
pages 362-376.  <a
href="http://www.springer.de/comp/lncs/index.html">Springer-Verlag</a>

<br><br> 

<small> &copy; <a
href="http://www.springer.de/comp/lncs/index.html">Springer-Verlag</a> Berlin
Heidelberg 2006.</small> 

<br><br>


<hr style="width: 100%; height: 2px;">

<H2>Abstract</H2>

We present a method to convert (i) an operational semantics for a given machine
language, and (ii) an off-the-shelf theorem prover, into a high assurance
verification condition generator (VCG).  Given a program annotated with
assertions at cutpoints, we show how to use the theorem prover directly on the
operational semantics to generate verification conditions analogous to those
produced by a custom-built VCG.  Thus no separate VCG is necessary, and the
theorem prover can be employed both to generate and to discharge the
verification conditions.  The method handles both partial and total
correctness. It is also compositional in that the correctness of a subroutine
needs to be proved once, rather than at each call site.  The method has been
used to verify several machine-level programs using the ACL2 theorem prover.

<H2>Relevant files</H2>

<ul>
  <li>Paper (<a href="symbolic.ps">ps</a>, <a
 href="symbolic.pdf">pdf</a>)</li>

 <li>Slides (<a href="lpar.ppt">ppt</a>, <a href="lpar.pdf">
 pdf</a>)<br> [<span style="font-weight: bold;">Note:</span> The
 original slides were created in powerpoint with audio at the request
 of the LPAR 2006 organizers, since I could not attend the conference
 personally.  Unfortunately, it was later determined that they could
 not permit an audio-visual presentation; so the slides were never
 presented.  I have put them up here in the hope that they might
 provide a better explanation of the material.  However, I removed the
 audio from the powerpoint to facilitate download.]
 </li>

</ul>

<br>

<h2>BibTex</h2>

<pre>
@Inproceedings{matthews-verification,
 author       = "J. Matthews and J S. Moore and S. Ray and D. Vroon",
 title        = "{Verification Condition Generation Via Theorem Proving}",
 booktitle    = "{Proceedings of the $13$th International Conference on 
                  Logic for Programming, Artificial Intelligence, and 
                  Reasoning (LPAR 2006)}",
 editor       = "M. Hermann and A. Voronkov",
 month        = nov,
 year         = "2006",
 series       = "LNCS",
 address      = "{Phnom Penh, Cambodia}",
 volume       = "4246",
 pages        = "362-376", 
 publisher    = "Springer"
}
</pre>

</body>
</html>

