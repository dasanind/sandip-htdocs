%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96 Copyright 2005 Radical Eye Software
%%Title: hls.dvi
%%CreationDate: Sat Jun 27 22:33:22 2009
%%Pages: 15
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold CMMIB10 Times-Roman CMR7 CMR6 CMSY6
%%+ Times-Italic CMMI6 Helvetica-Bold Helvetica CMSY7 Helvetica-Oblique
%%+ CMMI7 Times-BoldItalic CMSY10 CMMI10 CMTI10 MSAM10 CMR10 CMTI7 CMSY5
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -u psfonts_t1 -t letter hls.dvi -o hls.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2009.06.27:2233
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSY5
%!PS-AdobeFont-1.1: CMSY5 1.0
%%CreationDate: 1991 Aug 15 07:21:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
/FontBBox{21 -944 1448 791}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBAF552B11EFFB6A16C
F03FB920C15AE724EFDF0CCBF00A838D34440FF9FED532F44036AD22561184C5
283722DDFA7285E62754372D716D704AC0E00B2F6AB67154241C7449AA047833
94CEDB08E8C92907FE72A0B05AE36A7B9226ACD6E7890A0B528FDDE84A950FC6
801DE75CF2E739E9121149CCB8B1C87A106822648D84A3D3FBF295EE6C4BF403
BBE9A1C1F6DAEDD1E642ACC486E609703D7612BFFD10C324F5DC710811F7F614
3691B400E3773987424C0D2B0D8A736873C6371DDB2442F05E018A2B5CA9A4AA
17AABB95D09E5890CFFFED5AC01495D89A53D3C89F3D8DBAC85E06561646557A
B16BAE67D1DEF37B876183D3518306F16FC9A96C8AFDA5579A7CC82ED0CE58E3
574A85B0F37DF7414BB17DD5439734ECFF6CFACEBC4BADBB74A40726355F1C54
16122BDAE845AD3C8209525459A48B864C38B7F2DDB7B4BF3051E085C3E9B491
31E2893FE7871618F7DDF0A7165BD2DD4A0C05BD33D9E644ED7C50E444540755
C06455A14646AD52995A3F9A74B44EAF2EDFA08D22FD564184381000D722A9AC
886069C5755B1623B32E074423164D0CDB91E323970D42F3A3E059CF684D7F6F
99CDBC03FD1EED3678B231093C986DC40FEBC47DF0828C6CF7F61ED6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI7
%!PS-AdobeFont-1.1: CMTI7 1.0
%%CreationDate: 1991 Aug 18 21:07:18
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
readonly def
/FontBBox{-27 -250 1268 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962CCA6FACCEA6B71BEEF7C056FBD376F2F0D0BD6BE0A0A8259139B28B99C6
25119B8C60FF7BA002476930DFDC2F6B1B5A80F1C0E544A22E3F0FB2FEAB64B6
A509B61E1AB96121FBF7F2BC27CDE5B4961048FC2169C8DB745FCC7AF0EED507
284038B15CE53E69AA22CA76C2A208F6AD8614CD500D479A5E0FD25E7BB14C7F
C47C503E4CC38975CB0A8F7E109665FB69EBAE6EB68B2D6FA3C967D5BDE7830E
9CE6F13DFAEBC852DF1D7D0CDD33DD4D5CD6D94DD8AE0D48AB638013CF75A25C
04FDEA8775EC52A13AF40FA41F7354624D917EE620318C702237AF8C0E1FFA02
127F862D4DFD0A56774235A881AFBB8F7F4BCB33811C581CFF38462F669B7F97
1F97AC09373B8F9B7E653013AF8170613E8D7E17235A893BE296A0CD2096B71F
16778388993EDF1B003EBCE23DD02949CBFAAAB5D9F6A08178BFB8ED1043FC1B
0B90D9AFC27B19783740E8DDE0E5E01D116A8CB083C721FBB8EBF71018A9570E
78590CD831116BC0FDA4229F79A581874FC3A1F108A4FCA80CE27FA54A2A7505
5BDB3D52E2595512837732322FB5BBE459C0205EB38439E34A39544F0A1567C6
F29FBB7CF931708C8F92786CCBCBB443D54462B3B4B7BD38E90D325EBC31BA05
FAAB393C7EBDB9EC48E4ACC15A247D2348A62293A726FCA4250B4A407F64270F
923EB516CB8A3B5D19876C8755EB291357E4E4CC5903D1A536A635E267F7A971
B1C33AA7F58E1ADA931C450EA8367B18E20E683CCEEC1BC079E837DDAFFF0D16
23C4AED0DC04DD9458A630FD498794823FFA55705315F0687E7592A5DFC8B8D6
FE2F3C64B4A4F9D37F5F2200BAA277F2E0BA8E5A84AFC6D4D25ADD5DEAA971EA
36922A29BD932B357784FBAF89BB908022060393BC6D98CBFD6390F95AEDDB3B
2A33C51833B7FEAF290284AE4892A29A1B116C88180797700667AFF404276931
9974E5113FD31643E199D9FD35094A311D1DEC19484FD7EF37D0C6FF0E2400F5
193EAD713357E66BFA366DD9527486DC32F6FE13F17D2F3EE2E4D1161F1150EA
10E3529A5762EC0B7A44FFBE2C1FFE7B9AF6531FD20B57BD14B4750B7D11DFD9
FCDD797D68D8CC5E9B7E0E691AF5251578DFA94DB36B0289C3A254D031CB955F
0C53BDFCD4A18CEB7121238EA4F577890EC841E5E1B855E553F90B00266793F7
0E83407360578973658A393FED2D8B16867CC8F7D00D9CE186DAE3A170D26675
0A17FBAB0537820FE6D849245C4597845C8BB86617E2527F1A0F1FC5D9CDBF67
37F55542D2EF5B7BA1B9A9C2570EF7BD52575E5BC1CA85B5856911
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC39002BF6669F243DE9
07DECA01874116AE61797E86162E7BE320362559385B7A0A651506C10F25FA2E
54560FDE21BBDE66C5F0E4A9D3B471140824F4453D4659B5098A689930D23A06
A64BB5E4B68797C11022073006ADAC1E98CF91017F80FC9B4384DFFA0B5B6716
20D619856345A9C66F68F7FD12D2A1DA7B0D046D9D80A657247207D0AD6CA923
3144A0551BD58F313EBD16469AB8F2B0A5FA8D5B171B8A6903FDFBEB8BA8A8D7
E0423553EB24AD6BF4739C5079B625EFE4EBA4A9A2F273EBE4437900A3A581A3
AC877F8E16E0C392019E33F268CC072F36EF123E99F1FC77504661892F60E5A5
60333458DD227E611B5DF0CB0E032FA0793789483374DD552E9B16777C3C60B8
19EED0051D631CC75E597DBAD011C449044F28235C280497B72B6B9E6EF12464
129E9329C8F46197972B8F4DFD4FCDAA1BB09720C0DDDDF3EFAB0519A3FF817C
3BC3A24F952345F21811BCA8C8EE6726CD96CFC98A4B3F041F5A39D1618296D9
EFD0CF86354D1A5140E0073F81148ACDE600EF35D20AE7CEC718C4017ADDC3D3
BC7F18B54292612529D4FE44D231A37C2B30EDB15F6F24DF3092097015E0C4F6
22C4B5080B76BAA2635F3632BC4511E0EF7C54EA27F998E7B8E86FA9D2497060
2D4B5C069D290B2B3E6C2C19507C365BB5A59BF15458B03723064245B90AFFB9
8896B9288F622E813016D58E84EE709E8B0FF36DE769F1C462EBFA9C50D23F94
6651ACB728E5EA7AE174F54B469A876920D952A1924BBFE644DB9DA3CDDC9446
5DDCC5F1877E9C3E0DC502B206EF0149B2852378CB459364F3561F086598B12A
3A0EC97C6C38C0E5FC2CEAA597B3865CA8AD4E2C543120C5AE994035ECDD5FF6
F08EABCB433E598C483FEB225159A56CA04F214F91390B420E775F67EDCA7B99
137542B1089C0203F675C2F16B66E6004DB2631DFB47C103932F9DFE817B5B24
59C548878CAD2A267AAA24385DF599CD2DDE8B6B38FDA6FD9EA70F9AA5BA79D7
090A8CBE9D0C90AA2917102443AF434AFD1F0542813CAEA2F1B3FE61626317DF
3E03623BCC0A095D2ECFB30BEA05B7D5484AD8742FFAA348411860424AE3BD5C
8E89B331B5FF15CF66925DCDC2224ADDEFBCE5E0724C3DD146DBDEA2149D2659
D5087D0E34D2AC0776A59EE20F6A29776C8C9FFF35DCB518BAB9C3B0510C859E
D83CA27A2AF21F7231419B9B3C3E9BD5ECE40D0F00C4CDC47DB0D3FE06A34D91
30F41B804CAA90C1143AFCFD0DECA030A983D1F7F313AAE29B7D1DD23873FD34
FD6FFBCEFE83CE552F1B273101A57847303EF715B182F4899D7A8A9081CF3C4F
74D4DB2EB6B2682FA9B2889FE25149CB9FFEFABE8D80D66C69F44A1017D108C3
93B1AC8FED95899EBF6B6B58CD592D19B5E43CBF04698865A1908026CD901776
43D632C036EF2F7ADCAE76158BF1CF0A32561E80EC9F256891BE9DA60A19282B
78EBAD3AB67E1CB88E9419D585621B11BB20B79883B9F9F1B6648CDFED072CF4
405761DAB8B6E1ACCCA71D427A80548890D6269D09D544FA0CC782AB74EC802B
AD1CA40DA5F4F44DB58898041936E9631EBAB560AD478C175A3357CC3553EAEA
AF0C8C75B5979178001C8D7688790DC2D1D55B205B58A8EAFB0BBE2E0844BAA3
A8BE675CAD5367BE6A7C2C5D9813ABC49CDE84B795A47828D0AF6B94A3F1085E
C886BFF476BACB26C8C2579654DB27C180D309D9133D01E693455F24DBECD672
40120C9F5946856C507471D47F1C430BFB8F132C1FDD8A7B2BC362A55DBFBA2F
CB535F57AD437AA32BBF71383D74AAE65BF755CFEB064BED4B8B1481D609FBB4
633D03378EA8B96114F09F715B7F0616BC279DEFDA5E18D373FA139D451FEDB5
C412EC46A5ADDB2024D3F8D37814ECD8C736B1694DE670945F574C51281D4972
53338120FF0546F6AE71BE8F8EBB5E3A55AB6D23911A41A245C8ED3BFF02E7C5
20FAE30F61B4824A1C00B0B814B22B54C29781B098DEE5A89FB39DA5417A2A14
E8A4FFDC8623E4D990C815095E92B8DCC223D3FB111577ED84D36185B622BAAA
042AE344E50D74BF6371E29E303DA87C6502C0AFF41C4DCA448188F9439AD545
402EEF211BC513EF3E0F6B82BDFD792FA7ECFAAD812538FD3EEAF5890B0D5190
EF64D0730CA66DE1454BF9AD6679AE4FA2C27B5D9FDBB71059C82BA9496700AA
B06545E7E932D52296205383263FFEC17F790B04CBF66C35FF5C2ACEA5915AC5
A1D2587A5BEF8E3F9FC1BA631D3B365D1F79A8A30E417ABD0B24B9E4C4F6F3A7
ED32123F3FFF58C1EC06642715F8BAE3DFB2B5E429D968FB91A573ABDDEA2A11
B0954E7ACDD595D9987DDA168608D7194A75C96C06E7CC1E29183D7ABDE757B6
4C10D536D10BC78894BE598CAE6893FD966C09C647873D7050D137C40B3527DF
A6FF0B5F87FB76E30CAE4EB09979E9F2B8E97EC85727DF2A204B620055D80B37
C91DA0323309E4308F2F00EBA0394C906F14C4ABD5E18F7097BF71006EDEB67D
D31427E840393DD53A6E5602B287025CB8A1E4D6E2AC110AE143BE32F407F6AA
D2FEE259839BF6AEE1B7FAC47597F8E3347EFB48F3DDE6E9198354D1D408AD56
57D41F5D11FE6B805FBFA2E2F92F6332DDAD4AE77D30758E37B67866D6CEA29B
6027812977B8D68A570904DF47550EA6773ED0DFE830F8B80BBECAA80EC33DC5
ACDD4E683E5B688F5D1F14FAA5778EE610C3FCF3429021E2A014F8B0B97BEAFF
A7F3868E61B35678D54173BC93A7BF29949C2814BB364594DA9ABAA2F2AEC654
B0FB8C022B5775582D8CBA0DD1AD19333BD74415F40C24E839E48B674B003359
EAB05AC8A0ABD358DA7E999D1AFE8359E410DE798A76FBF289C701E5DC730913
F6FC2FD9693C34013B47C8CF84670F3925D2FB69CA3C2C61029C9FD1066AD2C1
D640A556E226D7056118CBBBCB4C859D64B04B08751F3EFBDEF6F1F352DCBD68
2F73C89910D7A937D07ED50E5DCA560DBAD3A96F708B639F62730A566E7D4D3C
6C89BF3868707B721ED3ECD8F185314C9D5B4E8456BC0B096F99F1A9AD67E40E
0EBF19B06BFE1DE82BA32980AA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.1: MSAM10 2.1
%%CreationDate: 1993 Sep 17 09:05:00
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSAM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /defines put
readonly def
/FontBBox{8 -463 1331 1003}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1C87678CE98C24B934A76220
4DD9B2FF3A49786028E35DDE10AD2C926BD30AD47015FFE9469DE1F793D1C53A
C8812CBCD402444EAEA7A50EC5FD93D6A04C2783B50EA48059E3E7407537CB8D
4C206846EF0764C05289733920E2399E58AD8F137C229F3CE3E34D2D1EAB2D53
20D44EFAC8EFA4D14A2EFE389D952527F98D0E49BD5BD2C8D58FF9CB9C78D974
75C2AB5467D73D2B5E277A3FDC35909938A9DF0EB91BD9159D3437BE22EE4544
3429AC8E2BFBE34AE54D3BA3AD04BDF3F4F43A2B43992DF88678681B3AB32CFD
A23E2C98D1AF00AB206AC95B78BBE6316F7A0AB6BD3236C28C76288B3C25D1EB
E9ABB3576C5EC15A71D26177F5883E9B48293D59015615E2EEAF2E9BA04151ED
5497B9A1C41CBA44BAFF13EA218F5EAC11952EE336AD1DBE6CE92F002EAA3B3D
3BE4C3792F3405763C4BD93EFC3B4FC34193439561841BA989DD8D9F9AEE7A7B
24AEB4654B35023C9720B8F31AA9452E29753FB7915CB29977E725611E37C0B7
784BCC26FACF8A7A0EB1E54290D27FFE52B2D87FAD080AD15EE1984C37E0EB30
122C3012D3A16B09C28903D138352AB5462674B6CFB63F1371768D094DDF288C
36FB9B58443F872D61F2CD8CED42FE0EFF3D7E9952A172BB1AFECB60BF79F2B6
04265FDE4F78BC9FD619AA733CD0412F1D9A7C13B271BF827DCBDC8ABAE24FF0
74D3C220621D7FF0EFE62D835A221D0A7C139E2E6681FC2BBA58FA3B80D416EC
3854C63BA040A4262B458340DAA18AA6AEA3BBAC61615CB85982B18664D3D3AF
340C65B969071CF2D0CABEB80E04623D0526F862ECA8280EEE236C535F70561A
854181132E677674AD5E14C6636F57541D3C821F0776D2CB9B8526D4B826791A
0B179B386A81720D8EB7EFA04CE1734D7F48C98CD7DE2FB5F2F97F983819626B
717F0CA1EEBC10E31416E0599733C7930E464FD271713BEBD5EF40D60C3D3189
6941CA883DF4342137451FED4FE26A353E04F6A1E34BACE5B162E5DF04C4AF96
57E557D5F7C4EBB97E8EE636979DD3F41B85EDCA5F1ED51BE5F8140C77788F4F
E04DCEEE933FC6A09A4B86AFA2F2281F09957F23385BA40C26E4892D293FB17E
EE7484E7C8B38D17E92FB8EC2C997789355EFD246D5B5C67787113E2F558B752
DE5D2E735F1957D909011CF87CAC524ECDB88DBE30FE71FE3D01F581BDF8EF1B
02C039BC04FD9AF5FB2B63660E1354D53EC343CEEFC048130BF27BA323C4F944
E07BA56EAD3AC6CD5B142C60F1313B223B4F888FE724A73FC21488A083B7142C
D3C59EFBA185CDC9165EAA65E0502892
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 98 /b put
dup 101 /e put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
592943209E846E55B4CB54F6658CBA3C0B29796D69D0435D5431ABECF3448C15
98CA2F36F3659E29AEB79355EC2ADF835CF0886C21B766B9DEBC3950B5B3B496
2E06D980A8C60305B273232D4604F12632FB4F1B2F9703952C823C098543AED1
CFB4ECF259A11985F0C944A57B5AFD853374FCF12305601200C2A393E2FC77FD
F78C2BE1B31F956D3CA92861BD92959BCF25C38FDDBF82528F1F247D7E76B14D
8ED1E216B47342D89F7AA72DD0245DF137D31D71ADC6B846DCEC802AC1609D5E
0BF7E05AD46DE3C2628E84C486DFEE0F9F0B008F4438E1935D6B6FC33BA49985
ECE25EE7521C9EEFC5056220D79F7190F0DD9C62F5918C54644FB41CE20FC898
F561893981910F1AF512FEF97C7DDFDF768766651FBBA2650FDEEED9CA46A840
F7CBEFF18CA66E98146C3F69A3A03405039A8DF3955375DB7069E72502A04AFC
CB5B2BC243C1933A52ECBE764AB2E6BA033A3F755FB1A724ADB6A61E5441660F
474BBDCEA4611FF0DAC3D89131C53381EEC2DA3A86E30D166D1074BE7760182B
78EC581EFBCD985BA02169BC108B38D5471AB823DE656D4A4F0272F9E040AF93
A9D562CB2DA113CB723C5C8BFEA83E8C8AF454B30F340A63DF911050A42AF3EB
9253E51B573EDA61715440A27699DC081C090E7A45F9C76ECBFDADDFDC4FC1E2
67E92206211C8A6611B4170C4603FC249A5A8595869C087C272F998EE551EE85
C0BCCD492D34F18E1D5149A0256BA3DADD85398BD63207EFBDE24A92686F1F5D
E656207281E8767F4F7559DE6BBC9781AB32137DBB6BD4EA7A135BC020B96925
B2178EA03B32E2635282BBA820AE9A1F524936AE16F75C6C610743459233071C
890F9906785F93C5ABBBFA3F0A5E8FA49774BA65F1F069114E1036C9B76A10E7
1B6C94659090E0E73DAC38363C4BD383FCDD20AF7D94415E741479E9AA142E92
F872934708866DE80C7EBC96B3712928AC5883A30E2647FF5D247E5954FE1B67
A88FD73C2A8F98BBA84510A47FC1AB8BB352EC6A751B8514800ED41FF3DA9FA2
72C6C9A38B28A8555A53A571140A0213F5F4D71A9F9026173FAA794D80359DDA
750AB4685F1B2B31BF53A9D79C54B976D9C988E72FF472BA7A49A5FB98EADEB1
01806C68724F570A6CA222E1920EDF8F60A7BFC89DE290958196A20D4ECE8098
4032572FE9AF98EE21756173EC08B456AA1C659762F68221CDF693520576875B
3D992BA3E9116129CF8F52A435C2945F6FE4E9FBD25E634D064AF4249B13E9DF
57CAF5B7896D0680519785B2907B21D864C3B77FD9E76BD8D6B544E26F3651C8
9A225A68BB0150110E4E39F2A16FCE56903F00C6CFD27EFA45A1CB86CFAF7B2C
92E1D300AA3ED7057B9D0936ACDB58B74FC8C846B22E94215D004E0FCFA085A2
E242EC820B4FE463089EFA7CFE42FEF436E5BE5D4CB53E6E435710538000C5EA
39557C75ED728EAA0C7315D65E55E6483D70809B69D76C6E3396F28E24517956
A67351C3BE0FA9FCBF1CB4D0C9ADF57C75CE604E4CBD1FBCFA720F76CA9F5BC8
4E94E6FC3457E45BAFC77BE000B8A6A231DC014222ED86D5CCE852F079029A10
0ADF1A6235FBA32A9E8E42836BD22960291E23FF754F6CDAAF32AEDF756D9BC3
81876D70CC7BF75783A38BB2B0820ACAF0276B91F1C39B005B05D74A1B22B01E
773D65563EEB09D4EEEE6EE0B1DB77E741C21A0CD4F574CABB3CA12EF189710E
6B740EA4745A503124F2E3B27189AAF16363054A20D90BB736932FC90C412ACF
40126E47CDF4C050E11E5C98D9DBDDA9FBABE5C70773EAF57288A7C987ABA1DD
191D89750AE8E293331BF63169E7C2FD673ACC99D5C313FA4DD47CE47AD576CF
25E33F68FB4C5970B183E14482C41CB73D8685AEF587DF88C9F8DE4000B520D0
39D2843E52B3F80C45D4B336DD66AB0304127F80E0A441EFA8955E2AD2442E1C
6BB6117734AF446F6648E55242531DEDBB19E402C186D95C28CF372DDDD15293
619AF37239B6E7EFF1684BDDF741C2FFB705E4A04A00AE87017AB730F7106703
0C2B461AAD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 28 /tau put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 120 /x put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
95601766776BF2CCE9DA2D21FB01B0A72263F95346325709B27B0FD73AAB4A52
6B9957F344C33D457F57DBC3520D985CA92A02E5957186C10F8E0BA55D57AC6C
1DC30A7CFDE7A28FB3A990B95BC5A700AB894630C582A537513F05568D915190
51B0B8EE350EA6FD336397837B248AE506C3DF68DC12D83C5C53DF7055088F44
22FE6669B0CDB12EFDB57F36359322F4F90F01D4027074A21164B7F934387FAA
D9C85400E75AA08CDCF28AA98D326045FD645C63DC41E4F70BE366A649EE6222
D70FE94D6D7CBF8E292E148C355E5B78DC332BD0317EE35B89DEC6C4F88D4909
952BAC4F1EBC8949B78D13AE4AEFFE73E6ED5C9272784293D4BF868258BC6722
5FEF29A525544E79599E510CB5C3C4002E4F2B19CCF266D3DB0EA4ED482FCF34
BA95781ECE6AB549E65D73C98A73ACE05C8D5F153892E0F4125911C4BEA0889A
B813ED2312CDB9DD6A13B55D91D5962D6A093041A2BC0E18935C07DC2AAD6F81
020A1510CE56B31B2710AA6F0B773313F863EA68D0836974ABB66FE2B838FD6A
D9A9784BBD19B6CD0E7BB8E4AF78427AFD717AB3855D96BD8A4328DA8CC57277
B294DD07015F373472563E4F54780A4385E12683711F135B15BEE99933457AAE
436A3321164CFA69DABCCC1F20DCADAE385FBF525ADD45AFD9F4B19761A07CC2
376E7C56BA07D36A9C1BC2354C314ADEB503993C8711CA14A32814B836577914
1C28769F8DD2D1A996D1774912C576AB7DDBD12D41513A9C4E43A06102E13987
46B0593322918F47328A13AB1A5C915156D2209BB7B55A18D38922DA49D7369D
B7A8B20C3C76D996269A3BC654A3768D5EFFED08CF739224042F4379E36F44E2
AD2FB9AD34D7A8B894EEB27670CC15FC6F721D7A51F660B317096A4B1057CE70
48CB805F1290AA9141AD2D48F73B4CFDA65515CA57F024ABE66C3F8F6ED423F3
82FA7F6D104C00727CD5A13038DAA97A420E2F0F6CB7A6CA5DBDF45CD05D92BD
FF371B428C2AF7B5DEBBA0782FFEA0532B42D652C557868F4D8DAA516C4C7BE1
5629546A7543152D7398E2E74323DE7A6712D4E667113547EB1F04095309A5B7
9E0C232759AACA38E781C3C5E77B800161B2C4800BFB7D210001A3D7F2CB7B96
535A8B3F84A93A27CE3D7D87A39B86FFA4DDAFAD40D8A12D352782DD8B9A3250
3C3781EAA33796AC0E7D4A70A8726225B27B2A86C22891EDCF4D0AD90F94D5B8
32BC772ECD01D9FF1FFF4503C8E5FC359433B2A0FA60826736984AE2E5F030C7
D8BF53102D21CB766CBB8820F158A554893B47AB69A0CBF24280E44BB2706F41
A33B9415269E4FE9EC493091C1967E8A34E39245B3FBBE1E511FEA65013953A5
F3075243346CCCCD33AAD4187308A774BBA921FC6ABA11EF007CAD3676AE5EC4
50D9D4A11537A78D498A7D548FE32AD4049EC7E40D34DC6795F6C586E1AACE41
CF7F2E3E5916324B6D18B50D36AFC220B887CC4AFB767DCF1B528E36B3FB7287
78DC2EA2E73EFACC7B7934CBC00EF6FBFAC6903FCBB145F3F357C70FF22E7B7F
A362A4A57C7F46DD5E26A4CA8F5E235F5A28A35BE6357A3C1815D1554043A426
13888C14D225C591417E61A2763E169B0603731F406CE9F83D76ED8BEC1DD2DE
3542047A85824D33DB03913FD1065CCF525285B021108FEB7A731DC840E1EF56
F5367CFDDD24B92831E10D0D03AE9F2E9FAF465B4678348C208A8DCDBE34CBB9
B82F918B0F0FD3122A95436968753A74BB64EEF47A4AFB384EFA40B977053390
E0813C51A727C8FAB83BF988DF8C4556AAB464D44F6E3B0619663E9FA3BBA9DC
01ED57EC71156F4856B244CE5C7ACC2FA7D9F4272803C03D45B2DCA7A565DBD1
0FF99A3AA9F6C40C80053AECEEADD5ADDF21F94766EF340866E41CCA69C35D4F
6290B863571123534A64249032920387983CCA781ACA3096AB351A42768EB047
B7017A1963D99968D36060401D7B3CFE9652469DDE6A48295F8BD76873A4C75F
ACF5E71E3F9363B58A7DD3F3D2CCDE3866F246709FD64E131C1F76063E8F0076
D099579EFC37E89819F95FD07FD46F0C9C4D44FA7324FA7C0E8E167E9733CE3C
8A449F6F4E89B0FB4804482C650DDD5043E3B155EEECCE3B788CA3FD5459197F
A9D96D9779A8792680944B37D0ECE606B88B4FC9E352955E35B8ACD0397E09E9
0B9F1B6330C5A8B60835FFEEAC1F9EEC4B1019B5F1CCDD9F42F2506C2913AFC8
EB9B0BB7619F6FFAEC16E090F47CB304E07EE120B3CD50A1857D2D0C5439DEAD
997953116228790F99CD9902B8348D98031CE77E15766238B3C3E7B43C6C3630
619550301A92281DD5E71D9E495D64624A72A44FCAF4AD11D0A834A85981BF63
D84F8C4D7DBAE6448C0B5D460E9A9978DDDB9F39114C8C80B7D172B60CE76586
9A9C1EF10389F2BB9884753C572CF721D245C67CFEE634810DA7FEE9883065ED
AFF5B3C300E8C9D76EC9C7F3D9EB16B2303236FAA70917B507DABE895D92274E
F4D459AC87F661C315EE07939D59CCD57442594BEEA154F7BED62C387D261F7D
B38D863132DB3298CBC3FB48BED173727FB251CF27FCCECB0CCE2622BDD683A2
6B836D5D390912CBF14A7DDF3E2ED3065AF003E9DA6FCA5025DFAA584E5C8193
EA1C15E1E57E1A28AEEE5920223EA5F126F8C807CAEE1F7E132449B06097960B
02537B0FA7F81C32D6BE3307AEED2BD331AB341CEA116FB2F5D121FA89239035
27A12E23B7AF0EBA39E5636BBB3B6C1397F9018CC01DB126E6E70D55D64606D7
C95F4CF7F0A00D6DE17546D1844BE5B5374C644143A4C8FBFDF1B65CF62EA1E7
5377CEAE754B3B57BB1B6785DE7FB205D61FBA70140943E24E1D7BA0D55E8547
8AE40AA457093EE02DBB7C821F67FBC79423AD65CF470837BE3AB167F924C3F8
49A32954699E2D2B5EFB7B0CF33C20D1F13C27669DE2C2C2D77DBCB293A49F47
4BFE16615DCCCB5810B0F7271CE2C9754FEE622B1E6D71E24B21BA7D93B7FE32
B19A925C79A0FB00947B5EE354E7D19925721FB9CED25EEEFED4C9626B647F25
77D8C571FF5FEEDC0E332CEBB6F68255DEBB3C0B429F6012670068B63FAA6223
3C45C884D964379D5FBE0CF5DC5AC576285262336307F826DCCF0C576092DF31
E7035AAFD21E0B4292070924F48B27956D2615D7B5BEF0DAC0BF9F71FDFD56A7
E4E4B6F4C0323C3953B7AEF88EC0627111EA411CE399E21D65F811339AFB74DC
5D4EBF9E8A38DDF9BF49E88B4AD60130B8C8634639DCF6E661794B6B229A7AD8
D9922C3A525002DDC84F7DD0A40AA4FE7FC5313CF0CD09AF8C9BF1E6F9FBD3E6
F221C29D9383ACC9C697B573782FA6AE510BD7AAD888CA3F073D1C677484DAD5
05B0003E3ACE554798E19C867A02F3684AE69428B0CF3F010405C71FD57AFE49
71CF3D50F14B69CD4CFD2EA3D2D9CD7F6122717D02A386F1E931F42C0AF24D2E
7DB6D2C3F4064865733476A7361C6DA8F1D091405E5F75E50571EB39F7B4371E
F8F053952C8884640C54CC4D1D9C846C86C217293A86EBECFE482199B0066C0A
BC9D70B628BB6888148D71700D5AB947CE805FBBB6E57C3B3FA4FC0ACBC20317
11177EE4ED2A17B10F0D17BC60DD2D79B9B2EB8EE23775E651022398B078E5C6
BBBF9F892926B8052121ACAFD2C36C3FEA5C5C32969F7A6FF572C456BABFC3A9
A72E1A01A395A93940477F8C34C7D1E8F570A7DA53483656A88585E887DAFE99
DDF4C0F7568DADA9687C615DFE74B4ECC6B186E86C2159CD042970ACFA3395EA
CD9BA1080DA466093608A0C2E5F1DF76A979440C4CCB83D5989312BCC6BA8F96
B710D42D8C557E9B420DF8F954B2124029FDF259E59505DB10D30D40987559DF
8AE9C3F689CA9189685D3952FF8AB599144902977A3BC28E2E13CA00C1772434
E2A5D72B2F2E5B2D72D16CC186593165EC85CA03012CCFD40EFBFB344B4E7BD4
BC3C1291D051B298ECB0DE13C194506982FB36092FDBC8000F0E38B8E18E37FA
E077E8DC3CBD642356600398616119A3DB0B50B4710F524318EA557ED736D15C
2C60DEF336FB369003E1E6889F04BA369C4E890E7BD90ABD912C80DD45ADE8C2
65ABE17C15DFE4B0C1BE6CC42A09809EAD8D85C1E7F8AAD713E8A82CC796C30B
BF2FE6351E268519CF5A620C6D2C1CE4E1C91068ADF18C0AE10E5F69AA77932C
18E0C1C46A10D8832E0E0E471C8110329E81B785AAFDEB8DD0F153AEA46737FE
07F30A2FFB3CD25E448BE2A0D6B1269F99FE843D47A563257834BFDFFE39E50F
AB6780489D650E26F9A64338D5DEA7DFB13F0BFC23CE2DA38AF04DF48510A972
EBB99105CFEF54F1A9C7EC01DB542A80632418CF738E4EF8BCC71278D7856E22
4AE1019A1EDD4AAD3A8F23B444C17D65B395FA993BD6A58C91E6AB4B516B6ECA
FC08B24B711509DD94A3A0F1C40545402F901E82EF7BDCBF4D6FC5173DFDD495
D1ACCA7E5C12ABE7EB09ADD0458B7C4271EB681F766542F8609B60F196EC1F23
730F88D664502A666ECCC0F39D0CA3B871BDAF9D92CCC97B7959CCC5EEC63DB3
FC3E671AFB39AE55FD7A37C1FF97577DF8EEF5714DA7A4D3E763BF93ECC890B0
99AE2C386F97C7C3850479209F77A894D56CA87625AF9089F81D139E9C29022D
3FF168A630C1F1644CE65F64B68207887828B975A4570F8DF3DE764BF7B6FF04
C6C2E8C7B702DF42F567EBCCD5A5BB0AB1A4740A27D4AEF6008B900536D8FDD7
0125B93B7EC4BEFE2104BB70DBED4F34EB96E4E4A7E897416082360859D1B25C
7CF7359680D014ECA0CC2E409B534AF5AFC95EE6A75EAC92DFF7D981EB613A7F
8E99FB5118498137B9083671C1045C8D6B93B4CF5E286AFF49C71E4F2B5D5587
693872C50DDE84BA91950DA5B4B9EF05E79CC0185B58299CDDD68B8EE056CCD3
5B1C24FA5A4667665351FE7A9EDB5B2A079E97F08E93BE564CDA37E54493BB01
52CA80AB4EF1AD29F0A91F6A03852FE97B3CF7EB3C64237510FD8F1763F42417
6864F5487AE743B2F5D57CD847D9C3AA13A16312976B02B80839F5C2C73E4F41
F1CA75D95654960CAE8420BBD3199779B4E9BAACB6B3DA84BEB1E6611FFD2B1C
6AE1348C69FD128418E0D6986874E79C83887D87C34F83F8291D617884AC12D6
AEA63638CB56DC7E58397DC3883A1ABBC71C4D7AE7ED608E672162902151F60A
4F70ADD1F4DE92341E008F8F953EB5A91F6C8982A43CECB32B4EEB31C560EAD9
E8E821343D691774AECB473ED6470E881B927D9DB99A4CD6BBB7729C834B3323
08E1063EB4B9AF2861BD67634B5DD401745B0E2E89C12ECC2279FD0CB9A73968
C32C1E35D31378AE6C788CCAD146994D506DFC4A6578B98CAEA29691E546EEAF
AFB8A1B0764A2ABB956FF9031E12C7EFDA184D7D431E163B8F180FC84823076A
5A7FB66541B3E3626CB8F6BCE93B4432CB819F7F1E91D2A9528C8090DFA42CC2
636720A1F7FD4F8C0862E3240DD481F6C62D4726AFC106B5B16CBFBD07D8A350
505BCD05C8F3546CC8DDF1B1109CFACFA64863F8E9BA0DF4837B169A2BF01AD6
813E60B3EA4AE0878B5063A33C1655801A1501E3156B25E034F7607A92F3280A
C6FA9889F6F65DA3742315B341B95AA7F5D1B699C207E3AAF8B9D8C8DC5DDB2B
8AB96FB69F527F3967D6C8DADD14C29F5BCC045815995BACFE49C1434DC22D74
477A71B9BE081C6610A3F515DA6A09C56BEE8F840DE13D6782027D8A40D89C13
5B85C3AD9E47880F83808B39D219F4C58DDC15173B418C7C9528C2E41BAAC0ED
F6A5C85823E7DA6D26A316F4D9EE73753D8FA17E42709297D02D09017FE14F2A
4AD67716736551BA9C1270DDE117EA88D2C80459F2DF9AAD4B35A86D343E100F
533E56BA4645929B9AD2C4C2A030F476CBB2492AC21E5E8AB979F0A49E665214
45CADE7ACD6E5AA9CE54FAB74328033E0B6704A0FA2AB564431A09B4177D7C80
09A49BC3A9F73A3824ACEAC7164153072AA049F1B559263F1AF24E8E7C25D101
4A5B3B1292EE2E3F6C895846FAA3C9BF0F5037846349D2EE572BB9C495333755
9F0A10E489F107C73FBB1FE0CF64481A75A3B7DBE4D046E6EB8650613D495C70
60C182B16B47549220EC44942C5B6ABEC785E50993AA875472C30F10A6377617
65DBCC7FF79C17738B4500BD0027A436C565D314740321C73C2D809D7DA885DD
F9AEE0486A9274380CCB919BB7DE8F7B14D97BE3A2BE2B17EC545814DB558265
9F787E3899AC9CCA7637DF9B27DE33B99612D715AC90D14A3562B88635CD921F
29BE0A95E61141306FA7D134E294ADD8B1491358A035AF14A366412F069B76EB
317C9C3E04D125ED755707EEA849696D1E0D17D6CD5A21E030E3B72F0A471394
30F36709E4C93E506978BD05F839A0A8718492E1C5B27D060808205B97F0EAB9
364423239648C0AB140A3691D676EB5F8DA259C40103620FC69058F9C46A8F03
1B219C684A26D67E6A7461C99952205A536ADEFBB5FAD0DE9F7DB9F3E35E6E69
25E4A4E80DEAAA5F0D9FD23DBF901D55DA59D183C2D4B315E907FF604B66E406
B5F5D46E3A3904957D12012C49A7FF51A2E35F619C6991FC1658D99A2E72FE20
FF18DC7D2A160F438D238155D156C686C2FC2ED7567DDCD66E664CA7A662A24E
3C1C4D915CA2F8A0423D61B926871A7E7108701498088A55746FD46FDFCA6846
750971222053362FD7F4AB57ABB48E9D850BFED35DEF49CC1BC756EF99E17B0F
1C90D9EF5BA85FAFEFC88DB8D21871D1DB40A44D811CD6E0D4182890E0B890C4
E2588C61366A1E15DA84D302D785311E38338B974CC6821AAF01AA1C56EB1AA2
546F9C6208FC9B7E123511B130D5D80089AD6584AD96B02BE0D9BB4B3044D7C0
092C01A8407E75E1C245DB6E389840DF1D16EC879CD568B80092C3A086CDC6E6
7A2B2F96FC8018E178C7608BB6F71F3D4BD88CC300D7823E902FFE233AE191EC
B27A01BD97D3FABE5F51058DDD71591393C5A51F7FE1494E9EC9A4E4EA0C4696
590AE51C10267C0338127DEEFBDAAA7C12C9A9B3F244BC9F1B27CC7B305CF16B
25A40F5CAFE19D19A84230A01906F4B301845E451345978381D38B746FB11CE8
A9E49BDD4D642AE93550A38C8D27DA06331CD2A9231A98F45381B45DB5F2BD47
9F9D2B5559061C3A75B7BD723FB34A75A9700FE190F4617EDC84893B8A2F0BD8
6B40BB77B679ED425FFB48FB672D02F9B95E425FA5DB221B80B424C4F48D90FD
511D9FBCF036E98724001C5B6B740DE114C3D390E05BBA0514482332B8EA767D
B471FDA3E2A51AE0FBA86DD461BF576E1F7994B1C00245002A972B479844B75A
8334E95F23E0B4966E5A8C5BFAD38EAA401354741794EF834D6CD1196CB468CE
B0734F99715190C623257256338B858C4190240357730DCD2091D23AE8B069F3
273169152CB82CF9A6026F8B3269EBEEE90CCFA22E5964551759031AB9BB514B
6C11E93FA136F8254DAB02286E6B1C185EBCFABF0BF7E3BC84FA5A7641676805
5515982210286A3BE59D73BA3026D2FECC77CB74F6BDE5F0D46261255E7FB648
EB1C2D441B1F9B30677E267F0A26903A22BFF74A1FED9A7FF5FB49B53F8E77D3
87C9D915D04B5839AB2A6F0E041F004F741FA56C36002BD8761F4AE6675633B2
06601A53FB3B36C4789F31176E1693A86EEF8C870EC80146BEE755A591717AEA
29162FCB2609ADB8CF6D84B0FFBF5DF05CD054633DDC2EA9DF7D042950D8A686
42DC89AF769A0FC7AE584E518FF342893DBBE2AD6D5AB3E05C2FCC9430FD4CDE
58E8DAA3FB5777E4A20B5D8A0B8EEA201B0B82ABF57D4837FEA245763AF0DFA9
B80F4B85BF5844A149349A1D417EEDC66483AD3C616C0BF98FAEC29EB93F7874
8287C4D8A2F11D5211FF4BACB32A92CF0F6AD2542D1CB6CF3D040A86E93E8A1D
E325A829626B2C34445EDACE91F4596022AA24F8E7BE64C1EC96B69E402D4A6D
7F5F7D51771AF00D47D30B05A04D0B35227E31DBFB22648E6D5832F6D3F9570B
DEE4F99FB6C4FADD09496806653902A96697D44D1C10E12FAE42F35139C78AB9
0A84E309B21656FEE70236205113F35B559F155CC609A1976941E970B1349268
2C11A039CE618AD4AAA8B4F6B816E1EE8328B35A40B46890D6C9F4A2DE93B5BE
D0420F3314620ED671D78CD44AF62D54661F3E87E7B3FBAE6C1E70BD9141F3A0
6B7FFFAA55C7EAAB015A3EC85B62AAE44CF2793C6690A44473A543B57C01E94A
EE64CA6DF65E0DE160BC88DAD8EE0D981424D0337CAC4F8AA22B05498843AF5F
2DE3410381C20967B6F4D93D9D807C5395730E2278C91B335B3024EF31C5FE3F
1565EE8D4D00F2504D5FCDB1254E4F1F0BB53563B44201E5E38A630282AF209B
99C58082DE312C0D09D13CB31EB36666C84B5ADEABBFE1C1DE41FCF74B12411D
A0B047C9DB7E959E56758D243187A79F0A75569210EBB6587EF093321F447696
1730D013215F648B3282E0CD6E72A8CE801CCB1B4C7C442F03B3AA8BBF49E990
B875E65047CA2C2377AD658CAB243A971A7E07203CF95186C35A2EDAB2092D59
4155A1476ED2A44D7EA6ED36C73968933C4D04D9D41DF6DD774D23EC49FC8E97
474BADC9DEECA96BFA3FA8E8E9F6836E92DEE61951584C277DE94433B5B2562C
FF72B7797FE4035772D02AB43CCB15E150D7355757CA1118A65D17038E4E2DC0
78A3294E5E81309CC3212C6859E2D6A170AFC79AC20C066BA31BF137E4C988D2
9E2F5F4179AB02AEEF183D2622F2C44F44779F46E2DCCB0D88E9CF3D0A3C13F0
9F055D2F131A83395011B1F0A65B8B9A57FC87944DB749C1A9785F8BA63C4653
8F5AE5E9BF85BDB4BDA5FFDE7E65E39763EB3965E487A5881AE53DCD8475A5EC
594ACBFB866C9F1EE67950E1FF726C9DE1AB34EB2253B88249427415506B666F
6AF2A3BC9E45ED8013D5207137960CA9986A489F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
dup 21 /greaterequal put
dup 30 /precedes put
dup 33 /arrowright put
dup 41 /arrowdblright put
dup 50 /element put
dup 54 /negationslash put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 73 /I put
dup 79 /O put
dup 84 /T put
dup 91 /union put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57034FFF80CBE86DD09B724B3539A82A7
A8A84C947DCFFD8BE291D60A0C73D387392B65D7875E44BE11E97058DEF0ED11
B5B97F8F777346602C4FE3CC103D8DAE88C794BC21CAE8AA9E1ACAA91A7B6255
84F6D2545FB076362D08AF60563CD8B7694D1E92357044D82A2B08B25F78B1FF
C908E84A22B8A800E48BF2A69F1828365B61ED43E0731C94922DDBEA09D83298
7C087AA23C94DB882DB2CE24282501BB2168EBADEE71AA3BB6526F0B1CED4AB5
4E771B711AB80956DC3F38DF18C29C09D6605DDF46EDA00DD46366276474F5A0
CB237A88ADB437DFB1D41B27D3ED2394CF070A55C2B991941B86FE888FE0100B
6BC3E24ABC99CD8DC4FE8ABD8D0191AF12357E348489A7DA00443C09A88878CA
0C46DC36B6906101B6A0F486A362C85EFCF39E99D2740079B4F0664B3D302184
7C93B7157DCF8EC34D5F8419A67FEA71559E57A3727FF79F0C139542049CE191
1A294443B49C8AC80DEB9A147F81430CDA106205F59BB6542B06C76BFCC66209
55FE85D25AFAC6D2671CF4F29C56FC1817EB752E9B5C85E0E5A93F89759AA8FC
EFDAB5F74ABBE70722393B09C7409B2540903DC3DD7F1BEBB31276F216AF9F1B
F400E8876E2190A2D35DC7C10273F92826AC1B4155796994DAA37B0FAE5C5C5E
3204A4B5DECBC52CAB0869F98E1C6C2230223360C87B8FD5639BE0E50A2E8755
11146402923439557ADFBA040418BB9EEEDF39DC8B39038CE55A0A81BBCBC1FD
4C66D442C7EF91A17B1B7110B7757F32437D718746A3C4AE62CFAF35DD589A89
82BC56BF4FB49C6D15009B1CEDA246214E1F32D60BD094565EDE3AB93CC2720F
67BD5876A3FC98674CFC8893CC858FD253113772D60124EF6656C19176A92F13
8846DBB7C07A9FDEB1CD31B6DE2290868AC8A98730AD1BBACDFE8CC8B3D5C422
CE5462D63F0B065D588CA5748E7DC0AA20D5EE25A194896E6874ACEC83E0A12A
73F018272FDD19DB0780A5751EB320E4E569D3163BA17DA6981757295DBFC645
1514C73E8EA18BD21517B37FC6A266542AE06AABBB1AC7997470E4D532FA95D6
5D4961E147459F2660D15B21C5EB89ADC001C4EB64FE99AD88AFDE0C9077B24C
40B4E542F21F1B745D94C9BB4F6525DAD234C2961A61294A48A5CFACE5FA90BC
E98718AA08272C57149ECE3EC6E19491D9B321896F519FA66E20489A88F743EF
8E71E5106D36A7E296CE3814E0200273DF16A2A0E9848AACAC65FEA998D6E909
F9C960FE7627C3582B842E483EB661F1B1017F102DA9E6C71B0EB6E9D9A1AECA
DC6EA42C2B8494A145F9063C554EB0ED958BA30A75C48519C89786ED6FD0E629
3DA174AF823BD9FA06318AC5E37A5D347204C69A675C370DB3A56C59C1C36E79
A51F64C054E4266A9DAA97C77EB101C189D44C9678E8866657698359E625B4A5
0EBA817294B50F6B45CD4DC1F1BDFFF92A22F2498C6B25C624FD53F373EF24C7
A3F6EB630D011C1390CF35A2FC2E330AAB5D2251A8A0AC02DF4A18E3385E4CA1
99C25F0C71B968D82044DF9FE7F938BD050DA8BFB470DA7788EEC97DEEB9B8AF
15526AB9B945858647D8547171C198E3F0A3EED573E1F644A3440CF00E220A57
E9508E51AA3915BB7D5BD6EE118108F800C27019074AB528A3C328219B6B3B42
AEEA3B43AFB4417A9717CA8AFFE03B216D0880275BACC70EDC7C6FA58016814B
EF25B42893A6BC75852672490E165FCC58285C95DECB10CD105B830FCF1B6B77
87DC348A9BB26326D8145B6B50E274C148D78E8763D74D98F00A32408697D4C8
31D2AF81C1B31BFC629606DBA2C08164E29F03B7E5D619F9F46A98FBD5A2F6E7
ED30965DC308772C3FAAA1C96FB8F29A474B3E1DE324C455C80ED9573B42E6D1
8C643EC68380F59BA0421A386AD14406B2334E4B2F3D60AA5F01960EECC7B9FF
63E6D7B38D15A788097F5878630E1C1598882822450EA3A2B4A4968463CA5576
5AEF1A15951B9DA53F65C764052D31E7C6CF9ADCBF48DFDFF2A2827C2EDD2998
7BF4A2BCF8ADC8B370A6598C8643E2A1E0341E7FBE1615E55434CD7EA106EAB2
FEFEE9DF8926C1BA5D24692FE0C7A33379537894D6380A45298849C02E64C810
B46231088BB3B9D965D969FA8BD51BD3A55AAE71081EF013DD3F3DB942D0268C
6F5553D0A886DF797FAC3E580225D295C0567E8F52E0B449F184F247F2540751
597AEE08F7644E0116CD64E921E8C361C2074A4051691F6E81BAD8E23E61C438
D3C24DF00680DC6E69F1D6B22DA8F94436F1F958B1DE3D5882A685840D6708A3
CB991CDFDF7373F16703989BFFEC289E782AC01C63E7A435E466DEE6C39B869D
9BCF1F107EAF06E21082221AC3597D26E259636C14C5943C23EFF5B90371FDC6
1FE91AB8218071ABB98E0844D82231D964670C3C8F9356E0C82C64ADEA71F29A
BD5217D2C444DC064020159479FD3246017ECFE7E46C04D0AE67496FFC1ABBF6
605D2AD8A04D46E2C5A93F69233E80D8237F808727060939F16EDE80F3DE1E54
589375F570FC4429F5394D7FCA41B19B09A0AA22989A97C02C162D4489CE01A6
F1AD4FD2D99D93002FD82138693A0F52359BC08DE4C654A70494422B794360F0
E6EFE9E86DD79495F4BDC57DE29CC9F0D2E920A92C6523FA7D994418982ED480
8819FE3594D3799710B6DE36F4EF4F8F235D91590D148E3295DCDF34F439AA6F
87B7A4EEB7B5702447D1FE3AD9DF72689206EB3C7D76045DAA0C835FDCBB9A93
6DCB3BE9D23B8647BDE08AAE2313881734A286DED2279C3E09B587F8A168C0B9
C15E2BCEE0E14B07C25BB3FC9CEC4556AD8CA550980BF29CFC4EA743B44D0C36
5E3FB2B201A68D6091D6A8FCB3CB22AC4E70560D11A28BF2CC224A4BD6612DAD
53AA6713A56D32B70C46B6052EE6F071028093EF836A01DA349F44559752EB84
08F3EAB6169A6F9517C4E959E179FAC009346A2E198F30EE5350C5AB474E2E65
FF9E4CAF9EC6A39D08EA39610B7BA7875D731FDF3DD1759DD82C52A7F80C9BC6
BEC345AF81A4A07B83866530D56A5CE4B6DDDC93A95CE44867DD4FAA1FA4B57B
5B573CEF4C42DE5374F5B4CC98C040367FC31220F5540B8375DE99C70C803F37
C0BDB8278D652B5393E1B5159EE5CFA27965F1EA863B1E4CA4285377698BEC69
57560D0BDEDCD2C41FC618807217EE659C87BB8244D241ACC4999097D2A3E4BF
186D6C9113F5AD7B0C4A4D4E2091A6A3AC1D7C00C998AC748A7C178BAAEA3BDA
BA7C062E3F10210337B234995F8297AADCF81887A2666C2A7DC75B18A08AC6B4
79F59D52680CB508876E09349A98244D9E2050EA90861EC530A024ECBFDD72E2
337AA4DDC36674009AECF131C5C532E74C5671FF421664EF9E693D3F6705BC0C
0FD422422A7920A1B2B8A28510F49E2FA1C6BEDF2482796E758106BC7D58A95A
7C7020DA4FBABE40D2303D638445CB3376D4AE61C1B23A4E1380547B9295D601
FC467090E7D6AC2CB86843C3DAF63DE824E50889A2E03F4F63475EAD1177CC1C
111C27022CBB9A02B0721189B04DF43F138AF18D1DAB62B8BA10ACF43B336ED4
9EC6AE5EB589266FDCE710AFB1AE6EF88BCC627CD292B3ED46DC7822B5775354
1A993AE69B6BB82668FD352C62821F952493E5A0950222653D8B7EBD2FF3C831
6486FD86BC631B4FE1416FF89804D3B904E3D9BDF5F5C6AF029C009CCFFB513D
B64199FEE3C580CF734EB4B99AA25EBE7250BFCD95AF828F957B16AADB53CD86
59C72E9433973DC5B9E7F90CF26AC5894BF079E688406945AD72EB117B04E17E
5F96924D7F39CACFDFC12989CCC0CE5DB8A63D6829A80D70DAD3967FC8CBE90B
6B5097B534C7E033F4592007711092FF1B1E2D33D92FF1FED407A7A55304D9AB
0D79B5E37A127F84CD26428962ACDCA70D586FC0F880ED41D91168CAD0CCA695
14E1059283198ECEEC3B623701C3A0C792FF230652026122D110600D20A57E33
3D94466647FC462C4A74081B664C915DE189925E4F0C1B36CF502C45D70369B3
6235DC49401F6534339A95AFBA960D4B71C1EC328211F7F2118DBC9A2CB483A4
B4EF2C9FB33C09934036C6AB428041276EC1A4EF009ADADC24194F31496A0CFA
567A7886AD7413FB08C67CDC03C787CBDD984BD2EE4E2F23B0991849782866E6
A8655592E9549A1DEAC20F95308668052789804626D284517F0108F8B07D0587
93D509D7C38C94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 67 /C put
dup 68 /D put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC2B4DCCBA250138361A088A4CEB00DE6235F7FCD8FD51EBC30CB4578
ED27E577FA5274A6A07C83AB7899C6294080A48FA76E2397F79DC9D60730226A
847143781460EBE967DA56B4CC9D0B113FDC7F666469A3DCE963018C8C68F0F4
79B2EAE9A007F3B770C7C7698F0D6EB97B375D7380009B9BDB89ADC0EBB35106
E140C06DB7A4F259EF6889DC0F935723A503FF2B0122F4FBCA56B04443CA294D
641B60541939437B9FFC87BEB05B1DFF1B29C0055596A54C6A148EF524F7F494
80D398B3A2114034E01E54EB5FDCF1F3ADF76161309C5E2B247886DBC9B70D39
9ADEAA1AC654DE6D955A2D8BB948B675E70A5EC91B37464685728BD302890501
709E7ED75F96E32B553B348E16D357AC90E33B2AA17653D58AAB80BCF074DA95
D2C7C8D8212AB3EFEF749FBE352A19350F2FF55363A6691BA47341F2B86B8090
D6713EEFFEDB2B1275FA51E284437A6CC43E93783263D9F8FD95DC447E27ACB0
8C5C744BC5B63EC7E8D6A897FA9372612B63E63570EA70015982223298AC29FE
4D117570F5FBB511835BF4A33474DC0360FDA65D61DF2B31E6BC08F4238E974D
8242D9EBA498E77180B454CC268D905E19476101E751128762D46BE9FF6AE89C
189639B584E276B6C78D7749DBDECB8D663CA931E6D19B97FB8CEB3BBF99D20C
8CDD4B261FDE32DF0EF1888132994C1A4B69B00B2DDFE1140730368D3C00294D
071D8AE332F0D075C4764678FAD7C179EA1B9204F05F0B9EC90489689C4EAE12
9C035F8E875E3CD9FEC5A51AD40181C34011034CDDFA1C5D7345EE1BB9A721D6
BA9CD084C1B998BF1A98D2100F938DAEDDA6A5E76C2D6F6DB088A52CCE6A8ED7
424D88347452299C75DC5551BFBAD1EB6ABE2DB43909CF22F54F78F70B3C6FCB
D827EA0D28F9D84C61EB2339F40B3903284BA0C5765F082F05F0CCD5ACA7DCCF
95FB62D310E8FCE0E8EA92B5CC9158216E8AAC88C7A9DAB7B6F07A38B42C9F91
F4708896B12E3234E11AC8AF8B6A92275EEAF23EE4F24B8548DCD5E5741681AE
D9FF8B674408044C986A3FA963AD2D8EF6E66B7F47FC0016FB65F3CDA8B4480D
9B2FD8BEF92B62E5A591D53293264B1296080892E3655B8C09A50EC706F2044E
7DDE433CA9395B0C358F88E85A08E707D2265602A8B073C887DE5A0473AB7611
9BDC594028D54FB6F7F6CED2B5C0DEC0DDAFAF2AE0B75BDE6A507BD81BA546DB
FEDFA7FCA2E218C69802049C35AE37388BC09CB27FEE4B14E37F83449EA6D37D
80D18C5422957C50812606503B17896BA644195053AD78F6B77ED1EDB44C71CC
258B9F96CF20AE5E63D1EE2B3720860FF698D9C5417B6A3FD7B6BBD23A8F2F65
FBA9DDA9336D1DCA0BA7733314D8722BCDA391BE3679CDA918A00E17ED42C0AE
1FDFBE7D42753F11EA03B9AB211BDCE09A19D5F728E060882DEF85A4847CA636
7BD4048BF8DD56E34BA75651F0C5EE12966842C42242FEF854F1A052FDBD5339
C63BAA425A77D029E9AF14F5F3CDB9D99B468B39DFC9BD40000CA2FDE48F10C9
DE7F79500D95AC38EA9F1732B5CC2E9F97303AB2C6838E9C7F4AB0608D6FB21F
8DA974A371D692E537A1DA9BD1B667AE3BC4AE28825AC7A71FD7116F6DD5A296
F977CEBEFE1E54F243D8CE07E6E1BE041EF2A8AADD26F06B209FAE9015745BB1
A3D95EB5E69936D3417C75973DFA7902454FB5B2C8F7EEC36601DDA8EE17FCB3
948B7BCE396626F888F741038CD27DEC7D34384A31DBC459CBD533307090BC65
483BB81234ADFABF859E659D527A6FDB61B8C7F112BE27F1BF5264BADC7BF56D
E54FB0DED6A8A6D16BFD90BB5923B689C3E669538CA42EB2193D50FEB610E4FA
0358F2EA94B9B01CA7B02A80DE130B918B8AE94D46C78395209DFC2F4AC3F1C5
621B120B5D35A2CB5778FB9E9892DD2320F7C956F49821008AF9985EAD3A402B
618FBCCFFFFF3151D0553B85AE95A017DED1BD6C12D3E4D00289326F406AD8BF
2C6AFF906DB2ABCFEC5335FC40385F53699F531E32EBDA59BA78C75840401E38
7C999E76A238AFC9EC96E7A5F9EB1AA2DA9A0793A70E5BC87A5957A1193EC384
A3C6A1E70E1F012A563F3F6D310B0472A5E3B306118CC9DBABA235843F4D5F3A
5082D5ED25021271B0FF4ACC82BCAB23FB421CB1850AA2E2A874FCC6019D2016
25F4A33FE55317618F02DB8D7779A8DEB6811FC2E697D773519B484C9694A39A
E9F30B68F3842CFE21B040A0B15FC73895ED4B14FF0DE527F52983169FD12BC6
F667CAC0A96D152826D22E66AB3772F50D8837029D5C7E33D330269A082F807C
1A675EFFD93E43D279E0D6D7C339AA78C48F6A3A64B18E8714F6D599224A5EA9
D63C6E2F2A8A83229219B594E7A1BD699A0A4F70ACC9DF1CF9B8757957607AA1
032CB5473C1D959CFA3AEE930F8B409355F8565DC1D9F4A9183E7EF3C4F4C73D
A20D20A2EF06E9D31ABD6ED2F0E4B8DAEB13CFF566661965D43213324604D6A2
2132221868E17CA6A5E5A23037FD282C4AF274E39B84AB82BD069E1058E5A386
039A4FDF8CABA54A13E73A3FC7CF712200E31989FBB90F439734C1CCCD49079E
7B23F511411B020F7E830A5A03745509EE26B87345CBC59F59377E7946EA7EB2
5A029D857CAE203259E0C70EADDCC916395FD0FCBCF8EE48D4CB598EB9F55F84
ECCFAC69DE0DD8F50582A719891E9FE5864FEA65259D2E36D37D9D2FF432D095
4009111778E094DDAC7EBDAF769DCB4CEE316DDE94F52566A6713878C666506C
8DF7976333782A6FC4328DB44657009F080F75A3A361DA4AA22C200B0F652BD3
84784900B25496C1F7875293A9161F495AF49F805EE6F980E2C9EF73961DB934
FDFDC08484E4A1236C4FFAE5A667973D4E144D5015DEB5D42B83772F32893576
8A86CD90C019E6A7CC3BFB872D40CC9DB522B1E835940380F94A44BB86F59039
ABCB42EB566018BE9559498DAD86AB4D14DB25E1090A9C6D7D9204179473F5C4
C77027AD5C5ACF78C7CDE170655E7477B416383316FE94C2308CB6293F6D35F4
24D51E0520F32BA40572DC6C3AFBA9C001E2FB656F7B4F3AEF184180FCE5B1DE
ECD6A0CAAE060DFA52C67DEB7FEB2B41C094D963C016C54A50CC0E67E5017250
24CE1AF03EC65B88E0F7283F2EE6B9C486FDCDB0F0D18A3F7992921C87CB6550
6FDA6E0A2B904199F31328A4E2B0878A1F966E535649FAC4AD5B38A15F4F71CB
464EAC79095103A7E3C3B3D474409D4775EBF7E9E0623A9EA1596FD72D2BD989
AA45B84EAC03644F798E48BCA0D6F01A1776E22AAC41073331F49EA6E12B344D
774FB87364FB5E577215713B4E1B0633E353B1923F5AD79AA7BCDC4F4FC0824C
0F32E410A6CC4732775E7662A7E67CCB17CFC760C5008B69F5357E524079BA65
7A34A4F0B091FA51BECA6B2071945F1AF81E44748334419FB050C26E1C6431C6
9007B336CBFCF8E6FFFF2196C559471C3286E2B21970C27EAF23DB6F1120FEFB
D940ECB81811C7D791502DF4530CA06E2C974760FDF2D6C525EB868D3941A11D
B7B707C6B41239497BA9C2C3EAABF9DB8445F5936759562BC6CADA34647E3309
BFE71B87B73CCAB7DAF4E55B59396D096A92843FD50EC70A23EFBBDA7FBCE8F3
99B87B816840630A0211A110EB5FC23A6C0C05AE018231166E39AF1D45451383
E60E2CFFDF2CB2E53BBA04BD344E9CDB707B3A9B6E730F5685D956ADFEE1AD7F
7BA0CDAF76609626159B1C24777A70C364D58D9D1F3E5136FB18149715F1A2F0
8484B9DE728A30B90C4BC27A596486A61374645EA2146D4B05CC9BBC9A578C18
E772D4B08E51B85A9BE59A9C72A40E2FBF281BE28248F0C21ACCA15DD7598B2F
C45E8DEC3252B8D796C1C852CAF584E55EAE43E8BB0BDAA2C20C6B618F58AA2D
1304289C1BAB0C3FA199666FAE76F7F625B28F6F7C708DC9FC6C3C3FE54954FC
667AC7BA9DF096AB040485FC7195FA0B1B0624E47414D8DFFD9A67DF0E9B4851
CC1CDDBE9A6874E548E0724D47A024057C4E82FE34187FAA61F77124B7766407
E9F65DE15F1A1936BB84EEDB37A20094655606663CE8C511F5AFBB71BD444A5B
CE5BADD26B8692D99676BEE4106F0D14F9B6E875E0E097F5DC9C77E3518BF684
EE14B297E4A60B89AC6A464C35BF329337A60F5B62B6D84D856FBEBBB88E888A
90449DF87F11C3DEEE855E86F709C448AB923D0E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 48 /prime put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841AE1598196877011AB8455EFC5DD
7C30F66F27FBD4038D1859A07CD65AA57FA9B48D430647619EF4B575C1C21310
97F78C821D430D69EC5C7E548AE3E7E75ABFC24370F314AA568E293EC4473C82
11E7EDFA96F0DFEAA4DBEAA4D6464B5761E36E03FA1B2F204AB52AC4336CB16B
55B91FD355689A26E6A2E1786B9469D3EC2097804A1AFC12EC81587CB8DEF873
3427E163C6525B7608DC60D4F8EC32B4C9B90992D2B06360F6AA04ED6F56BFC8
C05A098C3E9766D1DCFB372ADFDDE701B96E0D8B1FBEB5051B286A371E317860
648EECF5CE04F015D8ACCB9953BC5F0732AAEBAD21BCC203033364F146482429
7374073CF40677E83FD98F5E949749E77E2A4FA4FED86586157D385485A905B0
039A765E5B1F6F6BF0C1EA0357AB696DB02FED29E1D99B6793A873BC3D8F4C70
B7780159C255392ACD5B0FB13C59F6B99DED451C75D40C6D3EC35F46A09DD95A
52D861CB2FAF7EBD8DADD2A4E259A05BE2D1E5DB826DFB3B6CEE9B390479F7F8
A5BEF65A37ABDEE10D228A7AB405D995EC2BA8DA9C9A6E25EA894217313CCDA2
B991BFC3FF375258585E0319EF29EF91B99CB9E0B0E7F0E3D759893B57C0DD93
42497C740CE6162E524170CD9D135694A09A9D81E9030A76450FF78787AF61C0
6E5DDCBA658B43F471FB866242CCEAA9BA53A529E4CC2B1B1A0A4DFF88A93E17
D4185411C89D19F5BEDF2C93A03EF0A772F41B11772DD2E674F090CA7843C3C5
F06BC08DC7F42E1FE9F17E6F48C243A585C84BE5E869DFEF1A842C3AE11F7F42
4564EA1D830E61C9C1432FE5BF1BB48E6AFC1DF62839A10D6DE6EFB45DE78643
02792484C7A5E276FF2CB269F11C9CDB8568AF6152BE0F6E0E82CCF1357DC9A9
27C3EDE0AE21A0BA4E9AA5F3FFE62191DB94F04F8923E151830BE66BDA5F10B7
A1A055A754C29F37775ADACE01B400A692F923CBE457351DD47E3928F3F31E58
681647F23819D0574E402EA3B3D8A2959BF4FB20045ADE9357394446000CAA7C
B81D84DEA0DE8ED8371ED9C59A66FA476CF332CE834E87B39CAF2DEAF6A296F3
15998450F80AA88FCDFABB55F50ADDB7C78FF9A5DDC7EB3CA44CC165EABC6BDB
513B373857CEDC46352C4EF11443DA4D3FBAEB77590DCCB2E61A691F37FD0C60
182DCEA451A9639D10DB48F92AB1167BBCE10C62DE2A01EF96804FA29F988139
569A964A075E27FCB0BA22500180F75DF80382968D55B2B5D49665BEC6F625AE
CB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /star put
readonly def
/FontBBox{11 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C71AC58D7C35AB3247575482E538773F05A105BA2F674E97E391392EC
F80CB2FBB7CA980255ACD0096E51EB8EE24EE47DBF332E73A4D4289A467C5CB9
6B6FCE9B3667271C41EC1FFB54BE06798F122BA17B36EB29455443EFEBCC170C
FB2E43BBA892DEC342FBFE5702E8A8CB31B4396AD759CB316A470EFB0A64F1AA
18F34F4565035447B6B803EB8673DF2A9BD4458AF4473011F836497E83B81980
7F27B554EE4176D147429B4C697B427A9508C41936901C4BC90C30B462374482
1F140DC21B9ED3B27D578B4B2E5D35CFEF4387D87CD7B46970E007BF076CE620
78A547FFD36ECFCDA0C0124E163615966B5F2EE1EAE6CACFA91CEE799306F154
9B255E81C6EDFDBC95881F6D4748CF659A139A94A449C5E45F496BC9B2EFAFC2
E7C1CD4EEDA952D1819DAC0FA999E9EC6BFB8930D54321E3A1F64732A0EACEF9
A757FD60D80A32B62C0D0FE50E87DC17392FCF5B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 121 /dagger put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF7499F439A6EBE9BF559D2EE0571
CE54AEC466A3119259D8C4C827EDF4E403A27EA5A86AB91ADD2A24A8AC37519D
0CED901A1A8B59377AF91FEEECF47954A03D7F5137B8F47EB865F57C0AA0D659
1A4C3A0FA89901BF52F89D060E0046B64A68AE2C59852661D02CE9527A2298DA
97FD4F553383F5EA30CB909FE975D9026441BAAC5008950B160DE9E62EF8F7E4
3D646292F7573C157B73C09BE0AF1F1FBF56A5A3B4B27752EB8DC7645B7B7250
39ED0D63E9E77F2670E08BFAAEFB5FCA26A5A23267F8548E60CC461A943195E8
F61400379C26EA3C735EDF37123E3321416EAFDAF8A6FA94135FE088F606A6E2
190DAF183779FAB792993E8F473005F23785473938E1973E91FBDB6564D80B78
624184BEA285F0C3698560557161E77C6A24FB2171DEECEA6140094CBB6D0B51
4821A3BCADE3EFF02E399A3362DECE05AAE09B65C0999B9548CDFC0A313272F4
DF655F39FAE7EE82C5BF72EA9EC85E3A788DC4EB4E6AFF20783FB337B115CB21
AC4EFE148A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB612DB13294
19F96BE45455FDE8771DBF48729501723E48C04FC929BAC9A3733877BF0F2ACA
BD10CD8A81178E7ED28B5236DCD83B83B152D0274EF87ED0845AB720B7E33912
7A08578C6423E338F9AAD72FC8E19C4A2B57180147E693F353BD65F49C491A2A
5B1AE33FB8543323478313880082DF144294A44388812E7621ADD470B3D5916B
3073230FCBCC8AE5F71215BFB8C69A156B4F125C6C3E77ED313A95E6A01AA600
33D336DED41C8E02E9D86BFAC5E6DCC27A76942FE0CB9EA11B4B30B56280D0C1
C7C335FBAE949CEAEE78508763BDA9C0BF0E45CCAFD55A74261DB5B6ADB4D97B
92BB6EE8F2724FDD2C2835E8C0356B04DB2F526519ABAEEF5881E4856ECAFCB1
16DD61D80FA754541849CFACF06993D3CE14F4ACC8886FB9F3FD5146146A8525
D7A130C3CC71DBA30D51C5D567FAE6D539B99842026E987F136CE81D7C828203
C1495107BE32B69C06B555E462C2045099E1C20E6BD9B5BA95EEE22CFFC83526
348864F5FF307CF7419D77B0F8642F651002385A1EEF62827BF14C28B8260348
0C72FFFA3A868A777E5C970FB847E725C0EC6356CEDD73E99724A27517994DA5
79D81964FD0B97BA8DE6F9C6FA53DB8E786B522F0F472D041675DA87802C4831
1A299D0E6EDDBBEBEEE38CF6ED9AFA68307A8D4AE885585EE13353C2C60C7637
624DFE48D2DEF71CD37984582CFCD688426A48AC9499ABD6D2DDE83F3A624CB7
1C4257F9A5DC784B5A3B7AA48845CA5485C24446B4B19BE3BD18B8943938A684
EB124E01FB6C651BCFCB0418E7FB7E9870C2F772C1AF9803DAC8C38A6993820F
9C380BDFE5574227C51E506D093CC4E07A4CCE8E039C811653FABB087347B565
3F6E7C905D05A682C35B2D84983F578901E1EAD72B4BDFC62FF6FEA9CB956A32
420B8E65C91BCBFCB3010C4F1E1CE7EDE4DDDDBB25585F064AB148F654DFAC15
664CE13529B3B2BB78B379287495466DF0D0E8746BE65116C0DA4F26E4BFFB47
B7CFF6F5FAE079E16BD984B722DBBC2D10D7FB379E723E9E03BBA3C1BB2F206C
46A1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A489B11C4D43C
322B4ED6E6EE9BBE94DF8FDFE27249A9EA3001AB271CC2CCFCA44AA28CC6E9AA
FF54DC52933768C234476CB599DC32B12A70CFDE739B3CAE98C902175CD62473
B37768C67E09808C6ACAD93AF52F26B08DBC48D4A506F5F1E85818501B8C522C
D27D01ABC406BA7CF7741E8F996CF98812CB4900EE8ECBF7BC6D73209FE7E0B1
37E1B276E4E0B9ED582BEA3421E57187316C84FC6FA5BD7D50836E5F33FB5A94
30C9C9188A66CF8F58B204982D082CFE600D1B42E3B6E954C601BF6F7859222F
C23EF475DD6CECF2DF3F295DE8F0C3DF658C67D05C5737FC45308CB5BDD08DB8
354B9E6943C07B584867754A680B765097C1E87AE4B51B43BB1C9FBFD1885106
D70FB62BFCE3D4D8E46C15811756BDB667023B2714F72C54D35AA04FEDEFBA86
7C976DEA81CB3472CC239FFA3BF01650C34C7E654DC14FD2363C1447852B7FE8
83803B1A3C580A914FD82016E05FF42FB6619562FE9BE1E0C60ABF11D5408BF9
734B794C4F57906F2C0D1DF6BC0DADFE03FA365B7793B73EB52A7FBD52FF25A6
C8676AC7FB54308D0355ABDEB52787C0C8FE4D8454509AC3AE25BAA0A3A4E1DC
8B85D0C5AF4F29F6756FDC015DD6095C69400E03DBB87A2A0827E3E14EA8988E
E5FE2B9366A0ED4E50E93F8CD703F9D4CB303F1059C777EE595F675ED5CB7A53
D30A83AF7F9E305465327B37298C0C1B0DF08C3961980517FB518FBB679200E3
718868F2AF034770B885AE093763C08B3C79D0F99D00E2F46C0AF915639003C4
EA33CF28106E6388ED9D51FCF2D0BDD11D060C94568FCE2ADF04A45AB47B44EC
871B8CA6DF069AAFF9B319B8A23F157DA99DBC31A64C479487847A09E2E84304
A7518402D9AD0ABBB6CFB73C7924CDD0AE848A05B0B737B382E8541848E854EE
7D89A72C1B47EEA822DF1AF0689E58865DCA81326DC92ED4AB2F1D548BEA198B
F29E3711A1A6474E185308FFCC39E6440F4341F5B27F7354A5DE88DF3BD72D1D
6B648D8C402047653CC7BA517AE48B474FD981D259F29469F84195300B31BEF2
1468A786438EE26642D95E23160E684A87A1BDD5A4A29354914ADC46C1B8CC4D
5DC4D0D0900EEC463DD127D52101056555777A85F5DC6922545DF9BE2D0266FA
5618D4817488C801D816C1601EF9FC1D385C943BA9457D5FD6A143141DEC833A
4D323F3E8DC8578C4D57FB980913C3AC81DF2DEAB4A7B3984CA3FC5B4354337A
43BA80D698BB317884657A7AC47A9D40846B63C27040112A200A111B631DAACE
78EBDD88B80F11A819DA68000093F4CF18325F701F01F5DE070AC746B77526D1
A272F05A5CCFDD66D70886677896C92389F76FE11EEB8CB082AE9A6CCF2CF40F
08545DDB52F436F2C6194CE9BBF2B7520A798FA48646A505478FACA91ED39B54
0AB33E09
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMIB10
%!PS-AdobeFont-1.1: CMMIB10 1.100
%%CreationDate: 1996 Jul 23 07:54:00
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMIB10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMIB10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /star put
readonly def
/FontBBox{-15 -250 1216 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D004B836D34E88C25F6CE738846C8E2E59A2BCF
4ACF80A26D78872E9343A0537BC3BD7715F32ACD958D5AAED865BFE129278935
063A31C2634DE2F9077E0AAAAEB224466B779096D8E3FF0A12AD5157F6603DED
1A82F3511359143311179080C510740B401C930C96270FD1AB3ECBCFEF5DE53F
E846BAAE95828D5790922640EF8AB9D7CEBE7669FEA02B72F86872D3D8754A18
A1629C40A7C00C956F140BC63362478279C36EE353638CD3E249897207A94504
4400668C8E702058EBF7284C9BDF830A3FC79C7EE900CC4C3664F9767A237275
CEE3671644A75F1E696DA906B4C66870DBE87F5B4A176920C078ADBE24F55C09
3D18CDE21B5FBC1C6A8AB18E05EDBEF9D1C1C18B3E6377BA2A688579D4F708F9
A5CF4F56C5E39E2726106E9713E638775E606464CD674E5DC25CE9A696A65806
C8E9D206B421E246F18013ACC6C7B2985BA93B1B7D7745CCB25B09957F50128C
B523A55ACA6A7A2A0193A536E590291ED9D577B527CAD0372E05BFCA1829FED1
662D06144A5FFA628C587A4FA05B179F1A7E3B23B47765FDC054271A0DBF9C2B
B4F4771F80D1F7AAD9024868C30DAD5CF728DB2A71D86D53B0E674996E8C01F7
EF97B225A28872F8AD4752A466E078C2B020EB832F237CB9B5631EB2D2EDDB00
709D3864CA3A6C3EF18085EAEABC011E9F35C9BE4B5D0B608361F329B5784DAC
5557A602E9E3C204909D84DB988F0BAB914E87CD685C7DA55C5E0B9F0176184F
FC39B570873BBF346A0D1DE3942DA05434949A65CE64D8BAB0A091C40F7FF47A
4FC57CB4420221C7B3EB8B891044B5FB0227009F0F6028D3F28545E63C975F11
6BCCB67C58A544AE706BA5309FE391816985AF4604732D2B7E4FC947AD9F29C6
2858ED5A9824C2915162453046790D522BFFB881ED8F0062D056722A2C8926BD
A33AE1A7D5EEFEDA8A86A78433FF239D5F2D86F992C0185EF15A0163A628A238
87F9840BDF26E48AAD35DD0C167FF38D5B79ECBBD7B979DEBF71637081E4E6FF
F0254425900735A94CD403F46B7C86DA97AB3DBEF2B96778670FC35AE8505ED8
90CB2001B067456419D278B2519062A9E49F703BCAF1D4FC03A460063745D434
F1FA3EEDC0A0F87EEEE6FAF906D40E292B67EBFE4FB76F60C73EF72A8FC3CD5C
FD18FAC6150B6147E1973FEB7BC1656BE667A5FABD016DD4978ECDC06B0D5246
0CD9FB08BE8EEBF4E17EDE9EC0DDAFADF98894E1F8F4F30770D47FE68D912591
6CD81D2B42B3972955DDF84CC6D60E83643C478952A9AA1BEDEF4B45860E1C8E
8F191A3C1378E75350B7E217F83348C43BF7ECC0F76AB946DB13586DF26CE6D4
688261
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (hls.dvi)
@start /Fa 207[18 48[{}1 41.511 /CMSY5 rf /Fb 158[35
97[{}1 58.1154 /CMTI7 rf /Fc 162[23 1[23 29[65 2[23 1[42
42 3[42 42 42 42 6[32 32 40[{}12 83.022 /CMR10 rf /Fd
211[65 44[{}1 83.022 /MSAM10 rf /Fe 139[28 34 35 1[42
42 9[38 2[38 98[{}7 83.022 /CMTI10 rf /Ff 135[47 1[40
1[30 39 1[37 42 40 50 73 1[43 34 29 2[41 1[43 36 36 44
10[48 1[49 5[67 81 3[36 69 65 53 61 6[65 1[65 23 23 29[36
28[{}31 83.022 /CMMI10 rf /Fg 150[32 32 42 42 10[55 6[45
4[66 5[45 3[44 64 44 12[0 3[55 8[83 7[83 2[65 8[65 65
20[{}18 83.022 /CMSY10 rf /Fh 134[33 2[33 3[29 3[42 4[21
1[37 25 33 37 97[42 2[{TeXBase1Encoding ReEncodeFont}10
74.7198 /Times-BoldItalic rf /Fi 201[25 25 53[{
TeXBase1Encoding ReEncodeFont}2 49.8132 /Times-Roman
rf /Fj 201[29 29 53[{TeXBase1Encoding ReEncodeFont}2
58.1154 /Times-Roman rf /Fk 134[37 2[37 3[32 3[46 4[23
1[42 28 37 42 97[46 2[{TeXBase1Encoding ReEncodeFont}10
83.022 /Times-BoldItalic rf /Fl 212[48 43[{
TeXBase1Encoding ReEncodeFont}1 83.022 /Helvetica rf
/Fm 145[41 59 21 35 27 23 4[35 30 29 36 28[54 48 4[52
1[52 20 59[{}15 58.1154 /CMMI7 rf /Fn 134[29 3[32 16
29 19 1[32 32 32 1[13 29 1[13 32 2[32 32 29 32 32 49[16
47[{TeXBase1Encoding ReEncodeFont}18 58.1154 /Helvetica-Oblique
rf /Fo 152[34 34 53[19 44[34 2[52{}5 58.1154 /CMSY7 rf
/Fp 119[19 14[29 29 1[29 32 16 29 19 1[32 1[32 48 13
29 1[13 3[32 32 29 32 32 3[16 1[16 29[34 1[16 1[32 1[32
1[32 32 32 32 32 32 3[16 34 1[19 19 40[{TeXBase1Encoding ReEncodeFont}
35 58.1154 /Helvetica rf /Fq 137[32 3[23 2[36 5[16 2[19
1[36 100[{TeXBase1Encoding ReEncodeFont}6 58.1154 /Helvetica-Bold
rf /Fr 105[42 28[42 42 60 42 46 28 32 37 46 46 42 46
69 23 46 1[23 46 42 28 37 46 37 46 42 12[55 46 60 1[51
65 1[78 3[32 1[65 51 55 60 60 55 60 7[42 42 42 42 42
42 42 42 42 42 1[21 28 3[28 28 37[46 2[{TeXBase1Encoding ReEncodeFont}
54 83.022 /Times-Bold rf /Fs 192[32 63[{}1 49.8132 /CMMI6
rf /Ft 133[32 37 37 55 37 42 23 32 32 42 42 42 42 60
23 37 1[23 42 42 23 37 42 37 42 42 9[69 2[46 1[51 5[46
2[28 1[60 51 1[60 55 1[51 5[28 8[42 42 1[23 21 28 21
2[28 28 36[42 42 2[{TeXBase1Encoding ReEncodeFont}46
83.022 /Times-Italic rf /Fu 135[50 72 50 55 33 39 44
55 55 50 55 83 28 55 1[28 55 50 33 44 55 44 1[50 9[100
4[72 8[39 1[78 61 66 72 72 11[50 50 50 50 50 50 50 1[28
44[55 2[{TeXBase1Encoding ReEncodeFont}39 99.6264 /Times-Bold
rf /Fv 139[25 29 33 5[21 2[21 1[37 1[33 1[33 42 37 12[50
2[58 10[46 4[54 8[37 2[37 37 37 37 37 2[19 46[{
TeXBase1Encoding ReEncodeFont}21 74.7198 /Times-Bold
rf /Fw 134[29 121[{}1 49.8132 /CMSY6 rf /Fx 103[25 3[33
33 24[33 37 37 54 37 37 21 29 25 37 37 37 37 58 21 37
21 21 37 37 25 33 37 33 37 33 6[46 54 54 71 54 54 46
42 50 54 42 54 54 66 46 54 29 25 54 54 42 46 54 50 50
54 1[33 3[21 21 37 37 37 37 37 37 37 37 37 37 21 19 25
19 2[25 25 25 3[37 31[42 42 2[{TeXBase1Encoding ReEncodeFont}78
74.7198 /Times-Roman rf /Fy 203[30 30 30 30 49[{}4 49.8132
/CMR6 rf /Fz 203[33 33 33 33 33 4[51 43[{}6 58.1154 /CMR7
rf /FA 104[83 42 1[37 37 24[37 42 42 60 42 42 23 32 28
42 42 42 42 65 23 42 23 23 42 42 28 37 42 37 42 37 3[28
1[28 1[60 60 78 60 60 51 46 55 1[46 60 60 74 51 60 32
28 60 60 46 51 60 55 55 60 1[37 3[23 23 42 42 42 42 42
42 42 42 42 42 23 21 28 21 2[28 28 28 35[46 46 2[{
TeXBase1Encoding ReEncodeFont}78 83.022 /Times-Roman
rf /FB 192[48 63[{}1 83.022 /CMMIB10 rf /FC 134[60 2[60
66 40 47 53 2[60 66 100 33 2[33 66 60 40 53 1[53 1[60
10[86 2[66 10[93 1[73 3[80 86 19[40 42[66 2[{
TeXBase1Encoding ReEncodeFont}25 119.552 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 656 448 a FC(F)m(ormal)30 b(V)-12
b(eri\002cation)31 b(f)m(or)e(High-Assurance)i(Beha)m(vioral)1699
598 y(Synthesis)2177 554 y FB(?)868 886 y FA(Sandip)19
b(Ray)1253 856 y Fz(1)1290 886 y FA(,)i(K)n(echeng)e(Hao)1785
856 y Fz(2)1821 886 y FA(,)i(Y)-8 b(an)19 b(Chen)2189
856 y Fz(3)2226 886 y FA(,)h(Fei)h(Xie)2514 856 y Fz(2)2551
886 y FA(,)g(and)f(Jin)g(Y)-8 b(ang)3024 856 y Fz(4)667
1029 y Fy(1)739 1060 y Fx(Department)19 b(of)g(Computer)h(Sciences,)e
(Uni)n(v)o(ersity)i(of)e(T)-5 b(e)o(xas)19 b(at)g(Austin,)g(Austin,)f
(TX)g(78712)716 1120 y Fy(2)788 1152 y Fx(Department)h(of)g(Computer)h
(Science,)e(Portland)h(State)f(Uni)n(v)o(ersity)-5 b(,)19
b(Portland,)g(OR)f(97207)987 1211 y Fy(3)1059 1243 y
Fx(T)-6 b(o)o(yota)19 b(T)-5 b(echnological)20 b(Institute)f(at)g
(Chicago,)g(Chicago,)g(IL)g(60637)2907 1211 y Fw(y)1015
1303 y Fy(4)1087 1334 y Fx(Strate)o(gic)g(CAD)f(Labs,)h(Intel)f
(Corporation,)i(Hillsboro,)e(OR)h(97124)759 1630 y Fv(Abstract.)41
b Fx(W)-6 b(e)29 b(present)g(a)g(frame)n(w)o(ork)h(for)f(certifying)g
(hardw)o(are)h(designs)g(generated)759 1721 y(through)c(beha)o(vioral)f
(synthesis,)g(by)g(using)h(formal)e(v)o(eri\002cation)h(to)f(certify)h
(the)f(associ-)759 1813 y(ated)17 b(synthesis)h(transformations.)g(W)-6
b(e)16 b(sho)n(w)i(ho)n(w)f(to)g(decompose)i(this)e(certi\002cation)f
(into)759 1904 y(tw)o(o)g(components,)h(which)f(can)h(be)e(respecti)n
(v)o(ely)i(handled)g(by)f(the)g(complementary)h(v)o(eri\002-)759
1995 y(cation)j(techniques,)g(theorem)f(pro)o(ving)i(and)e(model)h
(checking.)g(The)f(approach)i(produces)759 2087 y(a)e(certi\002ed)f
(reference)h(\003o)n(w)-5 b(,)18 b(composed)i(of)f(transformations)g
(distilled)f(from)h(production)759 2178 y(synthesis)25
b(tools)f(b)o(ut)f(represented)i(as)f(transformations)h(on)f(graphs)h
(with)e(an)i(associated)759 2269 y(formal)20 b(semantics.)g(This)f
(tool-independent)j(abstraction)e(disentangles)h(our)f(frame)n(w)o(ork)
759 2361 y(from)g(the)g(inner)h(w)o(orkings)g(of)f(speci\002c)g
(synthesis)h(tools)f(while)g(permitting)g(certi\002cation)759
2452 y(of)f(hardw)o(are)i(designs)f(generated)g(from)f(a)g(broad)h
(class)f(of)g(beha)o(vioral)h(descriptions.)g(W)-6 b(e)759
2543 y(pro)o(vide)20 b(e)o(xperimental)g(results)f(suggesting)h(the)f
(scalability)g(on)g(practical)g(designs.)523 2805 y Fu(1)99
b(Intr)n(oduction)523 2988 y FA(Recent)30 b(years)f(ha)n(v)o(e)g(seen)g
(high)g(comple)o(xity)e(in)j(hardw)o(are)e(designs,)g(making)g(it)j
(challenging)523 3088 y(to)22 b(de)n(v)o(elop)e(reliable,)h
(high-quality)f(systems)i(through)e(hand-crafted)f(Re)o(gister)i(T)m
(ransfer)g(Le)n(v)o(el)523 3188 y(\(R)-5 b(TL\))15 b(or)h(gate-le)n(v)o
(el)e(implementations.)f(This)j(has)g(moti)n(v)n(ated)e(a)i(gradual)e
(migration)g(a)o(w)o(ay)i(from)523 3287 y(R)-5 b(TL)26
b(to)n(w)o(ards)e(Electronic)g(System)h(Le)n(v)o(el)g(\(ESL\))f
(designs)h(which)g(permit)f(description)g(of)h(de-)523
3387 y(sign)d(functionality)d(abstractly)i(in)h(high-le)n(v)o(el)d
(languages,)h Ft(e)o(.g)o(.)p FA(,)g(SystemC.)i(Ho)n(we)n(v)o(er)m(,)e
(the)h(ESL)523 3487 y(approach)15 b(crucially)i(depends)f(on)h
(reliable)g(tools)h(for)f Ft(behavior)o(al)f(synthesis)p
FA(,)h(that)h(is,)g(automated)523 3586 y(synthesis)h(of)h(a)f(hardw)o
(are)f(circuit)h(from)g(its)h(ESL)g(description.)d(Beha)n(vioral)i
(synthesis)g(tools)h(ap-)523 3686 y(ply)g(a)h(sequence)e(of)g
(transformations)f(to)j(compile)e(the)h(ESL)g(description)f(to)i(an)f
(R)-5 b(TL)20 b(design.)648 3785 y(Se)n(v)o(eral)i(beha)n(vioral)g
(synthesis)i(tools)g(are)g(a)n(v)n(ailable)f(today)f([1\2264].)g(Ne)n
(v)o(ertheless,)h(and)g(de-)523 3885 y(spite)j(its)h(great)e(need,)g
(beha)n(vioral)e(synthesis)j(has)g(not)f(yet)h(found)e(wide)h
(acceptance)g(in)g(indus-)523 3985 y(trial)30 b(practice.)f(A)i(major)e
(barrier)f(to)i(its)h(adoption)d(is)j(the)f(lack)g(of)g(designers')e
(con\002dence)g(in)523 4084 y(correctness)19 b(of)g(synthesis)g(tools)h
(themselv)o(es.)e(The)i(dif)n(ference)d(in)j(abstraction)e(le)n(v)o(el)
h(between)g(a)523 4184 y(synthesized)e(design)g(and)g(the)g(ESL)h
(description)e(puts)i(the)f(onus)g(on)h(beha)n(vioral)e(synthesis)h(to)
h(en-)523 4284 y(sure)i(that)g(the)g(synthesized)f(design)g(indeed)g
(conforms)f(to)i(the)g(description.)f(On)h(the)g(other)f(hand,)523
4383 y(synthesis)e(transformations)e(necessary)h(to)h(produce)e
(designs)i(satisfying)f(the)i(gro)n(wing)d(demands)523
4483 y(of)25 b(performance)d(and)i(po)n(wer)g(include)g(comple)o(x)f
(and)i(aggressi)n(v)o(e)e(optimizations)h(which)g(must)523
4582 y(respect)f(subtle)g(in)m(v)n(ariants.)f(Consequently)-5
b(,)21 b(synthesis)i(tools)g(are)g(often)g(either)g(\(a\))g(error)n
(-prone)523 4682 y(or)d(\(b\))g(o)o(v)o(erly)e(conserv)n(ati)n(v)o(e,)g
(producing)f(circuits)j(of)g(poor)f(quality)g(and)h(performance)d([4,)c
(5].)p 523 4745 473 4 v 555 4801 a Fw(y)606 4833 y Fx(Y)-7
b(an)15 b(Chen)h(w)o(as)g(a)f(M.S.)f(student)i(at)f(Portland)h(State)e
(Uni)n(v)o(ersity)i(when)g(he)f(participated)h(in)f(this)g(research.)
551 4893 y Fs(?)606 4924 y Fx(This)k(research)g(w)o(as)g(partially)g
(supported)h(by)g(a)f(grant)g(from)g(Intel)f(Corporation.)p
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 648 448 a FA(In)24 b(this)i(paper)m(,)e(we)h(de)n
(v)o(elop)f(a)h(scalable,)g(mechanized)e(frame)n(w)o(ork)h(for)g
(certifying)g(beha)n(v-)523 548 y(ioral)d(synthesis)g(\003o)n(ws.)g
(Certi\002cation)g(of)g(a)h(synthesis)f(\003o)n(w)g(amounts)f(to)i(the)
f(guarantee)e(that)i(its)523 648 y(output)27 b(preserv)o(es)h(the)g
(semantics)h(of)f(its)h(input)f(description;)f(thus,)i(the)f(question)g
(of)g(correct-)523 747 y(ness)c(of)g(the)g(synthesized)f(design)g(is)i
(reduced)d(to)i(the)g(question)f(of)h(analysis)g(of)f(the)h(beha)n
(vioral)523 847 y(description.)18 b(Our)i(approach)e(is)k
(distinguished)c(by)i(tw)o(o)g(k)o(e)o(y)g(features:)581
997 y Fr(\226)41 b FA(Our)22 b(frame)n(w)o(ork)e(is)j
Ft(independent)c FA(of)j(the)g(inner)f(w)o(orkings)g(of)h(a)g
(speci\002c)h(tool,)e(and)h(can)g(be)664 1097 y(applied)f(to)g(certify)
g(designs)g(synthesized)f(by)h(dif)n(ferent)f(tools)h(from)f(a)i(broad)
e(class)i(of)f(ESL)664 1197 y(descriptions.)f(This)h(mak)o(es)g(our)f
(approach)f(particularly)g(suitable)i(for)f(certifying)f(security-)664
1296 y(critical)h(hardw)o(are)f(which)h(are)g(often)f(synthesized)h
(from)f(domain-speci\002c)f(languages)h([6].)581 1393
y Fr(\226)41 b FA(The)32 b(approach)e(produces)g(a)i(certi\002ed)g
Ft(r)m(efer)m(ence)g(\003ow)p FA(,)g(which)f(mak)o(es)h(e)o(xplicit)g
(generic)664 1492 y(in)m(v)n(ariants)22 b(that)i(must)f(be)h(preserv)o
(ed)d(by)j(dif)n(ferent)d(transformations.)g(The)j(reference)d(\003o)n
(w)664 1592 y(serv)o(es)f(as)h(a)g(formal)e(speci\002cation)g(for)h
(reliable,)f(aggressi)n(v)o(e)g(synthesis)h(transformations.)648
1746 y(F)o(ormal)27 b(v)o(eri\002cation)g(has)h(enjo)o(yed)f
(signi\002cant)h(successes)h(in)g(the)f(analysis)g(of)g(industrial)523
1845 y(hardw)o(are)20 b(designs)i([7,)13 b(8].)21 b(Ne)n(v)o
(ertheless,)g(applying)f(formal)h(v)o(eri\002cation)f(directly)h(to)h
(certify)f(a)523 1945 y Ft(synthesized)j FA(design)g(is)h(undesirable)e
(for)h(tw)o(o)g(reasons.)g(First,)h(it)g(defeats)f(the)h(v)o(ery)e
(purpose)g(of)523 2044 y(beha)n(vioral)c(synthesis)h(as)h(a)g(v)o
(ehicle)f(for)f(raising)h(design)g(abstraction)f(since)i(it)g(requires)
f(reason-)523 2144 y(ing)e(at)g(the)g(le)n(v)o(el)f(of)h(the)g
(synthesized)f(design)g(rather)g(than)g(the)h(beha)n(vioral)f
(description.)f(Second,)523 2244 y(the)31 b(cost)f(of)g(analyzing)f(a)i
(comple)o(x)e(design)h(is)h(substantial)f(and)g(the)h(cost)f(must)h(be)
f(incurred)523 2343 y(for)c(each)f(design)h(certi\002cation.)f
(Instead,)g(our)h(approach)e(tar)o(gets)h(the)i Ft(synthesis)f(\003ow)p
FA(,)g(thereby)523 2443 y(raising)20 b(the)g(le)n(v)o(el)g(of)g
(abstraction)f(necessary)g(for)h(design)f(certi\002cation.)648
2543 y(In)30 b(the)h(remainder)f(of)g(this)i(section,)e(we)i(\002rst)g
(pro)o(vide)d(a)i(brief)f(o)o(v)o(ervie)n(w)f(of)i(beha)n(vioral)523
2642 y(synthesis)20 b(with)h(an)f(illustrati)n(v)o(e)f(e)o(xample;)g
(we)i(then)e(describe)h(our)f(approach)f(in)j(greater)e(detail.)523
2879 y Fr(1.1)82 b(Beha)n(vioral)19 b(Synthesis)i(and)f(An)h
(Illustrati)o(v)o(e)f(Example)523 3032 y FA(A)25 b(beha)n(vioral)e
(synthesis)h(tool)g(accepts)h(a)g(design)e(description)g(and)h(a)h
(library)f(of)g(hardw)o(are)f(re-)523 3132 y(sources;)e(it)h(performs)d
(a)j(sequence)e(of)h(transformations)d(on)j(the)g(description)f(to)h
(generate)f(R)-5 b(TL.)523 3232 y(The)20 b(transformations)e(are)i
(roughly)e(partitioned)g(into)i(the)h(follo)n(wing)d(three)i(phases.)
581 3382 y Fr(\226)41 b(Compiler)20 b(transf)n(ormations.)d
FA(These)i(include)f(loop)g(unrolling,)f(common)h(sube)o(xpression)664
3482 y(elimination,)31 b(cop)o(y)f(propagation,)f(code)i(motion,)f
(etc.)i(Furthermore,)d(e)o(xpensi)n(v)o(e)h(opera-)664
3581 y(tions)20 b(\()p Ft(e)o(.g)o(.)p FA(,)f(di)n(vision\))g(are)h
(often)f(replaced)g(with)i(simpler)e(ones)h(\()p Ft(e)o(.g)o(.)p
FA(,)f(subtraction\).)581 3678 y Fr(\226)41 b(Scheduling)o(.)20
b FA(This)f(phase)g(determines)g(the)g(clock)g(step)h(for)e(each)h
(operation.)f(The)h(ordering)664 3778 y(between)c(operations)f(is)i
(constrained)e(by)h(the)h(data)f(and)g(control)f(dependencies.)f
(Scheduling)664 3877 y(transformations)19 b(include)i(chaining)f
(operations)g(across)h(conditional)f(blocks)h(and)g(decom-)664
3977 y(posing)i(one)h(operation)e(into)i(a)g(sequence)f(of)h(multi-c)o
(ycle)e(operations)h(based)g(on)h(resource)664 4076 y(constraints.)f
(Furthermore,)e(se)n(v)o(eral)i(compiler)g(transformations)e(are)j
(emplo)o(yed,)e(e)o(xploit-)664 4176 y(ing)e(\(and)f(creating)g
(opportunities)f(for\))i(operation)e(decomposition)g(and)h(code)h
(motions.)581 4273 y Fr(\226)41 b(Resour)o(ce)31 b(binding)g(and)h
(contr)o(ol)d(synthesis.)j FA(This)f(phase)g(binds)f(operations)g(to)h
(func-)664 4372 y(tional)26 b(units,)f(allocates)h(and)f(binds)h(re)o
(gisters,)f(and)g(generates)g(the)h(control)e(circuit)i(to)g(im-)664
4472 y(plement)19 b(the)i(schedule.)523 4625 y(After)26
b(these)h(transformations,)d(the)i(design)g(can)h(be)f(e)o(xpressed)f
(as)i(R)-5 b(TL.)27 b(This)g(design)f(is)h(sub-)523 4725
y(jected)20 b(to)g(further)f(manual)g(optimizations)g(to)h(\002ne-tune)
f(for)h(performance)d(and)j(po)n(wer)-5 b(.)648 4825
y(Each)19 b(synthesis)i(transformation)d(is)j(non-tri)n(vial.)d(The)i
(consequence)e(of)i(their)g(composition)523 4924 y(is)h(a)g
(signi\002cant)f(dif)n(ference)f(in)i(abstraction)e(from)g(the)i
(original)e(description.)g(T)-7 b(o)21 b(illustrate)f(this,)p
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 539 470 a Fq(v)t(o)t(i)t(d)45 b
Fp(e)7 b(n)g(c)g(r)g(y)g(p)g(t)49 b(\()17 b(u)9 b(i)g(n)g(t)g(3)g(2)p
1250 470 18 4 v 42 w(t)h Fo(\003)37 b Fp(v)14 b(,)53
b(u)9 b(i)g(n)g(t)g(3)g(2)p 1703 470 V 43 w(t)h Fo(\003)38
b Fp(k)10 b(\))44 b Fo(f)611 536 y Fn(/)7 b Fo(\003)48
b Fn(s)7 b(e)g(t)43 b(u)r(p)h Fo(\003)7 b Fn(/)614 603
y Fp(u)i(i)g(n)g(t)g(3)g(2)p 831 603 V 42 w(t)47 b(v)s(0)s(=)t(v)12
b([)e(0)h(])19 b(,)48 b(v)s(1)s(=)t(v)12 b([)e(1)g(])20
b(,)44 b(s)o(u)o(m)s(=)t(0)9 b(,)51 b(i)20 b(;)611 669
y Fn(/)7 b Fo(\003)42 b Fn(a)e(k)t(e)t(y)j(s)5 b(c)g(h)g(e)g(d)g(u)g(l)
g(e)50 b(c)7 b(o)g(n)g(s)g(t)g(a)g(n)g(t)46 b Fo(\003)7
b Fn(/)614 736 y Fp(u)i(i)g(n)g(t)g(3)g(2)p 831 736 V
42 w(t)52 b(d)8 b(e)g(l)g(t)g(a)j(=)q(0)t(x)s(9)s(e)s(3)s(7)s(7)s(9)s
(b)s(9)g(;)611 802 y Fn(/)c Fo(\003)44 b Fn(c)s(a)s(c)s(h)s(e)g(k)t(e)t
(y)g Fo(\003)7 b Fn(/)614 868 y Fp(u)i(i)g(n)g(t)g(3)g(2)p
831 868 V 42 w(t)47 b(k)s(0)s(=)t(k)12 b([)e(0)h(])19
b(,)48 b(k)s(1)s(=)t(k)12 b([)e(1)g(])20 b(,)921 935
y(k)s(2)s(=)t(k)12 b([)e(2)h(])19 b(,)48 b(k)s(3)s(=)t(k)14
b([)e(3)g(])g(;)611 1068 y Fn(/)7 b Fo(\003)47 b Fn(b)6
b(a)g(s)g(i)g(c)51 b(c)7 b(y)g(c)g(l)g(e)53 b(s)10 b(t)g(a)h(r)f(t)52
b Fo(\003)7 b Fn(/)611 1134 y Fq(f)g(o)g(r)49 b Fp(\()19
b(i)d(=)6 b(0)g(;)51 b(i)34 b Fm(<)i Fp(3)6 b(2)g(;)52
b(i)15 b(+)t(+)t(\))41 b Fo(f)673 1200 y Fp(s)o(u)o(m)34
b(+)q(=)43 b(d)8 b(e)g(l)g(t)g(a)19 b(;)677 1267 y(v)s(0)38
b(+)q(=)46 b(\()10 b(\()j(v)r(1)s Fm(<)l(<)n Fp(4)n(\))n(+k)s(0)i(\))d
(\210)g(\()i(v)s(1)39 b(+)34 b(s)o(u)o(m)6 b(\))930 1333
y(\210)12 b(\()g(\()i(v)r(1)r Fm(>)l(>)n Fp(5)n(\))n(+)q(k)s(1)g(\))e
(;)677 1400 y(v)s(1)38 b(+)q(=)46 b(\()10 b(\()j(v)r(0)s
Fm(<)l(<)n Fp(4)n(\))n(+k)s(2)i(\))d(\210)g(\()i(v)s(0)39
b(+)34 b(s)o(u)o(m)6 b(\))930 1466 y(\210)12 b(\()g(\()i(v)r(0)r
Fm(>)l(>)n Fp(5)n(\))n(+)q(k)s(3)g(\))e(;)605 1533 y
Fo(g)611 1665 y Fn(/)7 b Fo(\003)43 b Fn(e)r(n)r(d)h(c)7
b(y)g(c)g(l)g(e)49 b Fo(\003)7 b Fn(/)607 1732 y Fp(v)k([)d(0)g(])g(=)
13 b(v)s(0)f(;)47 b(v)11 b([)d(1)g(])g(=)k(v)s(1)h(;)535
1798 y Fo(g)2118 1847 y @beginspecial 0 @llx 0 @lly 418
@urx 450 @ury 1620 @rwi @setspecial
%%BeginDocument: figures/circuit.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\Documents and Settings\HKC\Desktop\fig\eps\circuit.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 418 450
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 418 450
%AI3_TileBox: 0 0 418 450
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 J
1 j
  56.0400 302.1600 m
  50.2800 302.1600 L
  50.2800 335.0400 L
  91.4400 335.0400 L
  91.4400 345.2400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  55.3200 304.8000 m
  55.3200 299.5200 L
  60.6000 302.1600 L
  55.3200 304.8000 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  179.1600 328.8000 m
  217.5600 328.8000 L
  217.5600 309.4800 L
  179.1600 309.4800 L
  179.1600 328.8000 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  179.1600 309.4800 m
  179.1600 328.8000 L
  217.5600 328.8000 L
  217.5600 309.4800 L
  179.1600 309.4800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 181.5600 315.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(V\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.3600 315.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.8400 315.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 202.3200 315.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.8000 315.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(p\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  82.4400 302.1600 m
  97.4400 302.1600 L
  97.4400 302.4000 L
  97.4400 302.6400 L
  97.5600 302.8800 L
  97.5600 303.1200 L
  97.6800 303.3600 L
  97.8000 303.4800 L
  98.0400 303.8400 L
  98.4000 304.0800 L
  98.6400 304.2000 L
  98.7600 304.3200 L
  99.0000 304.4400 L
  99.2400 304.4400 L
  99.4800 304.4400 L
  99.7200 304.4400 L
  99.9600 304.4400 L
  100.2000 304.4400 L
  100.3200 304.4400 L
  100.5600 304.3200 L
  100.8000 304.2000 L
  100.9200 304.0800 L
  101.2800 303.8400 L
  101.6400 303.4800 L
  101.6400 303.3600 L
  101.8800 303.1200 L
  101.8800 302.8800 L
  102.0000 302.6400 L
  102.0000 302.4000 L
  102.0000 302.1600 L
  198.3600 302.1600 L
  198.3600 309.4800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  83.1600 299.5200 m
  83.1600 304.8000 L
  77.7600 302.1600 L
  83.1600 299.5200 L
F
U
u
  0.000 0.000 0.000 1.000 K
  198.3600 333.4800 m
  198.3600 350.6400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  201.0000 334.2000 m
  195.7200 334.2000 L
  198.3600 328.8000 L
  201.0000 334.2000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  215.8800 389.4000 m
  215.8800 413.6400 L
  186.1200 413.6400 L
  186.1200 413.6400 L
  186.1200 413.6400 L
  186.0000 413.7600 L
  186.0000 414.0000 L
  186.0000 414.2400 L
  185.8800 414.4800 L
  185.8800 414.7200 L
  185.6400 414.8400 L
  185.4000 415.2000 L
  185.0400 415.4400 L
  184.9200 415.5600 L
  184.6800 415.6800 L
  184.5600 415.8000 L
  184.2000 415.8000 L
  183.9600 415.8000 L
  183.8400 415.8000 L
  183.6000 415.8000 L
  183.3600 415.8000 L
  183.1200 415.8000 L
  182.8800 415.6800 L
  182.7600 415.5600 L
  182.5200 415.4400 L
  182.1600 415.2000 L
  181.9200 414.8400 L
  181.8000 414.7200 L
  181.6800 414.4800 L
  181.5600 414.2400 L
  181.5600 414.0000 L
  181.5600 413.7600 L
  181.5600 413.6400 L
  162.3600 413.6400 L
  162.3600 413.6400 L
  162.2400 413.7600 L
  162.2400 414.0000 L
  162.1200 414.2400 L
  162.1200 414.4800 L
  162.0000 414.7200 L
  161.8800 414.8400 L
  161.6400 415.2000 L
  161.2800 415.4400 L
  161.0400 415.5600 L
  160.9200 415.6800 L
  160.6800 415.8000 L
  160.5600 415.8000 L
  160.2000 415.8000 L
  159.9600 415.8000 L
  159.8400 415.8000 L
  159.6000 415.8000 L
  159.3600 415.8000 L
  159.1200 415.6800 L
  158.8800 415.5600 L
  158.7600 415.4400 L
  158.4000 415.2000 L
  158.1600 414.8400 L
  158.0400 414.7200 L
  157.9200 414.4800 L
  157.8000 414.2400 L
  157.8000 414.0000 L
  157.8000 413.7600 L
  157.8000 413.6400 L
  93.7200 413.6400 L
  93.7200 413.6400 L
  93.7200 413.7600 L
  93.7200 414.0000 L
  93.6000 414.2400 L
  93.6000 414.4800 L
  93.4800 414.7200 L
  93.3600 414.8400 L
  93.1200 415.2000 L
  92.7600 415.4400 L
  92.5200 415.5600 L
  92.4000 415.6800 L
  92.1600 415.8000 L
  91.9200 415.8000 L
  91.8000 415.8000 L
  91.4400 415.8000 L
  91.2000 415.8000 L
  90.9600 415.8000 L
  90.8400 415.8000 L
  90.6000 415.6800 L
  90.3600 415.5600 L
  90.2400 415.4400 L
  89.8800 415.2000 L
  89.5200 414.8400 L
  89.5200 414.7200 L
  89.4000 414.4800 L
  89.2800 414.2400 L
  89.1600 414.0000 L
  89.1600 413.7600 L
  89.1600 413.6400 L
  10.5600 413.6400 L
  10.5600 274.2000 L
  19.3200 274.2000 L
  19.3200 274.2000 L
  19.3200 274.3200 L
  19.3200 274.6800 L
  19.3200 274.9200 L
  19.4400 275.0400 L
  19.5600 275.2800 L
  19.6800 275.4000 L
  19.9200 275.7600 L
  20.2800 276.0000 L
  20.5200 276.2400 L
  20.6400 276.2400 L
  20.8800 276.3600 L
  21.1200 276.3600 L
  21.3600 276.4800 L
  21.6000 276.4800 L
  21.8400 276.4800 L
  22.0800 276.3600 L
  22.2000 276.3600 L
  22.4400 276.2400 L
  22.6800 276.2400 L
  22.8000 276.0000 L
  23.1600 275.7600 L
  23.5200 275.4000 L
  23.5200 275.2800 L
  23.7600 275.0400 L
  23.7600 274.9200 L
  23.7600 274.6800 L
  23.8800 274.3200 L
  23.8800 274.2000 L
  26.1600 274.2000 L
  26.1600 274.2000 L
  26.1600 274.3200 L
  26.1600 274.6800 L
  26.2800 274.9200 L
  26.2800 275.0400 L
  26.4000 275.2800 L
  26.5200 275.4000 L
  26.8800 275.7600 L
  27.1200 276.0000 L
  27.3600 276.2400 L
  27.6000 276.2400 L
  27.7200 276.3600 L
  27.9600 276.3600 L
  28.2000 276.4800 L
  28.4400 276.4800 L
  28.6800 276.4800 L
  28.8000 276.3600 L
  29.0400 276.3600 L
  29.2800 276.2400 L
  29.5200 276.2400 L
  29.7600 276.0000 L
  30.0000 275.7600 L
  30.3600 275.4000 L
  30.4800 275.2800 L
  30.4800 275.0400 L
  30.6000 274.9200 L
  30.7200 274.6800 L
  30.7200 274.3200 L
  30.7200 274.2000 L
  69.6000 274.2000 L
  69.6000 294.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  218.5200 390.0000 m
  213.2400 390.0000 L
  215.8800 384.7200 L
  218.5200 390.0000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  46.5600 213.7200 m
  46.5600 268.9200 L
  99.7200 268.9200 L
  99.7200 339.3600 L
  198.3600 339.3600 L
  198.3600 350.6400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  49.2000 214.4400 m
  43.9200 214.4400 L
  46.5600 209.1600 L
  49.2000 214.4400 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  64.9200 151.4400 m
  103.3200 151.4400 L
  103.3200 132.0000 L
  64.9200 132.0000 L
  64.9200 151.4400 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  64.9200 132.0000 m
  64.9200 151.4400 L
  103.3200 151.4400 L
  103.3200 132.0000 L
  64.9200 132.0000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 67.9200 138.2400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 87.3600 138.2400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(39\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  84.0000 151.4400 m
  84.0000 155.1600 L
  84.6000 155.1600 L
  84.6000 159.3600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  86.7600 156.7200 m
  81.4800 156.7200 L
  84.0000 151.4400 L
  86.7600 156.7200 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  253.9200 341.8800 m
  308.7600 341.8800 L
  308.7600 307.9200 L
  253.9200 307.9200 L
  253.9200 341.8800 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  253.9200 307.9200 m
  253.9200 341.8800 L
  308.7600 341.8800 L
  308.7600 307.9200 L
  253.9200 307.9200 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 272.8800 328.4400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Phi\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 262.3200 314.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(newPhi\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  282.8400 272.8800 m
  329.4000 272.8800 L
  329.4000 253.5600 L
  282.8400 253.5600 L
  282.8400 272.8800 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  282.8400 253.5600 m
  282.8400 272.8800 L
  329.4000 272.8800 L
  329.4000 253.5600 L
  282.8400 253.5600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 287.7600 259.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(newbin\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  292.4400 289.4400 m
  281.4000 289.4400 L
  281.4000 307.9200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  291.7200 292.2000 m
  291.7200 286.8000 L
  297.1200 289.4400 L
  291.7200 292.2000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  318.9600 289.4400 m
  326.5200 289.4400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  319.5600 286.8000 m
  319.5600 292.0800 L
  314.1600 289.4400 L
  319.5600 286.8000 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 331.5600 287.1600 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  306.1200 272.8800 m
  306.1200 277.0800 L
  306.0000 277.0800 L
  306.0000 281.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  308.8800 278.2800 m
  303.4800 278.2800 L
  306.1200 272.8800 L
  308.8800 278.2800 L
F
U
u
  0.000 0.000 0.000 1.000 K
  298.8000 346.5600 m
  298.8000 352.0800 L
  343.6800 352.0800 L
  343.6800 247.5600 L
  306.1200 247.5600 L
  306.1200 253.5600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  301.5600 347.1600 m
  296.1600 347.1600 L
  298.8000 341.8800 L
  301.5600 347.1600 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  171.0000 384.7200 m
  225.8400 384.7200 L
  225.8400 350.6400 L
  171.0000 350.6400 L
  171.0000 384.7200 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  171.0000 350.6400 m
  171.0000 384.7200 L
  225.8400 384.7200 L
  225.8400 350.6400 L
  171.0000 350.6400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 190.0800 371.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Phi\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 184.8000 357.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(V\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.6000 357.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 199.0800 357.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 205.4400 357.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  297.3600 228.1200 m
  297.3600 227.7600 L
  297.3600 227.2800 L
  297.4800 226.8000 L
  297.4800 226.4400 L
  297.6000 226.0800 L
  297.7200 225.7200 L
  297.8400 225.3600 L
  298.0800 225.0000 L
  298.3200 224.2800 L
  298.8000 223.5600 L
  299.2800 222.9600 L
  299.7600 222.3600 L
  300.3600 221.7600 L
  300.9600 221.4000 L
  301.6800 220.9200 L
  302.4000 220.5600 L
  302.7600 220.4400 L
  303.1200 220.3200 L
  303.6000 220.2000 L
  303.9600 220.0800 L
  304.3200 220.0800 L
  304.8000 219.9600 L
  305.1600 219.9600 L
  305.5200 219.9600 L
  306.0000 219.9600 L
  306.4800 219.9600 L
  306.8400 220.0800 L
  307.2000 220.0800 L
  307.6800 220.2000 L
  308.0400 220.3200 L
  308.4000 220.4400 L
  308.7600 220.5600 L
  309.4800 220.9200 L
  310.2000 221.4000 L
  310.8000 221.7600 L
  311.4000 222.3600 L
  312.0000 222.9600 L
  312.3600 223.5600 L
  312.8400 224.2800 L
  313.2000 225.0000 L
  313.3200 225.3600 L
  313.4400 225.7200 L
  313.5600 226.0800 L
  313.6800 226.4400 L
  313.6800 226.8000 L
  313.8000 227.2800 L
  313.8000 227.7600 L
  313.8000 228.1200 L
  313.8000 228.1200 L
  313.8000 228.6000 L
  313.8000 228.9600 L
  313.6800 229.4400 L
  313.6800 229.8000 L
  313.5600 230.1600 L
  313.4400 230.6400 L
  313.3200 231.0000 L
  313.2000 231.3600 L
  312.8400 232.0800 L
  312.3600 232.6800 L
  312.0000 233.4000 L
  311.4000 234.0000 L
  310.8000 234.4800 L
  310.2000 234.9600 L
  309.4800 235.4400 L
  308.7600 235.6800 L
  308.4000 235.8000 L
  308.0400 235.9200 L
  307.6800 236.1600 L
  307.2000 236.1600 L
  306.8400 236.2800 L
  306.4800 236.2800 L
  306.0000 236.2800 L
  305.5200 236.2800 L
  305.1600 236.2800 L
  304.8000 236.2800 L
  304.3200 236.2800 L
  303.9600 236.1600 L
  303.6000 236.1600 L
  303.1200 235.9200 L
  302.7600 235.8000 L
  302.4000 235.6800 L
  301.6800 235.4400 L
  300.9600 234.9600 L
  300.3600 234.4800 L
  299.7600 234.0000 L
  299.2800 233.4000 L
  298.8000 232.6800 L
  298.3200 232.0800 L
  298.0800 231.3600 L
  297.8400 231.0000 L
  297.7200 230.6400 L
  297.6000 230.1600 L
  297.4800 229.8000 L
  297.4800 229.4400 L
  297.3600 228.9600 L
  297.3600 228.6000 L
  297.3600 228.1200 L
F
U
u
  0.000 0.000 0.000 1.000 K
  297.3600 228.1200 m
  297.3600 227.7600 L
  297.3600 227.2800 L
  297.4800 226.8000 L
  297.4800 226.4400 L
  297.6000 226.0800 L
  297.7200 225.7200 L
  297.8400 225.3600 L
  298.0800 225.0000 L
  298.3200 224.2800 L
  298.8000 223.5600 L
  299.2800 222.9600 L
  299.7600 222.3600 L
  300.3600 221.7600 L
  300.9600 221.4000 L
  301.6800 220.9200 L
  302.4000 220.5600 L
  302.7600 220.4400 L
  303.1200 220.3200 L
  303.6000 220.2000 L
  303.9600 220.0800 L
  304.3200 220.0800 L
  304.8000 219.9600 L
  305.1600 219.9600 L
  305.5200 219.9600 L
  306.0000 219.9600 L
  306.4800 219.9600 L
  306.8400 220.0800 L
  307.2000 220.0800 L
  307.6800 220.2000 L
  308.0400 220.3200 L
  308.4000 220.4400 L
  308.7600 220.5600 L
  309.4800 220.9200 L
  310.2000 221.4000 L
  310.8000 221.7600 L
  311.4000 222.3600 L
  312.0000 222.9600 L
  312.3600 223.5600 L
  312.8400 224.2800 L
  313.2000 225.0000 L
  313.3200 225.3600 L
  313.4400 225.7200 L
  313.5600 226.0800 L
  313.6800 226.4400 L
  313.6800 226.8000 L
  313.8000 227.2800 L
  313.8000 227.7600 L
  313.8000 228.1200 L
  313.8000 228.1200 L
  313.8000 228.6000 L
  313.8000 228.9600 L
  313.6800 229.4400 L
  313.6800 229.8000 L
  313.5600 230.1600 L
  313.4400 230.6400 L
  313.3200 231.0000 L
  313.2000 231.3600 L
  312.8400 232.0800 L
  312.3600 232.6800 L
  312.0000 233.4000 L
  311.4000 234.0000 L
  310.8000 234.4800 L
  310.2000 234.9600 L
  309.4800 235.4400 L
  308.7600 235.6800 L
  308.4000 235.8000 L
  308.0400 235.9200 L
  307.6800 236.1600 L
  307.2000 236.1600 L
  306.8400 236.2800 L
  306.4800 236.2800 L
  306.0000 236.2800 L
  305.5200 236.2800 L
  305.1600 236.2800 L
  304.8000 236.2800 L
  304.3200 236.2800 L
  303.9600 236.1600 L
  303.6000 236.1600 L
  303.1200 235.9200 L
  302.7600 235.8000 L
  302.4000 235.6800 L
  301.6800 235.4400 L
  300.9600 234.9600 L
  300.3600 234.4800 L
  299.7600 234.0000 L
  299.2800 233.4000 L
  298.8000 232.6800 L
  298.3200 232.0800 L
  298.0800 231.3600 L
  297.8400 231.0000 L
  297.7200 230.6400 L
  297.6000 230.1600 L
  297.4800 229.8000 L
  297.4800 229.4400 L
  297.3600 228.9600 L
  297.3600 228.6000 L
  297.3600 228.1200 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 297.7200 223.4400 0 Tp
TP
/_Helvetica 13.2500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(==\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  290.4000 227.4000 m
  247.8000 227.4000 L
  247.8000 289.8000 L
  281.4000 289.8000 L
  281.4000 307.9200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  289.6800 230.0400 m
  289.6800 224.7600 L
  295.0800 227.4000 L
  289.6800 230.0400 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 340.0800 225.7200 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(32\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  318.4800 228.1200 m
  326.8800 228.1200 L
  326.8800 228.1200 L
  337.2000 228.1200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  319.0800 225.4800 m
  319.0800 230.7600 L
  313.8000 228.1200 L
  319.0800 225.4800 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  202.5600 289.8000 m
  202.5600 289.3200 L
  202.5600 288.9600 L
  202.5600 288.4800 L
  202.6800 288.1200 L
  202.8000 287.6400 L
  202.9200 287.2800 L
  203.0400 286.9200 L
  203.1600 286.5600 L
  203.5200 285.8400 L
  203.8800 285.1200 L
  204.3600 284.5200 L
  204.8400 283.9200 L
  205.4400 283.4400 L
  206.1600 282.9600 L
  206.7600 282.6000 L
  207.4800 282.2400 L
  207.8400 282.0000 L
  208.3200 281.8800 L
  208.6800 281.8800 L
  209.1600 281.7600 L
  209.5200 281.6400 L
  209.8800 281.6400 L
  210.3600 281.5200 L
  210.7200 281.5200 L
  211.0800 281.5200 L
  211.5600 281.6400 L
  212.0400 281.6400 L
  212.4000 281.7600 L
  212.7600 281.8800 L
  213.1200 281.8800 L
  213.4800 282.0000 L
  213.9600 282.2400 L
  214.5600 282.6000 L
  215.4000 282.9600 L
  216.0000 283.4400 L
  216.6000 283.9200 L
  217.0800 284.5200 L
  217.5600 285.1200 L
  217.9200 285.8400 L
  218.2800 286.5600 L
  218.5200 286.9200 L
  218.6400 287.2800 L
  218.6400 287.6400 L
  218.7600 288.1200 L
  218.8800 288.4800 L
  218.8800 288.9600 L
  219.0000 289.3200 L
  219.0000 289.8000 L
  219.0000 289.8000 L
  219.0000 290.1600 L
  218.8800 290.5200 L
  218.8800 291.0000 L
  218.7600 291.3600 L
  218.6400 291.8400 L
  218.6400 292.2000 L
  218.5200 292.5600 L
  218.2800 292.9200 L
  217.9200 293.6400 L
  217.5600 294.3600 L
  217.0800 294.9600 L
  216.6000 295.5600 L
  216.0000 296.0400 L
  215.4000 296.5200 L
  214.5600 297.0000 L
  213.9600 297.3600 L
  213.4800 297.4800 L
  213.1200 297.6000 L
  212.7600 297.7200 L
  212.4000 297.8400 L
  212.0400 297.8400 L
  211.5600 297.8400 L
  211.0800 297.9600 L
  210.7200 297.9600 L
  210.3600 297.9600 L
  209.8800 297.8400 L
  209.5200 297.8400 L
  209.1600 297.8400 L
  208.6800 297.7200 L
  208.3200 297.6000 L
  207.8400 297.4800 L
  207.4800 297.3600 L
  206.7600 297.0000 L
  206.1600 296.5200 L
  205.4400 296.0400 L
  204.8400 295.5600 L
  204.3600 294.9600 L
  203.8800 294.3600 L
  203.5200 293.6400 L
  203.1600 292.9200 L
  203.0400 292.5600 L
  202.9200 292.2000 L
  202.8000 291.8400 L
  202.6800 291.3600 L
  202.5600 291.0000 L
  202.5600 290.5200 L
  202.5600 290.1600 L
  202.5600 289.8000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  202.5600 289.8000 m
  202.5600 289.3200 L
  202.5600 288.9600 L
  202.5600 288.4800 L
  202.6800 288.1200 L
  202.8000 287.6400 L
  202.9200 287.2800 L
  203.0400 286.9200 L
  203.1600 286.5600 L
  203.5200 285.8400 L
  203.8800 285.1200 L
  204.3600 284.5200 L
  204.8400 283.9200 L
  205.4400 283.4400 L
  206.1600 282.9600 L
  206.7600 282.6000 L
  207.4800 282.2400 L
  207.8400 282.0000 L
  208.3200 281.8800 L
  208.6800 281.8800 L
  209.1600 281.7600 L
  209.5200 281.6400 L
  209.8800 281.6400 L
  210.3600 281.5200 L
  210.7200 281.5200 L
  211.0800 281.5200 L
  211.5600 281.6400 L
  212.0400 281.6400 L
  212.4000 281.7600 L
  212.7600 281.8800 L
  213.1200 281.8800 L
  213.4800 282.0000 L
  213.9600 282.2400 L
  214.5600 282.6000 L
  215.4000 282.9600 L
  216.0000 283.4400 L
  216.6000 283.9200 L
  217.0800 284.5200 L
  217.5600 285.1200 L
  217.9200 285.8400 L
  218.2800 286.5600 L
  218.5200 286.9200 L
  218.6400 287.2800 L
  218.6400 287.6400 L
  218.7600 288.1200 L
  218.8800 288.4800 L
  218.8800 288.9600 L
  219.0000 289.3200 L
  219.0000 289.8000 L
  219.0000 289.8000 L
  219.0000 290.1600 L
  218.8800 290.5200 L
  218.8800 291.0000 L
  218.7600 291.3600 L
  218.6400 291.8400 L
  218.6400 292.2000 L
  218.5200 292.5600 L
  218.2800 292.9200 L
  217.9200 293.6400 L
  217.5600 294.3600 L
  217.0800 294.9600 L
  216.6000 295.5600 L
  216.0000 296.0400 L
  215.4000 296.5200 L
  214.5600 297.0000 L
  213.9600 297.3600 L
  213.4800 297.4800 L
  213.1200 297.6000 L
  212.7600 297.7200 L
  212.4000 297.8400 L
  212.0400 297.8400 L
  211.5600 297.8400 L
  211.0800 297.9600 L
  210.7200 297.9600 L
  210.3600 297.9600 L
  209.8800 297.8400 L
  209.5200 297.8400 L
  209.1600 297.8400 L
  208.6800 297.7200 L
  208.3200 297.6000 L
  207.8400 297.4800 L
  207.4800 297.3600 L
  206.7600 297.0000 L
  206.1600 296.5200 L
  205.4400 296.0400 L
  204.8400 295.5600 L
  204.3600 294.9600 L
  203.8800 294.3600 L
  203.5200 293.6400 L
  203.1600 292.9200 L
  203.0400 292.5600 L
  202.9200 292.2000 L
  202.8000 291.8400 L
  202.6800 291.3600 L
  202.5600 291.0000 L
  202.5600 290.5200 L
  202.5600 290.1600 L
  202.5600 289.8000 L
S
U
u
2.0000 w
  0.000 0.000 0.000 1.000 K
  205.3200 284.1600 m
  216.0000 294.4800 L
S
U
u
  0.000 0.000 0.000 1.000 K
  215.6400 284.2800 m
  205.4400 294.1200 L
S
U
u
0.0000 w
  0.000 0.000 0.000 1.000 K
  197.8800 289.8000 m
  149.0400 289.8000 L
  149.0400 249.9600 L
  140.2800 249.9600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  197.1600 292.4400 m
  197.1600 287.1600 L
  202.5600 289.8000 L
  197.1600 292.4400 L
F
U
u
  0.000 0.000 0.000 1.000 K
  223.5600 289.8000 m
  281.4000 289.8000 L
  281.4000 308.6400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  224.2800 287.1600 m
  224.2800 292.4400 L
  219.0000 289.8000 L
  224.2800 287.1600 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  187.4400 253.9200 m
  234.0000 253.9200 L
  234.0000 234.4800 L
  187.4400 234.4800 L
  187.4400 253.9200 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  187.4400 234.4800 m
  187.4400 253.9200 L
  234.0000 253.9200 L
  234.0000 234.4800 L
  187.4400 234.4800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 196.5600 240.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(sum\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.5200 240.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  210.7200 258.6000 m
  210.7200 281.5200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  213.3600 259.2000 m
  208.0800 259.2000 L
  210.7200 253.9200 L
  213.3600 259.2000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  182.5200 230.4000 m
  201.3600 230.4000 L
  210.7200 234.4800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  183.2400 227.7600 m
  183.2400 233.0400 L
  177.9600 230.4000 L
  183.2400 227.7600 L
F
U
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 223.4400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 228.7200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 233.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 238.9200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 244.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 249.6000 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 255.0000 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 260.4000 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 265.8000 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(b\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 137.1988 271.0800 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  76.3200 213.3600 m
  76.3200 222.2400 L
  101.5200 222.2400 L
  101.5200 222.2400 L
  101.5200 222.4800 L
  101.6400 222.7200 L
  101.6400 222.8400 L
  101.6400 223.0800 L
  101.8800 223.3200 L
  101.8800 223.5600 L
  102.2400 223.8000 L
  102.6000 224.1600 L
  102.7200 224.2800 L
  102.9600 224.2800 L
  103.0800 224.4000 L
  103.3200 224.5200 L
  103.5600 224.5200 L
  103.8000 224.5200 L
  104.0400 224.5200 L
  104.2800 224.5200 L
  104.5200 224.4000 L
  104.7600 224.2800 L
  104.8800 224.2800 L
  105.1200 224.1600 L
  105.4800 223.8000 L
  105.7200 223.5600 L
  105.8400 223.3200 L
  105.8400 223.0800 L
  105.9600 222.8400 L
  106.0800 222.7200 L
  106.0800 222.4800 L
  106.0800 222.2400 L
  122.0400 222.2400 L
  122.0400 222.2400 L
  122.1600 222.4800 L
  122.1600 222.7200 L
  122.1600 222.8400 L
  122.2800 223.0800 L
  122.4000 223.3200 L
  122.5200 223.5600 L
  122.7600 223.8000 L
  123.1200 224.1600 L
  123.2400 224.2800 L
  123.4800 224.2800 L
  123.7200 224.4000 L
  123.9600 224.5200 L
  124.2000 224.5200 L
  124.4400 224.5200 L
  124.5600 224.5200 L
  124.8000 224.5200 L
  125.0400 224.4000 L
  125.2800 224.2800 L
  125.5200 224.2800 L
  125.6400 224.1600 L
  126.0000 223.8000 L
  126.2400 223.5600 L
  126.3600 223.3200 L
  126.4800 223.0800 L
  126.6000 222.8400 L
  126.6000 222.7200 L
  126.6000 222.4800 L
  126.6000 222.2400 L
  169.6800 222.2400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  79.0800 214.0800 m
  73.8000 214.0800 L
  76.3200 208.8000 L
  79.0800 214.0800 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  187.4400 158.0400 m
  242.2800 158.0400 L
  242.2800 123.9600 L
  187.4400 123.9600 L
  187.4400 158.0400 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  187.4400 123.9600 m
  187.4400 158.0400 L
  242.2800 158.0400 L
  242.2800 123.9600 L
  187.4400 123.9600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 206.4000 144.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Phi\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.2400 130.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(V\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 209.0400 130.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.5200 130.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.0000 130.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  112.9200 116.7600 m
  148.2000 116.7600 L
  148.2000 116.7600 L
  148.2000 116.7600 L
  148.2000 116.8800 L
  148.2000 117.2400 L
  148.2000 117.4800 L
  148.3200 117.6000 L
  148.4400 117.8400 L
  148.5600 117.9600 L
  148.8000 118.3200 L
  149.1600 118.5600 L
  149.2800 118.6800 L
  149.5200 118.8000 L
  149.7600 118.9200 L
  150.0000 118.9200 L
  150.2400 119.0400 L
  150.4800 119.0400 L
  150.6000 119.0400 L
  150.8400 118.9200 L
  151.0800 118.9200 L
  151.3200 118.8000 L
  151.5600 118.6800 L
  151.6800 118.5600 L
  152.0400 118.3200 L
  152.2800 117.9600 L
  152.4000 117.8400 L
  152.5200 117.6000 L
  152.6400 117.4800 L
  152.6400 117.2400 L
  152.6400 116.8800 L
  152.7600 116.7600 L
  167.2800 116.7600 L
  167.2800 116.7600 L
  167.2800 116.8800 L
  167.4000 117.2400 L
  167.4000 117.4800 L
  167.5200 117.6000 L
  167.6400 117.8400 L
  167.6400 117.9600 L
  168.0000 118.3200 L
  168.3600 118.5600 L
  168.6000 118.6800 L
  168.7200 118.8000 L
  168.9600 118.9200 L
  169.0800 118.9200 L
  169.3200 119.0400 L
  169.6800 119.0400 L
  169.9200 119.0400 L
  170.0400 118.9200 L
  170.2800 118.9200 L
  170.5200 118.8000 L
  170.7600 118.6800 L
  170.8800 118.5600 L
  171.2400 118.3200 L
  171.4800 117.9600 L
  171.6000 117.8400 L
  171.7200 117.6000 L
  171.8400 117.4800 L
  171.8400 117.2400 L
  171.8400 116.8800 L
  171.8400 116.7600 L
  214.8000 116.7600 L
  214.8000 123.9600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  113.6400 114.0000 m
  113.6400 119.4000 L
  108.2400 116.7600 L
  113.6400 114.0000 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  91.8000 116.7600 m
  91.8000 116.2800 L
  91.9200 115.9200 L
  91.9200 115.4400 L
  91.9200 115.0800 L
  92.1600 114.7200 L
  92.1600 114.2400 L
  92.2800 113.8800 L
  92.5200 113.5200 L
  92.8800 112.8000 L
  93.2400 112.2000 L
  93.7200 111.4800 L
  94.2000 110.8800 L
  94.8000 110.4000 L
  95.4000 109.9200 L
  96.1200 109.4400 L
  96.8400 109.2000 L
  97.2000 109.0800 L
  97.5600 108.8400 L
  98.0400 108.7200 L
  98.4000 108.7200 L
  98.7600 108.6000 L
  99.2400 108.4800 L
  99.6000 108.4800 L
  100.0800 108.4800 L
  100.4400 108.4800 L
  100.9200 108.4800 L
  101.2800 108.6000 L
  101.6400 108.7200 L
  102.1200 108.7200 L
  102.4800 108.8400 L
  102.8400 109.0800 L
  103.3200 109.2000 L
  103.9200 109.4400 L
  104.6400 109.9200 L
  105.3600 110.4000 L
  105.8400 110.8800 L
  106.4400 111.4800 L
  106.8000 112.2000 L
  107.2800 112.8000 L
  107.6400 113.5200 L
  107.7600 113.8800 L
  107.8800 114.2400 L
  108.0000 114.7200 L
  108.1200 115.0800 L
  108.1200 115.4400 L
  108.2400 115.9200 L
  108.2400 116.2800 L
  108.2400 116.7600 L
  108.2400 116.7600 L
  108.2400 117.1200 L
  108.2400 117.6000 L
  108.1200 117.9600 L
  108.1200 118.3200 L
  108.0000 118.8000 L
  107.8800 119.1600 L
  107.7600 119.5200 L
  107.6400 119.8800 L
  107.2800 120.6000 L
  106.8000 121.3200 L
  106.4400 121.9200 L
  105.8400 122.5200 L
  105.3600 123.1200 L
  104.6400 123.4800 L
  103.9200 123.9600 L
  103.3200 124.3200 L
  102.8400 124.4400 L
  102.4800 124.5600 L
  102.1200 124.6800 L
  101.6400 124.6800 L
  101.2800 124.8000 L
  100.9200 124.9200 L
  100.4400 124.9200 L
  100.0800 124.9200 L
  99.6000 124.9200 L
  99.2400 124.9200 L
  98.7600 124.8000 L
  98.4000 124.6800 L
  98.0400 124.6800 L
  97.5600 124.5600 L
  97.2000 124.4400 L
  96.8400 124.3200 L
  96.1200 123.9600 L
  95.4000 123.4800 L
  94.8000 123.1200 L
  94.2000 122.5200 L
  93.7200 121.9200 L
  93.2400 121.3200 L
  92.8800 120.6000 L
  92.5200 119.8800 L
  92.2800 119.5200 L
  92.1600 119.1600 L
  92.1600 118.8000 L
  91.9200 118.3200 L
  91.9200 117.9600 L
  91.9200 117.6000 L
  91.8000 117.1200 L
  91.8000 116.7600 L
F
U
u
  0.000 0.000 0.000 1.000 K
  91.8000 116.7600 m
  91.8000 116.2800 L
  91.9200 115.9200 L
  91.9200 115.4400 L
  91.9200 115.0800 L
  92.1600 114.7200 L
  92.1600 114.2400 L
  92.2800 113.8800 L
  92.5200 113.5200 L
  92.8800 112.8000 L
  93.2400 112.2000 L
  93.7200 111.4800 L
  94.2000 110.8800 L
  94.8000 110.4000 L
  95.4000 109.9200 L
  96.1200 109.4400 L
  96.8400 109.2000 L
  97.2000 109.0800 L
  97.5600 108.8400 L
  98.0400 108.7200 L
  98.4000 108.7200 L
  98.7600 108.6000 L
  99.2400 108.4800 L
  99.6000 108.4800 L
  100.0800 108.4800 L
  100.4400 108.4800 L
  100.9200 108.4800 L
  101.2800 108.6000 L
  101.6400 108.7200 L
  102.1200 108.7200 L
  102.4800 108.8400 L
  102.8400 109.0800 L
  103.3200 109.2000 L
  103.9200 109.4400 L
  104.6400 109.9200 L
  105.3600 110.4000 L
  105.8400 110.8800 L
  106.4400 111.4800 L
  106.8000 112.2000 L
  107.2800 112.8000 L
  107.6400 113.5200 L
  107.7600 113.8800 L
  107.8800 114.2400 L
  108.0000 114.7200 L
  108.1200 115.0800 L
  108.1200 115.4400 L
  108.2400 115.9200 L
  108.2400 116.2800 L
  108.2400 116.7600 L
  108.2400 116.7600 L
  108.2400 117.1200 L
  108.2400 117.6000 L
  108.1200 117.9600 L
  108.1200 118.3200 L
  108.0000 118.8000 L
  107.8800 119.1600 L
  107.7600 119.5200 L
  107.6400 119.8800 L
  107.2800 120.6000 L
  106.8000 121.3200 L
  106.4400 121.9200 L
  105.8400 122.5200 L
  105.3600 123.1200 L
  104.6400 123.4800 L
  103.9200 123.9600 L
  103.3200 124.3200 L
  102.8400 124.4400 L
  102.4800 124.5600 L
  102.1200 124.6800 L
  101.6400 124.6800 L
  101.2800 124.8000 L
  100.9200 124.9200 L
  100.4400 124.9200 L
  100.0800 124.9200 L
  99.6000 124.9200 L
  99.2400 124.9200 L
  98.7600 124.8000 L
  98.4000 124.6800 L
  98.0400 124.6800 L
  97.5600 124.5600 L
  97.2000 124.4400 L
  96.8400 124.3200 L
  96.1200 123.9600 L
  95.4000 123.4800 L
  94.8000 123.1200 L
  94.2000 122.5200 L
  93.7200 121.9200 L
  93.2400 121.3200 L
  92.8800 120.6000 L
  92.5200 119.8800 L
  92.2800 119.5200 L
  92.1600 119.1600 L
  92.1600 118.8000 L
  91.9200 118.3200 L
  91.9200 117.9600 L
  91.9200 117.6000 L
  91.8000 117.1200 L
  91.8000 116.7600 L
S
U
u
2.0000 w
  0.000 0.000 0.000 1.000 K
  107.5200 116.7600 m
  92.6400 116.7600 L
S
U
u
  100.0800 109.3200 m
  100.0800 124.0800 L
S
U
u
0.0000 w
  0.000 0.000 0.000 1.000 K
  86.4000 116.7600 m
  84.0000 116.7600 L
  84.0000 132.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  85.8000 119.4000 m
  85.8000 114.0000 L
  91.2000 116.7600 L
  85.8000 119.4000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  77.7600 92.5200 m
  77.7600 101.4000 L
  100.0800 101.4000 L
  100.0800 108.4800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  80.4000 93.2400 m
  75.1200 93.2400 L
  77.7600 87.9600 L
  80.4000 93.2400 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  146.2800 199.2000 m
  192.9600 199.2000 L
  192.9600 179.7600 L
  146.2800 179.7600 L
  146.2800 199.2000 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  146.2800 179.7600 m
  146.2800 199.2000 L
  192.9600 199.2000 L
  192.9600 179.7600 L
  146.2800 179.7600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 153.4800 186.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.8000 186.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(26\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  169.6800 203.7600 m
  169.6800 222.2400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  172.3200 204.4800 m
  166.9200 204.4800 L
  169.6800 199.2000 L
  172.3200 204.4800 L
F
U
u
  0.000 0.000 0.000 1.000 K
  112.6800 92.5200 m
  112.6800 98.1600 L
  148.2000 98.1600 L
  148.2000 98.1600 L
  148.2000 98.1600 L
  148.2000 98.4000 L
  148.2000 98.6400 L
  148.2000 98.8800 L
  148.3200 99.0000 L
  148.4400 99.2400 L
  148.5600 99.3600 L
  148.8000 99.8400 L
  149.1600 100.0800 L
  149.2800 100.2000 L
  149.5200 100.3200 L
  149.7600 100.3200 L
  150.0000 100.4400 L
  150.2400 100.4400 L
  150.4800 100.4400 L
  150.6000 100.4400 L
  150.8400 100.4400 L
  151.0800 100.3200 L
  151.3200 100.3200 L
  151.5600 100.2000 L
  151.6800 100.0800 L
  152.0400 99.8400 L
  152.2800 99.3600 L
  152.4000 99.2400 L
  152.5200 99.0000 L
  152.6400 98.8800 L
  152.6400 98.6400 L
  152.6400 98.4000 L
  152.7600 98.1600 L
  169.6800 98.1600 L
  169.6800 179.7600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  115.4400 93.2400 m
  110.0400 93.2400 L
  112.6800 87.9600 L
  115.4400 93.2400 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  89.4000 41.0400 m
  136.0800 41.0400 L
  136.0800 21.7200 L
  89.4000 21.7200 L
  89.4000 41.0400 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  89.4000 21.7200 m
  89.4000 41.0400 L
  136.0800 41.0400 L
  136.0800 21.7200 L
  89.4000 21.7200 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 96.6000 27.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 115.9200 27.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(49\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  112.6800 45.7200 m
  112.6800 55.0800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  115.4400 46.4400 m
  110.0400 46.4400 L
  112.6800 41.0400 L
  115.4400 46.4400 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  187.4400 78.8400 m
  234.0000 78.8400 L
  234.0000 59.4000 L
  187.4400 59.4000 L
  187.4400 78.8400 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  187.4400 59.4000 m
  187.4400 78.8400 L
  234.0000 78.8400 L
  234.0000 59.4000 L
  187.4400 59.4000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 194.6400 65.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.9600 65.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(41\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  210.7200 83.5200 m
  210.7200 101.4000 L
  171.8400 101.4000 L
  171.8400 101.4000 L
  171.8400 101.6400 L
  171.8400 101.8800 L
  171.8400 102.1200 L
  171.7200 102.3600 L
  171.6000 102.4800 L
  171.4800 102.7200 L
  171.2400 103.0800 L
  170.8800 103.3200 L
  170.7600 103.4400 L
  170.5200 103.5600 L
  170.2800 103.5600 L
  170.0400 103.6800 L
  169.9200 103.6800 L
  169.6800 103.6800 L
  169.3200 103.6800 L
  169.0800 103.6800 L
  168.9600 103.5600 L
  168.7200 103.5600 L
  168.6000 103.4400 L
  168.3600 103.3200 L
  168.0000 103.0800 L
  167.6400 102.7200 L
  167.6400 102.4800 L
  167.5200 102.3600 L
  167.4000 102.1200 L
  167.4000 101.8800 L
  167.2800 101.6400 L
  167.2800 101.4000 L
  152.7600 101.4000 L
  152.7600 101.4000 L
  152.7600 101.4000 L
  152.6400 101.6400 L
  152.6400 101.8800 L
  152.6400 102.1200 L
  152.5200 102.3600 L
  152.4000 102.4800 L
  152.2800 102.7200 L
  152.0400 103.0800 L
  151.6800 103.3200 L
  151.5600 103.4400 L
  151.3200 103.5600 L
  151.0800 103.5600 L
  150.8400 103.6800 L
  150.6000 103.6800 L
  150.4800 103.6800 L
  150.2400 103.6800 L
  150.0000 103.6800 L
  149.7600 103.5600 L
  149.5200 103.5600 L
  149.2800 103.4400 L
  149.1600 103.3200 L
  148.8000 103.0800 L
  148.5600 102.7200 L
  148.4400 102.4800 L
  148.3200 102.3600 L
  148.2000 102.1200 L
  148.2000 101.8800 L
  148.2000 101.6400 L
  148.2000 101.4000 L
  100.0800 101.4000 L
  100.0800 108.4800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  213.3600 84.1200 m
  208.0800 84.1200 L
  210.7200 78.8400 L
  213.3600 84.1200 L
F
U
u
  0.000 0.000 0.000 1.000 K
  51.7200 388.0800 m
  51.7200 397.2000 L
  28.4400 397.2000 L
  28.4400 49.8000 L
  110.4000 49.8000 L
  110.4000 49.8000 L
  110.4000 50.0400 L
  110.4000 50.2800 L
  110.5200 50.4000 L
  110.6400 50.6400 L
  110.7600 50.8800 L
  110.7600 51.0000 L
  111.1200 51.3600 L
  111.4800 51.7200 L
  111.6000 51.7200 L
  111.8400 51.9600 L
  112.0800 51.9600 L
  112.3200 52.0800 L
  112.4400 52.0800 L
  112.6800 52.0800 L
  113.0400 52.0800 L
  113.1600 52.0800 L
  113.4000 51.9600 L
  113.6400 51.9600 L
  113.7600 51.7200 L
  114.0000 51.7200 L
  114.3600 51.3600 L
  114.6000 51.0000 L
  114.7200 50.8800 L
  114.8400 50.6400 L
  114.8400 50.4000 L
  114.9600 50.2800 L
  115.0800 50.0400 L
  115.0800 49.8000 L
  210.7200 49.8000 L
  210.7200 59.4000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  54.3600 388.8000 m
  48.9600 388.8000 L
  51.6000 383.4000 L
  54.3600 388.8000 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  33.9600 386.0400 m
  149.0400 386.0400 L
  149.0400 345.2400 L
  33.9600 345.2400 L
  33.9600 386.0400 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  33.9600 345.2400 m
  33.9600 386.0400 L
  149.0400 386.0400 L
  149.0400 345.2400 L
  33.9600 345.2400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 37.8000 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(out \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 57.1200 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(= \(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 74.8800 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 77.4000 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 83.8800 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(<<\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 97.4400 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 103.9200 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) +\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 117.8400 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 120.3600 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 126.7200 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 130.6800 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 136.0800 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 138.7200 362.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 47.1600 375.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 49.8000 375.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 85.8000 375.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 88.3200 375.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 114.0000 375.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 116.5200 375.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 80.6400 347.0400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(out\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  118.5600 388.0800 m
  118.5600 404.0400 L
  93.7200 404.0400 L
  93.7200 404.0400 L
  93.7200 404.2800 L
  93.7200 404.5200 L
  93.6000 404.7600 L
  93.6000 404.8800 L
  93.4800 405.1200 L
  93.3600 405.2400 L
  93.1200 405.6000 L
  92.7600 405.9600 L
  92.5200 405.9600 L
  92.4000 406.0800 L
  92.1600 406.2000 L
  91.9200 406.2000 L
  91.8000 406.3200 L
  91.4400 406.3200 L
  91.2000 406.3200 L
  90.9600 406.2000 L
  90.8400 406.2000 L
  90.6000 406.0800 L
  90.3600 405.9600 L
  90.2400 405.9600 L
  89.8800 405.6000 L
  89.5200 405.2400 L
  89.5200 405.1200 L
  89.4000 404.8800 L
  89.2800 404.7600 L
  89.1600 404.5200 L
  89.1600 404.2800 L
  89.1600 404.0400 L
  21.6000 404.0400 L
  21.6000 13.5600 L
  112.6800 13.5600 L
  112.6800 21.7200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  121.2000 388.8000 m
  115.8000 388.8000 L
  118.5600 383.4000 L
  121.2000 388.8000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  91.4400 390.7200 m
  91.4400 425.1600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  91.4400 425.1600 m
  91.2000 425.1600 L
  91.0800 425.2800 L
  90.8400 425.2800 L
  90.7200 425.2800 L
  90.3600 425.5200 L
  90.1200 425.7600 L
  89.7600 426.0000 L
  89.6400 426.3600 L
  89.5200 426.6000 L
  89.5200 426.7200 L
  89.5200 426.9600 L
  89.5200 427.2000 L
  89.5200 427.4400 L
  89.5200 427.5600 L
  89.5200 427.8000 L
  89.6400 428.0400 L
  89.7600 428.2800 L
  90.1200 428.5200 L
  90.3600 428.8800 L
  90.7200 429.0000 L
  90.8400 429.1200 L
  91.0800 429.1200 L
  91.2000 429.1200 L
  91.4400 429.1200 L
  91.4400 429.1200 L
  91.6800 429.1200 L
  91.9200 429.1200 L
  92.0400 429.1200 L
  92.2800 429.0000 L
  92.6400 428.8800 L
  92.8800 428.5200 L
  93.1200 428.2800 L
  93.3600 428.0400 L
  93.3600 427.8000 L
  93.3600 427.5600 L
  93.4800 427.4400 L
  93.4800 427.2000 L
  93.4800 426.9600 L
  93.3600 426.7200 L
  93.3600 426.6000 L
  93.3600 426.3600 L
  93.1200 426.0000 L
  92.8800 425.7600 L
  92.6400 425.5200 L
  92.2800 425.2800 L
  92.0400 425.2800 L
  91.9200 425.2800 L
  91.6800 425.1600 L
  91.4400 425.1600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  94.0800 391.4400 m
  88.8000 391.4400 L
  91.4400 386.0400 L
  94.0800 391.4400 L
F
U
u
  0.000 0.000 0.000 1.000 K
  183.7200 389.4000 m
  183.8400 425.2800 L
S
U
u
  0.000 0.000 0.000 1.000 K
  183.8400 425.2800 m
  183.6000 425.2800 L
  183.4800 425.2800 L
  183.2400 425.2800 L
  183.1200 425.4000 L
  182.7600 425.6400 L
  182.4000 425.8800 L
  182.1600 426.1200 L
  182.0400 426.4800 L
  181.9200 426.7200 L
  181.9200 426.8400 L
  181.9200 427.0800 L
  181.8000 427.3200 L
  181.9200 427.4400 L
  181.9200 427.6800 L
  181.9200 427.8000 L
  182.0400 428.0400 L
  182.1600 428.4000 L
  182.5200 428.6400 L
  182.7600 428.8800 L
  183.1200 429.1200 L
  183.2400 429.1200 L
  183.4800 429.2400 L
  183.6000 429.2400 L
  183.8400 429.2400 L
  183.8400 429.2400 L
  184.0800 429.2400 L
  184.3200 429.2400 L
  184.4400 429.1200 L
  184.6800 429.1200 L
  185.0400 428.8800 L
  185.2800 428.6400 L
  185.5200 428.4000 L
  185.6400 428.0400 L
  185.7600 427.8000 L
  185.8800 427.6800 L
  185.8800 427.4400 L
  185.8800 427.3200 L
  185.8800 427.0800 L
  185.8800 426.8400 L
  185.7600 426.6000 L
  185.6400 426.4800 L
  185.5200 426.1200 L
  185.2800 425.8800 L
  184.9200 425.6400 L
  184.6800 425.4000 L
  184.4400 425.2800 L
  184.2000 425.2800 L
  184.0800 425.2800 L
  183.8400 425.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  186.3600 390.0000 m
  181.0800 390.0000 L
  183.6000 384.7200 L
  186.3600 390.0000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  232.3200 162.6000 m
  232.3200 164.7600 L
  264.2400 164.7600 L
  264.2400 50.0400 L
  249.9600 50.0400 L
  249.9600 50.0400 L
  249.9600 50.2800 L
  249.9600 50.4000 L
  249.9600 50.6400 L
  249.8400 50.8800 L
  249.7200 51.1200 L
  249.6000 51.3600 L
  249.3600 51.6000 L
  249.0000 51.9600 L
  248.8800 52.0800 L
  248.6400 52.0800 L
  248.4000 52.2000 L
  248.1600 52.3200 L
  248.0400 52.3200 L
  247.8000 52.3200 L
  247.5600 52.3200 L
  247.2000 52.3200 L
  247.0800 52.2000 L
  246.8400 52.0800 L
  246.7200 52.0800 L
  246.4800 51.9600 L
  246.1200 51.6000 L
  245.8800 51.3600 L
  245.7600 51.1200 L
  245.6400 50.8800 L
  245.6400 50.6400 L
  245.5200 50.4000 L
  245.4000 50.2800 L
  245.4000 50.0400 L
  210.7200 50.0400 L
  210.7200 59.4000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  234.9600 163.3200 m
  229.6800 163.3200 L
  232.3200 157.9200 L
  234.9600 163.3200 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  161.4000 230.4000 m
  161.4000 230.0400 L
  161.5200 229.5600 L
  161.5200 229.2000 L
  161.6400 228.8400 L
  161.7600 228.3600 L
  161.7600 228.0000 L
  162.0000 227.5200 L
  162.1200 227.1600 L
  162.4800 226.4400 L
  162.8400 225.8400 L
  163.3200 225.2400 L
  163.8000 224.6400 L
  164.4000 224.1600 L
  165.1200 223.5600 L
  165.7200 223.2000 L
  166.4400 222.8400 L
  166.8000 222.7200 L
  167.2800 222.6000 L
  167.6400 222.4800 L
  168.0000 222.3600 L
  168.3600 222.3600 L
  168.8400 222.3600 L
  169.3200 222.2400 L
  169.6800 222.2400 L
  170.0400 222.2400 L
  170.5200 222.3600 L
  171.0000 222.3600 L
  171.3600 222.3600 L
  171.7200 222.4800 L
  172.0800 222.6000 L
  172.4400 222.7200 L
  172.9200 222.8400 L
  173.5200 223.2000 L
  174.2400 223.5600 L
  174.9600 224.1600 L
  175.5600 224.6400 L
  176.0400 225.2400 L
  176.5200 225.8400 L
  176.8800 226.4400 L
  177.2400 227.1600 L
  177.3600 227.5200 L
  177.6000 228.0000 L
  177.6000 228.3600 L
  177.7200 228.8400 L
  177.7200 229.2000 L
  177.8400 229.5600 L
  177.9600 230.0400 L
  177.9600 230.4000 L
  177.9600 230.4000 L
  177.9600 230.8800 L
  177.8400 231.2400 L
  177.7200 231.7200 L
  177.7200 232.0800 L
  177.6000 232.4400 L
  177.6000 232.8000 L
  177.3600 233.2800 L
  177.2400 233.6400 L
  176.8800 234.3600 L
  176.5200 235.0800 L
  176.0400 235.6800 L
  175.5600 236.2800 L
  174.9600 236.7600 L
  174.2400 237.2400 L
  173.5200 237.6000 L
  172.9200 237.9600 L
  172.4400 238.0800 L
  172.0800 238.3200 L
  171.7200 238.3200 L
  171.3600 238.5600 L
  171.0000 238.5600 L
  170.5200 238.5600 L
  170.0400 238.6800 L
  169.6800 238.6800 L
  169.3200 238.6800 L
  168.8400 238.5600 L
  168.3600 238.5600 L
  168.0000 238.5600 L
  167.6400 238.3200 L
  167.2800 238.3200 L
  166.8000 238.0800 L
  166.4400 237.9600 L
  165.7200 237.6000 L
  165.1200 237.2400 L
  164.4000 236.7600 L
  163.8000 236.2800 L
  163.3200 235.6800 L
  162.8400 235.0800 L
  162.4800 234.3600 L
  162.1200 233.6400 L
  162.0000 233.2800 L
  161.7600 232.8000 L
  161.7600 232.4400 L
  161.6400 232.0800 L
  161.5200 231.7200 L
  161.5200 231.2400 L
  161.4000 230.8800 L
  161.4000 230.4000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  161.4000 230.4000 m
  161.4000 230.0400 L
  161.5200 229.5600 L
  161.5200 229.2000 L
  161.6400 228.8400 L
  161.7600 228.3600 L
  161.7600 228.0000 L
  162.0000 227.5200 L
  162.1200 227.1600 L
  162.4800 226.4400 L
  162.8400 225.8400 L
  163.3200 225.2400 L
  163.8000 224.6400 L
  164.4000 224.1600 L
  165.1200 223.5600 L
  165.7200 223.2000 L
  166.4400 222.8400 L
  166.8000 222.7200 L
  167.2800 222.6000 L
  167.6400 222.4800 L
  168.0000 222.3600 L
  168.3600 222.3600 L
  168.8400 222.3600 L
  169.3200 222.2400 L
  169.6800 222.2400 L
  170.0400 222.2400 L
  170.5200 222.3600 L
  171.0000 222.3600 L
  171.3600 222.3600 L
  171.7200 222.4800 L
  172.0800 222.6000 L
  172.4400 222.7200 L
  172.9200 222.8400 L
  173.5200 223.2000 L
  174.2400 223.5600 L
  174.9600 224.1600 L
  175.5600 224.6400 L
  176.0400 225.2400 L
  176.5200 225.8400 L
  176.8800 226.4400 L
  177.2400 227.1600 L
  177.3600 227.5200 L
  177.6000 228.0000 L
  177.6000 228.3600 L
  177.7200 228.8400 L
  177.7200 229.2000 L
  177.8400 229.5600 L
  177.9600 230.0400 L
  177.9600 230.4000 L
  177.9600 230.4000 L
  177.9600 230.8800 L
  177.8400 231.2400 L
  177.7200 231.7200 L
  177.7200 232.0800 L
  177.6000 232.4400 L
  177.6000 232.8000 L
  177.3600 233.2800 L
  177.2400 233.6400 L
  176.8800 234.3600 L
  176.5200 235.0800 L
  176.0400 235.6800 L
  175.5600 236.2800 L
  174.9600 236.7600 L
  174.2400 237.2400 L
  173.5200 237.6000 L
  172.9200 237.9600 L
  172.4400 238.0800 L
  172.0800 238.3200 L
  171.7200 238.3200 L
  171.3600 238.5600 L
  171.0000 238.5600 L
  170.5200 238.5600 L
  170.0400 238.6800 L
  169.6800 238.6800 L
  169.3200 238.6800 L
  168.8400 238.5600 L
  168.3600 238.5600 L
  168.0000 238.5600 L
  167.6400 238.3200 L
  167.2800 238.3200 L
  166.8000 238.0800 L
  166.4400 237.9600 L
  165.7200 237.6000 L
  165.1200 237.2400 L
  164.4000 236.7600 L
  163.8000 236.2800 L
  163.3200 235.6800 L
  162.8400 235.0800 L
  162.4800 234.3600 L
  162.1200 233.6400 L
  162.0000 233.2800 L
  161.7600 232.8000 L
  161.7600 232.4400 L
  161.6400 232.0800 L
  161.5200 231.7200 L
  161.5200 231.2400 L
  161.4000 230.8800 L
  161.4000 230.4000 L
S
U
u
2.0000 w
  0.000 0.000 0.000 1.000 K
  177.1200 230.4000 m
  162.2400 230.4000 L
S
U
u
  169.6800 223.0800 m
  169.6800 237.7200 L
S
U
u
0.0000 w
  0.000 0.000 0.000 1.000 K
  156.1200 230.4000 m
  149.0400 230.4000 L
  149.0400 249.9600 L
  140.2800 249.9600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  155.4000 233.0400 m
  155.4000 227.7600 L
  160.8000 230.4000 L
  155.4000 233.0400 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  61.3200 302.1600 m
  61.3200 301.8000 L
  61.3200 301.3200 L
  61.4400 300.9600 L
  61.4400 300.6000 L
  61.5600 300.1200 L
  61.6800 299.7600 L
  61.8000 299.4000 L
  61.9200 298.9200 L
  62.2800 298.3200 L
  62.7600 297.6000 L
  63.1200 297.0000 L
  63.7200 296.4000 L
  64.3200 295.8000 L
  64.9200 295.4400 L
  65.6400 294.9600 L
  66.3600 294.6000 L
  66.7200 294.4800 L
  67.0800 294.3600 L
  67.5600 294.2400 L
  67.9200 294.2400 L
  68.2800 294.1200 L
  68.6400 294.0000 L
  69.1200 294.0000 L
  69.6000 294.0000 L
  69.9600 294.0000 L
  70.4400 294.0000 L
  70.8000 294.1200 L
  71.1600 294.2400 L
  71.5200 294.2400 L
  72.0000 294.3600 L
  72.3600 294.4800 L
  72.7200 294.6000 L
  73.4400 294.9600 L
  74.1600 295.4400 L
  74.7600 295.8000 L
  75.3600 296.4000 L
  75.9600 297.0000 L
  76.3200 297.6000 L
  76.8000 298.3200 L
  77.0400 298.9200 L
  77.2800 299.4000 L
  77.4000 299.7600 L
  77.5200 300.1200 L
  77.6400 300.6000 L
  77.6400 300.9600 L
  77.7600 301.3200 L
  77.7600 301.8000 L
  77.7600 302.1600 L
  77.7600 302.1600 L
  77.7600 302.6400 L
  77.7600 303.0000 L
  77.6400 303.4800 L
  77.6400 303.8400 L
  77.5200 304.2000 L
  77.4000 304.5600 L
  77.2800 305.0400 L
  77.0400 305.4000 L
  76.8000 306.1200 L
  76.3200 306.7200 L
  75.9600 307.4400 L
  75.3600 308.0400 L
  74.7600 308.5200 L
  74.1600 309.0000 L
  73.4400 309.3600 L
  72.7200 309.7200 L
  72.3600 309.8400 L
  72.0000 310.0800 L
  71.5200 310.0800 L
  71.1600 310.2000 L
  70.8000 310.3200 L
  70.4400 310.3200 L
  69.9600 310.4400 L
  69.6000 310.4400 L
  69.1200 310.4400 L
  68.6400 310.3200 L
  68.2800 310.3200 L
  67.9200 310.2000 L
  67.5600 310.0800 L
  67.0800 310.0800 L
  66.7200 309.8400 L
  66.3600 309.7200 L
  65.6400 309.3600 L
  64.9200 309.0000 L
  64.3200 308.5200 L
  63.7200 308.0400 L
  63.1200 307.4400 L
  62.7600 306.7200 L
  62.2800 306.1200 L
  61.9200 305.4000 L
  61.8000 305.0400 L
  61.6800 304.5600 L
  61.5600 304.2000 L
  61.4400 303.8400 L
  61.4400 303.4800 L
  61.3200 303.0000 L
  61.3200 302.6400 L
  61.3200 302.1600 L
F
U
u
  0.000 0.000 0.000 1.000 K
  61.3200 302.1600 m
  61.3200 301.8000 L
  61.3200 301.3200 L
  61.4400 300.9600 L
  61.4400 300.6000 L
  61.5600 300.1200 L
  61.6800 299.7600 L
  61.8000 299.4000 L
  61.9200 298.9200 L
  62.2800 298.3200 L
  62.7600 297.6000 L
  63.1200 297.0000 L
  63.7200 296.4000 L
  64.3200 295.8000 L
  64.9200 295.4400 L
  65.6400 294.9600 L
  66.3600 294.6000 L
  66.7200 294.4800 L
  67.0800 294.3600 L
  67.5600 294.2400 L
  67.9200 294.2400 L
  68.2800 294.1200 L
  68.6400 294.0000 L
  69.1200 294.0000 L
  69.6000 294.0000 L
  69.9600 294.0000 L
  70.4400 294.0000 L
  70.8000 294.1200 L
  71.1600 294.2400 L
  71.5200 294.2400 L
  72.0000 294.3600 L
  72.3600 294.4800 L
  72.7200 294.6000 L
  73.4400 294.9600 L
  74.1600 295.4400 L
  74.7600 295.8000 L
  75.3600 296.4000 L
  75.9600 297.0000 L
  76.3200 297.6000 L
  76.8000 298.3200 L
  77.0400 298.9200 L
  77.2800 299.4000 L
  77.4000 299.7600 L
  77.5200 300.1200 L
  77.6400 300.6000 L
  77.6400 300.9600 L
  77.7600 301.3200 L
  77.7600 301.8000 L
  77.7600 302.1600 L
  77.7600 302.1600 L
  77.7600 302.6400 L
  77.7600 303.0000 L
  77.6400 303.4800 L
  77.6400 303.8400 L
  77.5200 304.2000 L
  77.4000 304.5600 L
  77.2800 305.0400 L
  77.0400 305.4000 L
  76.8000 306.1200 L
  76.3200 306.7200 L
  75.9600 307.4400 L
  75.3600 308.0400 L
  74.7600 308.5200 L
  74.1600 309.0000 L
  73.4400 309.3600 L
  72.7200 309.7200 L
  72.3600 309.8400 L
  72.0000 310.0800 L
  71.5200 310.0800 L
  71.1600 310.2000 L
  70.8000 310.3200 L
  70.4400 310.3200 L
  69.9600 310.4400 L
  69.6000 310.4400 L
  69.1200 310.4400 L
  68.6400 310.3200 L
  68.2800 310.3200 L
  67.9200 310.2000 L
  67.5600 310.0800 L
  67.0800 310.0800 L
  66.7200 309.8400 L
  66.3600 309.7200 L
  65.6400 309.3600 L
  64.9200 309.0000 L
  64.3200 308.5200 L
  63.7200 308.0400 L
  63.1200 307.4400 L
  62.7600 306.7200 L
  62.2800 306.1200 L
  61.9200 305.4000 L
  61.8000 305.0400 L
  61.6800 304.5600 L
  61.5600 304.2000 L
  61.4400 303.8400 L
  61.4400 303.4800 L
  61.3200 303.0000 L
  61.3200 302.6400 L
  61.3200 302.1600 L
S
U
u
2.0000 w
  0.000 0.000 0.000 1.000 K
  76.9200 302.1600 m
  62.1600 302.1600 L
S
U
u
  69.6000 294.8400 m
  69.6000 309.6000 L
S
U
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  297.8400 289.4400 m
  297.8400 289.0800 L
  297.8400 288.6000 L
  297.8400 288.2400 L
  297.9600 287.8800 L
  298.0800 287.4000 L
  298.2000 287.0400 L
  298.2000 286.6800 L
  298.4400 286.3200 L
  298.8000 285.6000 L
  299.1600 284.8800 L
  299.6400 284.2800 L
  300.2400 283.6800 L
  300.8400 283.0800 L
  301.3200 282.7200 L
  302.0400 282.2400 L
  302.7600 281.8800 L
  303.2400 281.7600 L
  303.6000 281.6400 L
  303.9600 281.5200 L
  304.3200 281.5200 L
  304.8000 281.4000 L
  305.1600 281.2800 L
  305.5200 281.2800 L
  306.0000 281.2800 L
  306.4800 281.2800 L
  306.8400 281.2800 L
  307.2000 281.4000 L
  307.6800 281.5200 L
  308.0400 281.5200 L
  308.5200 281.6400 L
  308.8800 281.7600 L
  309.2400 281.8800 L
  309.9600 282.2400 L
  310.5600 282.7200 L
  311.2800 283.0800 L
  311.7600 283.6800 L
  312.3600 284.2800 L
  312.8400 284.8800 L
  313.3200 285.6000 L
  313.5600 286.3200 L
  313.6800 286.6800 L
  313.8000 287.0400 L
  314.0400 287.4000 L
  314.0400 287.8800 L
  314.1600 288.2400 L
  314.1600 288.6000 L
  314.1600 289.0800 L
  314.1600 289.4400 L
  314.1600 289.4400 L
  314.1600 289.9200 L
  314.1600 290.2800 L
  314.1600 290.7600 L
  314.0400 291.1200 L
  314.0400 291.4800 L
  313.8000 291.9600 L
  313.6800 292.3200 L
  313.5600 292.6800 L
  313.3200 293.4000 L
  312.8400 294.0000 L
  312.3600 294.7200 L
  311.7600 295.3200 L
  311.2800 295.8000 L
  310.5600 296.2800 L
  309.9600 296.7600 L
  309.2400 297.0000 L
  308.8800 297.1200 L
  308.5200 297.3600 L
  308.0400 297.4800 L
  307.6800 297.4800 L
  307.2000 297.6000 L
  306.8400 297.7200 L
  306.4800 297.7200 L
  306.0000 297.7200 L
  305.5200 297.7200 L
  305.1600 297.7200 L
  304.8000 297.6000 L
  304.3200 297.4800 L
  303.9600 297.4800 L
  303.6000 297.3600 L
  303.2400 297.1200 L
  302.7600 297.0000 L
  302.0400 296.7600 L
  301.3200 296.2800 L
  300.8400 295.8000 L
  300.2400 295.3200 L
  299.6400 294.7200 L
  299.1600 294.0000 L
  298.8000 293.4000 L
  298.4400 292.6800 L
  298.2000 292.3200 L
  298.2000 291.9600 L
  298.0800 291.4800 L
  297.9600 291.1200 L
  297.8400 290.7600 L
  297.8400 290.2800 L
  297.8400 289.9200 L
  297.8400 289.4400 L
F
U
u
  0.000 0.000 0.000 1.000 K
  297.8400 289.4400 m
  297.8400 289.0800 L
  297.8400 288.6000 L
  297.8400 288.2400 L
  297.9600 287.8800 L
  298.0800 287.4000 L
  298.2000 287.0400 L
  298.2000 286.6800 L
  298.4400 286.3200 L
  298.8000 285.6000 L
  299.1600 284.8800 L
  299.6400 284.2800 L
  300.2400 283.6800 L
  300.8400 283.0800 L
  301.3200 282.7200 L
  302.0400 282.2400 L
  302.7600 281.8800 L
  303.2400 281.7600 L
  303.6000 281.6400 L
  303.9600 281.5200 L
  304.3200 281.5200 L
  304.8000 281.4000 L
  305.1600 281.2800 L
  305.5200 281.2800 L
  306.0000 281.2800 L
  306.4800 281.2800 L
  306.8400 281.2800 L
  307.2000 281.4000 L
  307.6800 281.5200 L
  308.0400 281.5200 L
  308.5200 281.6400 L
  308.8800 281.7600 L
  309.2400 281.8800 L
  309.9600 282.2400 L
  310.5600 282.7200 L
  311.2800 283.0800 L
  311.7600 283.6800 L
  312.3600 284.2800 L
  312.8400 284.8800 L
  313.3200 285.6000 L
  313.5600 286.3200 L
  313.6800 286.6800 L
  313.8000 287.0400 L
  314.0400 287.4000 L
  314.0400 287.8800 L
  314.1600 288.2400 L
  314.1600 288.6000 L
  314.1600 289.0800 L
  314.1600 289.4400 L
  314.1600 289.4400 L
  314.1600 289.9200 L
  314.1600 290.2800 L
  314.1600 290.7600 L
  314.0400 291.1200 L
  314.0400 291.4800 L
  313.8000 291.9600 L
  313.6800 292.3200 L
  313.5600 292.6800 L
  313.3200 293.4000 L
  312.8400 294.0000 L
  312.3600 294.7200 L
  311.7600 295.3200 L
  311.2800 295.8000 L
  310.5600 296.2800 L
  309.9600 296.7600 L
  309.2400 297.0000 L
  308.8800 297.1200 L
  308.5200 297.3600 L
  308.0400 297.4800 L
  307.6800 297.4800 L
  307.2000 297.6000 L
  306.8400 297.7200 L
  306.4800 297.7200 L
  306.0000 297.7200 L
  305.5200 297.7200 L
  305.1600 297.7200 L
  304.8000 297.6000 L
  304.3200 297.4800 L
  303.9600 297.4800 L
  303.6000 297.3600 L
  303.2400 297.1200 L
  302.7600 297.0000 L
  302.0400 296.7600 L
  301.3200 296.2800 L
  300.8400 295.8000 L
  300.2400 295.3200 L
  299.6400 294.7200 L
  299.1600 294.0000 L
  298.8000 293.4000 L
  298.4400 292.6800 L
  298.2000 292.3200 L
  298.2000 291.9600 L
  298.0800 291.4800 L
  297.9600 291.1200 L
  297.8400 290.7600 L
  297.8400 290.2800 L
  297.8400 289.9200 L
  297.8400 289.4400 L
S
U
u
2.0000 w
  0.000 0.000 0.000 1.000 K
  313.4400 289.4400 m
  298.5600 289.4400 L
S
U
u
  306.0000 282.1200 m
  306.0000 296.8800 L
S
U
u
0.0000 w
  0.000 0.000 0.000 1.000 K
  124.4400 213.3600 m
  124.4400 250.3200 L
S
U
u
  0.000 0.000 0.000 1.000 K
  124.4400 250.3200 m
  124.2000 250.3200 L
  123.9600 250.3200 L
  123.8400 250.3200 L
  123.6000 250.4400 L
  123.2400 250.6800 L
  122.8800 250.9200 L
  122.7600 251.1600 L
  122.5200 251.5200 L
  122.5200 251.7600 L
  122.4000 251.8800 L
  122.4000 252.1200 L
  122.4000 252.3600 L
  122.4000 252.4800 L
  122.4000 252.7200 L
  122.5200 252.8400 L
  122.5200 253.0800 L
  122.7600 253.4400 L
  122.8800 253.6800 L
  123.2400 253.9200 L
  123.6000 254.1600 L
  123.8400 254.1600 L
  123.9600 254.2800 L
  124.2000 254.2800 L
  124.4400 254.2800 L
  124.4400 254.2800 L
  124.5600 254.2800 L
  124.8000 254.2800 L
  124.9200 254.1600 L
  125.1600 254.1600 L
  125.5200 253.9200 L
  125.7600 253.6800 L
  126.0000 253.4400 L
  126.2400 253.0800 L
  126.2400 252.8400 L
  126.3600 252.7200 L
  126.3600 252.4800 L
  126.3600 252.3600 L
  126.3600 252.1200 L
  126.3600 251.8800 L
  126.2400 251.7600 L
  126.2400 251.5200 L
  126.0000 251.1600 L
  125.7600 250.9200 L
  125.5200 250.6800 L
  125.1600 250.4400 L
  124.9200 250.3200 L
  124.8000 250.3200 L
  124.5600 250.3200 L
  124.4400 250.3200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  127.0800 214.0800 m
  121.6800 214.0800 L
  124.4400 208.8000 L
  127.0800 214.0800 L
F
U
u
  0.000 0.000 0.000 1.000 K
  103.8000 213.3600 m
  103.8000 250.3200 L
S
U
u
  0.000 0.000 0.000 1.000 K
  103.8000 250.3200 m
  103.6800 250.3200 L
  103.4400 250.3200 L
  103.2000 250.3200 L
  103.0800 250.4400 L
  102.7200 250.6800 L
  102.3600 250.9200 L
  102.1200 251.1600 L
  102.0000 251.5200 L
  101.8800 251.7600 L
  101.8800 251.8800 L
  101.8800 252.1200 L
  101.8800 252.3600 L
  101.8800 252.4800 L
  101.8800 252.7200 L
  101.8800 252.8400 L
  102.0000 253.0800 L
  102.1200 253.4400 L
  102.3600 253.6800 L
  102.7200 253.9200 L
  103.0800 254.1600 L
  103.2000 254.1600 L
  103.4400 254.2800 L
  103.6800 254.2800 L
  103.8000 254.2800 L
  103.8000 254.2800 L
  104.0400 254.2800 L
  104.1600 254.2800 L
  104.4000 254.1600 L
  104.6400 254.1600 L
  105.0000 253.9200 L
  105.2400 253.6800 L
  105.4800 253.4400 L
  105.7200 253.0800 L
  105.7200 252.8400 L
  105.7200 252.7200 L
  105.8400 252.4800 L
  105.8400 252.3600 L
  105.8400 252.1200 L
  105.7200 251.8800 L
  105.7200 251.7600 L
  105.7200 251.5200 L
  105.4800 251.1600 L
  105.2400 250.9200 L
  105.0000 250.6800 L
  104.6400 250.4400 L
  104.4000 250.3200 L
  104.1600 250.3200 L
  104.0400 250.3200 L
  103.8000 250.3200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  106.4400 214.0800 m
  101.1600 214.0800 L
  103.8000 208.8000 L
  106.4400 214.0800 L
F
U
u
  0.000 0.000 0.000 1.000 K
  159.9600 438.2400 m
  159.9600 339.3600 L
  198.3600 339.3600 L
  198.3600 350.6400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  159.9600 436.2000 m
  159.8400 436.2000 L
  159.6000 436.2000 L
  159.3600 436.3200 L
  159.2400 436.4400 L
  158.8800 436.5600 L
  158.6400 436.8000 L
  158.2800 437.1600 L
  158.1600 437.4000 L
  158.1600 437.6400 L
  158.0400 437.7600 L
  158.0400 438.0000 L
  158.0400 438.2400 L
  158.0400 438.3600 L
  158.0400 438.6000 L
  158.1600 438.7200 L
  158.1600 438.9600 L
  158.2800 439.3200 L
  158.6400 439.5600 L
  158.8800 439.8000 L
  159.2400 440.0400 L
  159.3600 440.0400 L
  159.6000 440.1600 L
  159.8400 440.1600 L
  159.9600 440.1600 L
  159.9600 440.1600 L
  160.2000 440.1600 L
  160.4400 440.1600 L
  160.5600 440.0400 L
  160.8000 440.0400 L
  161.1600 439.8000 L
  161.4000 439.5600 L
  161.6400 439.3200 L
  161.8800 438.9600 L
  162.0000 438.7200 L
  162.0000 438.6000 L
  162.0000 438.3600 L
  162.0000 438.2400 L
  162.0000 438.0000 L
  162.0000 437.7600 L
  162.0000 437.6400 L
  161.8800 437.4000 L
  161.6400 437.1600 L
  161.4000 436.8000 L
  161.1600 436.5600 L
  160.8000 436.4400 L
  160.5600 436.3200 L
  160.4400 436.2000 L
  160.2000 436.2000 L
  159.9600 436.2000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  247.8000 11.7600 m
  247.8000 117.0000 L
  214.8000 117.0000 L
  214.8000 123.9600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  247.8000 13.6800 m
  248.0400 13.6800 L
  248.1600 13.6800 L
  248.4000 13.6800 L
  248.5200 13.5600 L
  248.8800 13.4400 L
  249.1200 13.0800 L
  249.4800 12.8400 L
  249.6000 12.4800 L
  249.6000 12.3600 L
  249.7200 12.1200 L
  249.7200 12.0000 L
  249.7200 11.7600 L
  249.7200 11.5200 L
  249.7200 11.2800 L
  249.6000 11.1600 L
  249.6000 10.9200 L
  249.4800 10.5600 L
  249.1200 10.3200 L
  248.8800 10.0800 L
  248.5200 9.8400 L
  248.4000 9.8400 L
  248.1600 9.8400 L
  248.0400 9.7200 L
  247.8000 9.7200 L
  247.8000 9.7200 L
  247.5600 9.7200 L
  247.3200 9.8400 L
  247.2000 9.8400 L
  246.9600 9.8400 L
  246.6000 10.0800 L
  246.3600 10.3200 L
  246.1200 10.5600 L
  245.8800 10.9200 L
  245.7600 11.1600 L
  245.7600 11.2800 L
  245.7600 11.5200 L
  245.7600 11.7600 L
  245.7600 12.0000 L
  245.7600 12.1200 L
  245.7600 12.3600 L
  245.8800 12.4800 L
  246.1200 12.8400 L
  246.3600 13.0800 L
  246.6000 13.4400 L
  246.9600 13.5600 L
  247.2000 13.6800 L
  247.3200 13.6800 L
  247.5600 13.6800 L
  247.8000 13.6800 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  373.8000 432.7200 m
  412.3200 432.7200 L
  412.3200 22.6800 L
  373.8000 22.6800 L
  373.8000 432.7200 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  373.8000 22.6800 m
  373.8000 432.7200 L
  412.3200 432.7200 L
  412.3200 22.6800 L
  373.8000 22.6800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 380.7600 224.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(FSM\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 264.4800 352.2000 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  266.6400 346.5600 m
  266.6400 350.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  269.2800 347.2800 m
  264.0000 347.2800 L
  266.6400 341.8800 L
  269.2800 347.2800 L
F
U
u
  0.000 0.000 0.000 1.000 K
  313.4400 331.5600 m
  341.4000 331.5600 L
  341.4000 331.8000 L
  341.5200 332.0400 L
  341.5200 332.2800 L
  341.6400 332.4000 L
  341.6400 332.6400 L
  341.7600 332.7600 L
  342.1200 333.1200 L
  342.4800 333.4800 L
  342.6000 333.4800 L
  342.8400 333.7200 L
  342.9600 333.7200 L
  343.2000 333.8400 L
  343.4400 333.8400 L
  343.6800 333.8400 L
  343.9200 333.8400 L
  344.1600 333.8400 L
  344.4000 333.7200 L
  344.6400 333.7200 L
  344.7600 333.4800 L
  345.0000 333.4800 L
  345.3600 333.1200 L
  345.6000 332.7600 L
  345.7200 332.6400 L
  345.8400 332.4000 L
  345.9600 332.2800 L
  345.9600 332.0400 L
  345.9600 331.8000 L
  345.9600 331.5600 L
  372.4800 331.5600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  314.0400 328.9200 m
  314.0400 334.3200 L
  308.7600 331.5600 L
  314.0400 328.9200 L
F
U
u
  0.000 0.000 0.000 1.000 K
  313.4400 316.5600 m
  341.4000 316.5600 L
  341.4000 316.8000 L
  341.5200 316.9200 L
  341.5200 317.1600 L
  341.6400 317.4000 L
  341.6400 317.6400 L
  341.7600 317.8800 L
  342.1200 318.1200 L
  342.4800 318.4800 L
  342.6000 318.6000 L
  342.8400 318.6000 L
  342.9600 318.7200 L
  343.2000 318.8400 L
  343.4400 318.8400 L
  343.6800 318.8400 L
  343.9200 318.8400 L
  344.1600 318.8400 L
  344.4000 318.7200 L
  344.6400 318.6000 L
  344.7600 318.6000 L
  345.0000 318.4800 L
  345.3600 318.1200 L
  345.6000 317.8800 L
  345.7200 317.6400 L
  345.8400 317.4000 L
  345.9600 317.1600 L
  345.9600 316.9200 L
  345.9600 316.8000 L
  345.9600 316.5600 L
  373.8000 316.5600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  314.0400 313.9200 m
  314.0400 319.2000 L
  308.7600 316.5600 L
  314.0400 313.9200 L
F
U
u
  0.000 0.000 0.000 1.000 K
  334.2000 263.2800 m
  341.4000 263.2800 L
  341.4000 263.2800 L
  341.4000 263.4000 L
  341.5200 263.6400 L
  341.5200 263.8800 L
  341.6400 264.1200 L
  341.6400 264.3600 L
  341.7600 264.4800 L
  342.1200 264.8400 L
  342.4800 265.0800 L
  342.6000 265.3200 L
  342.8400 265.3200 L
  342.9600 265.4400 L
  343.2000 265.4400 L
  343.4400 265.4400 L
  343.6800 265.4400 L
  343.9200 265.4400 L
  344.1600 265.4400 L
  344.4000 265.4400 L
  344.6400 265.3200 L
  344.7600 265.3200 L
  345.0000 265.0800 L
  345.3600 264.8400 L
  345.6000 264.4800 L
  345.7200 264.3600 L
  345.8400 264.1200 L
  345.9600 263.8800 L
  345.9600 263.6400 L
  345.9600 263.4000 L
  345.9600 263.2800 L
  372.4800 263.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  334.8000 260.5200 m
  334.8000 265.9200 L
  329.4000 263.2800 L
  334.8000 260.5200 L
F
U
u
  0.000 0.000 0.000 1.000 K
  222.2400 319.2000 m
  236.7600 319.2000 L
  236.7600 298.8000 L
  279.0000 298.8000 L
  279.0000 298.9200 L
  279.1200 299.2800 L
  279.1200 299.5200 L
  279.2400 299.6400 L
  279.3600 299.8800 L
  279.4800 300.0000 L
  279.7200 300.3600 L
  280.0800 300.6000 L
  280.3200 300.7200 L
  280.4400 300.8400 L
  280.6800 300.9600 L
  280.8000 300.9600 L
  281.1600 301.0800 L
  281.4000 301.0800 L
  281.5200 301.0800 L
  281.7600 300.9600 L
  282.0000 300.9600 L
  282.2400 300.8400 L
  282.4800 300.7200 L
  282.6000 300.6000 L
  282.9600 300.3600 L
  283.2000 300.0000 L
  283.3200 299.8800 L
  283.4400 299.6400 L
  283.5600 299.5200 L
  283.5600 299.2800 L
  283.5600 298.9200 L
  283.5600 298.8000 L
  341.4000 298.8000 L
  341.4000 298.9200 L
  341.5200 299.2800 L
  341.5200 299.5200 L
  341.6400 299.6400 L
  341.6400 299.8800 L
  341.7600 300.0000 L
  342.1200 300.3600 L
  342.4800 300.6000 L
  342.6000 300.7200 L
  342.8400 300.8400 L
  342.9600 300.9600 L
  343.2000 300.9600 L
  343.4400 301.0800 L
  343.6800 301.0800 L
  343.9200 301.0800 L
  344.1600 300.9600 L
  344.4000 300.9600 L
  344.6400 300.8400 L
  344.7600 300.7200 L
  345.0000 300.6000 L
  345.3600 300.3600 L
  345.6000 300.0000 L
  345.7200 299.8800 L
  345.8400 299.6400 L
  345.9600 299.5200 L
  345.9600 299.2800 L
  345.9600 298.9200 L
  345.9600 298.8000 L
  371.1600 298.8000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  222.9600 316.4400 m
  222.9600 321.8400 L
  217.5600 319.2000 L
  222.9600 316.4400 L
F
U
u
  0.000 0.000 0.000 1.000 K
  230.5200 361.5600 m
  373.8000 361.5600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  231.1200 359.0400 m
  231.1200 364.3200 L
  225.8400 361.6800 L
  231.1200 359.0400 L
F
U
u
  0.000 0.000 0.000 1.000 K
  230.5200 372.6000 m
  373.8000 372.6000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  231.1200 369.9600 m
  231.1200 375.2400 L
  225.8400 372.6000 L
  231.1200 369.9600 L
F
U
u
  0.000 0.000 0.000 1.000 K
  367.8000 206.8800 m
  305.5200 206.8800 L
  305.5200 219.9600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  367.2000 209.5200 m
  367.2000 204.2400 L
  372.4800 206.8800 L
  367.2000 209.5200 L
F
U
u
  0.000 0.000 0.000 1.000 K
  238.6800 244.6800 m
  245.4000 244.6800 L
  245.4000 244.6800 L
  245.4000 244.9200 L
  245.5200 245.0400 L
  245.6400 245.2800 L
  245.6400 245.5200 L
  245.7600 245.7600 L
  245.8800 246.0000 L
  246.1200 246.2400 L
  246.4800 246.4800 L
  246.7200 246.7200 L
  246.8400 246.7200 L
  247.0800 246.8400 L
  247.2000 246.8400 L
  247.5600 246.8400 L
  247.8000 246.8400 L
  248.0400 246.8400 L
  248.1600 246.8400 L
  248.4000 246.8400 L
  248.6400 246.7200 L
  248.8800 246.7200 L
  249.0000 246.4800 L
  249.3600 246.2400 L
  249.6000 246.0000 L
  249.7200 245.7600 L
  249.8400 245.5200 L
  249.9600 245.2800 L
  249.9600 245.0400 L
  249.9600 244.9200 L
  249.9600 244.6800 L
  373.8000 244.6800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  239.4000 241.9200 m
  239.4000 247.3200 L
  234.0000 244.6800 L
  239.4000 241.9200 L
F
U
u
  0.000 0.000 0.000 1.000 K
  197.5200 189.3600 m
  198.1200 189.3600 L
  198.1200 189.3600 L
  198.1200 189.7200 L
  198.1200 189.8400 L
  198.2400 190.0800 L
  198.2400 190.3200 L
  198.3600 190.4400 L
  198.4800 190.6800 L
  198.8400 191.0400 L
  199.0800 191.4000 L
  199.3200 191.4000 L
  199.5600 191.5200 L
  199.8000 191.6400 L
  199.9200 191.6400 L
  200.1600 191.7600 L
  200.4000 191.7600 L
  200.6400 191.7600 L
  200.8800 191.6400 L
  201.0000 191.5200 L
  201.2400 191.5200 L
  201.4800 191.4000 L
  201.7200 191.2800 L
  201.9600 191.0400 L
  202.3200 190.6800 L
  202.4400 190.4400 L
  202.5600 190.3200 L
  202.5600 190.0800 L
  202.6800 189.8400 L
  202.6800 189.6000 L
  202.6800 189.3600 L
  373.8000 189.1200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  198.2400 186.8400 m
  198.2400 192.1200 L
  192.9600 189.4800 L
  198.2400 186.8400 L
F
U
u
  0.000 0.000 0.000 1.000 K
  107.8800 141.7200 m
  154.5600 141.7200 L
  154.5600 170.2800 L
  167.2800 170.2800 L
  167.2800 170.2800 L
  167.2800 170.5200 L
  167.4000 170.7600 L
  167.4000 171.0000 L
  167.5200 171.1200 L
  167.6400 171.3600 L
  167.6400 171.6000 L
  168.0000 171.8400 L
  168.3600 172.2000 L
  168.6000 172.3200 L
  168.7200 172.4400 L
  168.9600 172.4400 L
  169.0800 172.5600 L
  169.3200 172.5600 L
  169.6800 172.5600 L
  169.9200 172.5600 L
  170.0400 172.5600 L
  170.2800 172.4400 L
  170.5200 172.4400 L
  170.7600 172.3200 L
  170.8800 172.2000 L
  171.2400 171.8400 L
  171.4800 171.6000 L
  171.6000 171.3600 L
  171.7200 171.1200 L
  171.8400 171.0000 L
  171.8400 170.7600 L
  171.8400 170.5200 L
  171.8400 170.2800 L
  197.8800 170.2800 L
  197.8800 170.2800 L
  197.8800 170.5200 L
  198.0000 170.7600 L
  198.0000 171.0000 L
  198.1200 171.1200 L
  198.2400 171.3600 L
  198.2400 171.6000 L
  198.6000 171.8400 L
  198.9600 172.2000 L
  199.0800 172.3200 L
  199.3200 172.4400 L
  199.5600 172.4400 L
  199.8000 172.5600 L
  199.9200 172.5600 L
  200.2800 172.5600 L
  200.5200 172.5600 L
  200.6400 172.5600 L
  200.8800 172.4400 L
  201.1200 172.4400 L
  201.3600 172.3200 L
  201.4800 172.2000 L
  201.8400 171.8400 L
  202.2000 171.6000 L
  202.2000 171.3600 L
  202.3200 171.1200 L
  202.4400 171.0000 L
  202.4400 170.7600 L
  202.5600 170.5200 L
  202.5600 170.2800 L
  373.8000 170.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  108.6000 139.0800 m
  108.6000 144.3600 L
  103.3200 141.7200 L
  108.6000 139.0800 L
F
U
u
  0.000 0.000 0.000 1.000 K
  246.9600 148.4400 m
  261.9600 148.4400 L
  261.9600 148.4400 L
  261.9600 148.6800 L
  261.9600 148.9200 L
  261.9600 149.1600 L
  262.0800 149.2800 L
  262.2000 149.5200 L
  262.3200 149.6400 L
  262.5600 150.0000 L
  262.9200 150.3600 L
  263.0400 150.3600 L
  263.2800 150.6000 L
  263.5200 150.6000 L
  263.7600 150.6000 L
  264.0000 150.7200 L
  264.2400 150.7200 L
  264.4800 150.7200 L
  264.7200 150.6000 L
  264.8400 150.6000 L
  265.0800 150.6000 L
  265.2000 150.3600 L
  265.4400 150.3600 L
  265.8000 150.0000 L
  266.1600 149.6400 L
  266.1600 149.5200 L
  266.2800 149.2800 L
  266.4000 149.1600 L
  266.4000 148.9200 L
  266.5200 148.6800 L
  266.5200 148.4400 L
  373.8000 148.4400 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  247.6800 145.8000 m
  247.6800 151.0800 L
  242.2800 148.4400 L
  247.6800 145.8000 L
F
U
u
  0.000 0.000 0.000 1.000 K
  246.9600 132.0000 m
  261.9600 132.0000 L
  261.9600 132.0000 L
  261.9600 132.2400 L
  261.9600 132.4800 L
  261.9600 132.7200 L
  262.0800 132.9600 L
  262.2000 133.0800 L
  262.3200 133.3200 L
  262.5600 133.6800 L
  262.9200 133.9200 L
  263.0400 134.0400 L
  263.2800 134.1600 L
  263.5200 134.1600 L
  263.7600 134.2800 L
  264.0000 134.2800 L
  264.2400 134.2800 L
  264.4800 134.2800 L
  264.7200 134.2800 L
  264.8400 134.1600 L
  265.0800 134.1600 L
  265.2000 134.0400 L
  265.4400 133.9200 L
  265.8000 133.6800 L
  266.1600 133.3200 L
  266.1600 133.0800 L
  266.2800 132.9600 L
  266.4000 132.7200 L
  266.4000 132.4800 L
  266.5200 132.2400 L
  266.5200 132.0000 L
  372.4800 132.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  247.6800 129.3600 m
  247.6800 134.6400 L
  242.2800 132.0000 L
  247.6800 129.3600 L
F
U
u
  0.000 0.000 0.000 1.000 K
  238.6800 69.1200 m
  245.4000 69.1200 L
  245.4000 69.1200 L
  245.4000 69.3600 L
  245.5200 69.6000 L
  245.6400 69.8400 L
  245.6400 70.0800 L
  245.7600 70.3200 L
  245.8800 70.4400 L
  246.1200 70.8000 L
  246.4800 71.0400 L
  246.7200 71.1600 L
  246.8400 71.2800 L
  247.0800 71.4000 L
  247.2000 71.4000 L
  247.5600 71.4000 L
  247.8000 71.4000 L
  248.0400 71.4000 L
  248.1600 71.4000 L
  248.4000 71.4000 L
  248.6400 71.2800 L
  248.8800 71.1600 L
  249.0000 71.0400 L
  249.3600 70.8000 L
  249.6000 70.4400 L
  249.7200 70.3200 L
  249.8400 70.0800 L
  249.9600 69.8400 L
  249.9600 69.6000 L
  249.9600 69.3600 L
  249.9600 69.1200 L
  261.9600 69.1200 L
  261.9600 69.1200 L
  261.9600 69.3600 L
  261.9600 69.6000 L
  261.9600 69.8400 L
  262.0800 70.0800 L
  262.2000 70.3200 L
  262.3200 70.4400 L
  262.5600 70.8000 L
  262.9200 71.0400 L
  263.0400 71.1600 L
  263.2800 71.2800 L
  263.5200 71.4000 L
  263.7600 71.4000 L
  264.0000 71.4000 L
  264.2400 71.4000 L
  264.4800 71.4000 L
  264.7200 71.4000 L
  264.8400 71.4000 L
  265.0800 71.2800 L
  265.2000 71.1600 L
  265.4400 71.0400 L
  265.8000 70.8000 L
  266.1600 70.4400 L
  266.1600 70.3200 L
  266.2800 70.0800 L
  266.4000 69.8400 L
  266.4000 69.6000 L
  266.5200 69.3600 L
  266.5200 69.1200 L
  373.8000 69.1200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  239.4000 66.4800 m
  239.4000 71.7600 L
  234.0000 69.1200 L
  239.4000 66.4800 L
F
U
u
  0.000 0.000 0.000 1.000 K
  200.1600 162.6000 m
  200.5200 201.1200 L
S
U
u
  0.000 0.000 0.000 1.000 K
  200.5200 201.1200 m
  200.2800 201.1200 L
  200.1600 201.2400 L
  199.9200 201.2400 L
  199.8000 201.2400 L
  199.4400 201.4800 L
  199.0800 201.7200 L
  198.8400 201.9600 L
  198.6000 202.3200 L
  198.6000 202.5600 L
  198.4800 202.6800 L
  198.4800 202.9200 L
  198.4800 203.1600 L
  198.4800 203.4000 L
  198.6000 203.5200 L
  198.6000 203.7600 L
  198.6000 203.8800 L
  198.8400 204.2400 L
  199.0800 204.4800 L
  199.4400 204.8400 L
  199.8000 204.9600 L
  199.9200 204.9600 L
  200.1600 205.0800 L
  200.2800 205.0800 L
  200.5200 205.0800 L
  200.5200 205.0800 L
  200.7600 205.0800 L
  200.8800 204.9600 L
  201.1200 204.9600 L
  201.2400 204.9600 L
  201.6000 204.7200 L
  201.9600 204.4800 L
  202.2000 204.2400 L
  202.3200 203.8800 L
  202.4400 203.6400 L
  202.5600 203.5200 L
  202.5600 203.2800 L
  202.5600 203.0400 L
  202.5600 202.8000 L
  202.5600 202.6800 L
  202.4400 202.4400 L
  202.3200 202.3200 L
  202.2000 201.9600 L
  201.9600 201.7200 L
  201.6000 201.4800 L
  201.2400 201.2400 L
  201.0000 201.2400 L
  200.8800 201.1200 L
  200.6400 201.1200 L
  200.5200 201.1200 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  202.8000 163.3200 m
  197.5200 163.3200 L
  200.1600 157.9200 L
  202.8000 163.3200 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  58.5600 87.9600 m
  166.9200 87.9600 L
  166.9200 55.0800 L
  58.5600 55.0800 L
  58.5600 87.9600 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  58.5600 55.0800 m
  58.5600 87.9600 L
  166.9200 87.9600 L
  166.9200 55.0800 L
  58.5600 55.0800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 60.8400 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(out \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.9200 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(=\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 85.9200 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 87.9600 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 93.3600 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 99.0000 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.1600 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 106.5600 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 109.8000 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 114.3600 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 120.7200 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 122.8800 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 128.2800 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(>>\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 139.5600 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 144.9600 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 153.8400 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.8800 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 161.4000 68.6400 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 73.0800 80.8800 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.2400 80.8800 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 108.9600 80.8800 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 111.1200 80.8800 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 147.7200 80.8800 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 149.8800 80.8800 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 99.9600 56.1600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(out\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  150.4800 92.5200 m
  150.4800 129.4800 L
S
U
u
  0.000 0.000 0.000 1.000 K
  150.4800 129.4800 m
  150.2400 129.4800 L
  150.0000 129.4800 L
  149.8800 129.4800 L
  149.6400 129.6000 L
  149.2800 129.8400 L
  148.9200 129.9600 L
  148.8000 130.3200 L
  148.5600 130.6800 L
  148.5600 130.9200 L
  148.4400 131.0400 L
  148.4400 131.2800 L
  148.4400 131.4000 L
  148.4400 131.6400 L
  148.4400 131.8800 L
  148.5600 132.0000 L
  148.5600 132.2400 L
  148.8000 132.6000 L
  148.9200 132.8400 L
  149.2800 133.0800 L
  149.6400 133.3200 L
  149.8800 133.3200 L
  150.0000 133.4400 L
  150.2400 133.4400 L
  150.4800 133.4400 L
  150.4800 133.4400 L
  150.6000 133.4400 L
  150.8400 133.4400 L
  150.9600 133.3200 L
  151.2000 133.3200 L
  151.5600 133.0800 L
  151.8000 132.8400 L
  152.0400 132.6000 L
  152.2800 132.2400 L
  152.2800 132.0000 L
  152.4000 131.8800 L
  152.4000 131.6400 L
  152.4000 131.4000 L
  152.4000 131.2800 L
  152.4000 131.0400 L
  152.2800 130.9200 L
  152.2800 130.6800 L
  152.0400 130.3200 L
  151.8000 129.9600 L
  151.5600 129.8400 L
  151.2000 129.6000 L
  150.9600 129.4800 L
  150.8400 129.4800 L
  150.6000 129.4800 L
  150.4800 129.4800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  153.1200 93.2400 m
  147.7200 93.2400 L
  150.4800 87.9600 L
  153.1200 93.2400 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 186.9600 423.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(V\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 194.7600 423.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 197.8800 423.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.3600 423.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 95.6400 423.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.4000 423.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 89.4000 248.8800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 95.2800 248.8800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 110.0400 248.8800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 115.8000 248.8800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 135.3600 128.0400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 141.2400 128.0400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.4400 8.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(V\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 258.2400 8.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 261.3600 8.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 267.8400 8.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 162.7200 434.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(V\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 170.4000 434.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 173.7600 434.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.1200 434.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.2800 199.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(V\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 210.9600 199.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.2000 199.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 220.6800 199.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  268.2000 420.4800 m
  323.0400 420.4800 L
  323.0400 386.4000 L
  268.2000 386.4000 L
  268.2000 420.4800 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  268.2000 386.4000 m
  268.2000 420.4800 L
  323.0400 420.4800 L
  323.0400 386.4000 L
  268.2000 386.4000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 274.9200 406.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Pipeline \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 283.6800 393.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(logic\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  327.7200 410.8800 m
  373.8000 410.8800 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  328.3200 408.2400 m
  328.3200 413.5200 L
  323.0400 410.8800 L
  328.3200 408.2400 L
F
U
u
  0.000 0.000 0.000 1.000 K
  327.7200 395.8800 m
  373.8000 395.7600 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  328.3200 393.2400 m
  328.3200 398.5200 L
  323.0400 395.8800 L
  328.3200 393.2400 L
F
U
u
  0.000 0.000 0.000 1.000 K
  368.4000 377.5200 m
  295.6800 377.5200 L
  295.6800 386.4000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  367.6800 380.1600 m
  367.6800 374.8800 L
  373.0800 377.5200 L
  367.6800 380.1600 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  31.2000 208.8000 m
  138.1200 208.8000 L
  138.1200 159.3600 L
  31.2000 159.3600 L
  31.2000 208.8000 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  31.2000 159.3600 m
  31.2000 208.8000 L
  138.1200 208.8000 L
  138.1200 159.3600 L
  31.2000 159.3600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 55.4400 186.9600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(out \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.5200 186.9600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(= \(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.4000 186.9600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 88.4400 186.9600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 93.9600 186.9600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(<<\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 105.1200 186.9600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 110.5200 186.9600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 33.2400 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 38.7600 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 40.9200 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 46.3200 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 49.5600 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 54.1200 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 57.3600 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 59.5200 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 64.8000 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 70.4400 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 72.7200 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 78.0000 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 81.2400 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 85.8000 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 92.2800 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 94.3200 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 99.8400 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(>>\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 111.0000 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 116.4000 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 125.2800 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 127.4400 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 132.8400 175.3200 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 42.8400 201.3600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 45.0000 201.3600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 72.7200 201.3600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 74.7600 201.3600 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 97.0800 201.9600 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 98.7600 201.9600 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 120.2400 201.6000 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(i\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 122.4000 201.6000 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 72.6000 163.2000 0 Tp
TP
/_Helvetica 9.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(out\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  46.5600 208.8000 m
  46.5600 213.1200 L
S
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  3.6000 3.4800 m
  413.7600 3.4800 L
  413.7600 446.1600 L
  3.6000 446.1600 L
  3.6000 3.4800 L
n
  208.6800 224.8200 m
F
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1263 1932 a Fx(\(A\))1385 b(\(B\))547 2102
y Fv(Fig)o(.)12 b(1.)19 b Fx(\(A\))f(C)h(code)g(for)g(TEA)f(encryption)
i(function.)g(\(B\))e(Schema)h(of)g(R)l(TL)f(synthesized)i(by)f
(AutoPilot.)523 2467 y FA(consider)30 b(the)g(synthesis)h(of)g(the)f(T)
m(in)o(y)g(Encryption)f(Algorithm)g(\(TEA\))h([9].)g(Fig.)g(1)h(sho)n
(ws)g(a)523 2567 y(C)i(implementation)c(and)j(the)f(circuit)h
(synthesized)f(by)g(the)h(AutoPilot)f(beha)n(vioral)f(synthesis)523
2666 y(tool)20 b([10].)f(The)h(follo)n(wing)e(transformations)g(are)i
(in)m(v)n(olv)o(ed)e(in)j(the)f(synthesis)g(of)g(the)g(circuit.)581
2824 y Fr(\226)41 b FA(In)20 b(the)g(\002rst)h(phase,)f(constant)f
(propagation)e(remo)o(v)o(es)i(unnecessary)f(v)n(ariables.)581
2922 y Fr(\226)41 b FA(In)21 b(the)g(second)f(phase,)h(the)g(k)o(e)o(y)
g(scheduling)e(transformation)g(performed)f(is)k Ft(pipelining)p
FA(,)d(to)664 3022 y(enable)h(o)o(v)o(erlapping)c(e)o(x)o(ecution)j(of)
g(operations)g(from)g(dif)n(ferent)g(loop)g(iterations.)581
3120 y Fr(\226)41 b FA(In)21 b(the)g(third)g(phase,)f(operations)g(are)
h(bound)e(to)j(hardw)o(are)e(resources)g(\()p Ft(e)o(.g)o(.)p
FA(,)f(\223)p Fl(+)p FA(\224)j(operation)664 3219 y(to)f(an)f(adder\),)
e(and)i(the)g(FSM)h(module)e(is)i(generated)d(to)j(schedule)e(circuit)h
(operations.)523 3379 y(Each)34 b(transformation)d(must)j(respect)f
(subtle)h(design)g(in)m(v)n(ariants.)e(F)o(or)i(instance,)f
(paralleling)523 3479 y(operations)c(from)g(dif)n(ferent)f(loop)i
(iterations)f(must)h(a)n(v)n(oid)g(race)g(conditions,)f(and)g
(scheduling)523 3578 y(must)18 b(respect)f(data)h(dependencies.)d
(Since)j(such)f(considerations)f(are)i(entangled)e(with)i(lo)n(w-le)n
(v)o(el)523 3678 y(heuristics,)29 b(it)g(is)h(easy)g(to)f(ha)n(v)o(e)f
(errors)g(in)i(the)f(synthesis)g(tool)g(implementation,)d(resulting)i
(in)523 3777 y(b)n(uggy)15 b(designs)g([5].)g(Ho)n(we)n(v)o(er)m(,)f
(the)i(dif)n(ference)e(in)i(abstraction)f(le)n(v)o(el)h(mak)o(es)g
(direct)g(comparison)523 3877 y(between)j(the)i(C)g(and)e(R)-5
b(TL)21 b(descriptions)e(impractical;)g(performing)f(such)i(comparison)
e(through)523 3977 y(sequential)k(equi)n(v)n(alence)f(checking)g([11])h
(requires)g(cost-prohibiti)n(v)o(e)d(symbolic)j(co-simulation)523
4076 y(to)e(check)g(input/output)d(correspondence.)523
4319 y Fr(1.2)82 b(A)n(ppr)o(oach)19 b(Ov)o(er)o(view)523
4479 y FA(W)-7 b(e)24 b(address)e(the)h(abo)o(v)o(e)e(issue)i(by)f
(breaking)f(the)h(certi\002cation)g(of)g(beha)n(vioral)f(synthesis)i
(trans-)523 4578 y(formations)h(into)i(tw)o(o)g(components,)d
Fk(v)o(eri\002ed)j FA(and)f Fk(v)o(erifying)p FA(.)2413
4548 y Fj(5)2472 4578 y FA(Fig.)h(2)f(illustrates)i(our)e(frame-)523
4678 y(w)o(ork.)k(A)i Fk(v)o(eri\002ed)f FA(transformation)e(is)j
(formally)d(certi\002ed)i(once)f(and)h(for)g(all)g(using)g(theorem)p
523 4746 473 4 v 558 4801 a Fi(5)606 4833 y Fx(The)18
b(terms)h(\223)p Fh(v)o(eri\002ed)p Fx(\224)f(and)h(\223)p
Fh(v)o(erifying)p Fx(\224)g(as)f(used)h(here)g(are)g(borro)n(wed)g
(from)g(analogous)h(notions)f(in)g(the)606 4924 y(compiler)g
(certi\002cation)g(literature.)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 901 1662 a @beginspecial 0 @llx
0 @lly 569 @urx 347 @ury 2551 @rwi @setspecial
%%BeginDocument: figures/framework.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: framework.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5
%%CreationDate: Fri May  8 12:00:26 2009
%%For: xie@luoyang (U-LUOYANG\xie,S-1-5-21-1409082233-1177238915-725345543-1003)
%%BoundingBox: 0 0 569 347
%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 347 moveto 0 0 lineto 569 0 lineto 569 347 lineto closepath clip newpath
1.3 407.6 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-Bold /Times-Bold-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
/Times-Roman-iso ff 180.00 scf sf
8175 6450 m
gs 1 -1 sc (Yes/No) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
2625 1650 m
gs 1 -1 sc (Description) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
2400 1425 m
gs 1 -1 sc (Behavioral Design) col0 sh gr
% Polyline
0 slj
0 slc
15.000 slw
n 4350 1200 m 4200 1200 4200 1650 150 arcto 4 {pop} repeat
  4200 1800 5550 1800 150 arcto 4 {pop} repeat
  5700 1800 5700 1350 150 arcto 4 {pop} repeat
  5700 1200 4350 1200 150 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman-iso ff 180.00 scf sf
4305 1650 m
gs 1 -1 sc (Resource Library) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
4590 1425 m
gs 1 -1 sc (Hardware) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
3195 3180 m
gs 1 -1 sc (primitive transformations) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
3420 2955 m
gs 1 -1 sc (Sequence of applied) col0 sh gr
% Polyline
n 5100 6150 m 7725 6150 l 7725 6600 l 5100 6600 l
 cp gs col0 s gr 
/Times-Bold-iso ff 240.00 scf sf
5250 6450 m
gs 1 -1 sc (Equivalence Checking) col0 sh gr
/Times-Bold-iso ff 180.00 scf sf
9300 2850 m
gs 1 -1 sc  270.0 rot (Verified Component) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
9075 2850 m
gs 1 -1 sc  270.0 rot (\(Theorem Proving or) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
8850 2925 m
gs 1 -1 sc  270.0 rot (Decision Procedures\)) col0 sh gr
/Times-Bold-iso ff 180.00 scf sf
9270 5055 m
gs 1 -1 sc  270.0 rot (Verifying Component) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
9045 5205 m
gs 1 -1 sc  270.0 rot (\(Model Checking\)) col0 sh gr
% Polyline
gs  clippath
1470 4405 m 1470 4590 l 1530 4590 l 1530 4405 l 1530 4405 l 1500 4555 l 1470 4405 l cp
eoclip
n 1500 3975 m
 1500 4575 l gs col0 s gr gr

% arrowhead
7.500 slw
n 1470 4405 m 1500 4555 l 1530 4405 l 1500 4435 l 1470 4405 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
1440 2135 m 1440 2490 l 1560 2490 l 1560 2135 l 1560 2135 l 1500 2435 l 1440 2135 l cp
eoclip
n 2100 1500 m 1500 1500 l
 1500 2475 l gs col0 s gr gr

% arrowhead
n 1440 2135 m 1500 2435 l 1560 2135 l 1500 2195 l 1440 2135 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1470 5230 m 1470 5415 l 1530 5415 l 1530 5230 l 1530 5230 l 1500 5380 l 1470 5230 l cp
eoclip
n 1500 4875 m
 1500 5400 l gs col0 s gr gr

% arrowhead
7.500 slw
n 1470 5230 m 1500 5380 l 1530 5230 l 1500 5260 l 1470 5230 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
4930 6405 m 5115 6405 l 5115 6345 l 4930 6345 l 4930 6345 l 5080 6375 l 4930 6405 l cp
eoclip
n 2700 6375 m
 5100 6375 l gs col0 s gr gr

% arrowhead
7.500 slw
n 4930 6405 m 5080 6375 l 4930 6345 l 4960 6375 l 4930 6405 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
1470 6055 m 1470 6240 l 1530 6240 l 1530 6055 l 1530 6055 l 1500 6205 l 1470 6055 l cp
eoclip
n 1500 5700 m
 1500 6225 l gs col0 s gr gr

% arrowhead
7.500 slw
n 1470 6055 m 1500 6205 l 1530 6055 l 1500 6085 l 1470 6055 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 900 4575 m 750 4575 750 4725 150 arcto 4 {pop} repeat
  750 4875 2175 4875 150 arcto 4 {pop} repeat
  2325 4875 2325 4725 150 arcto 4 {pop} repeat
  2325 4575 900 4575 150 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
7.500 slw
n 2250 1035 m 2100 1035 2100 1785 150 arcto 4 {pop} repeat
  2100 1935 5775 1935 150 arcto 4 {pop} repeat
  5925 1935 5925 1185 150 arcto 4 {pop} repeat
  5925 1035 2250 1035 150 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
15.000 slw
 [60] 0 sd
gs  clippath
4930 3330 m 5115 3330 l 5115 3270 l 4930 3270 l 4930 3270 l 5080 3300 l 4930 3330 l cp
eoclip
n 3150 3300 m
 5100 3300 l gs col0 s gr gr
 [] 0 sd
% arrowhead
7.500 slw
n 4930 3330 m 5080 3300 l 4930 3270 l 4960 3300 l 4930 3330 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 525 5400 m 2700 5400 l 2700 5700 l 525 5700 l
 cp gs col0 s gr 
% Polyline
n 675 6225 m 525 6225 525 6375 150 arcto 4 {pop} repeat
  525 6525 2550 6525 150 arcto 4 {pop} repeat
  2700 6525 2700 6375 150 arcto 4 {pop} repeat
  2700 6225 675 6225 150 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
7.500 slw
 [60 30 15 30] 0 sd
n 8550 2475 m 8775 2475 l 8775 4950 l
 8550 4950 l gs col0 s gr  [] 0 sd
% Polyline
 [60 30 15 30] 0 sd
n 8550 5175 m 8775 5175 l 8775 6600 l
 8550 6600 l gs col0 s gr  [] 0 sd
% Polyline
15.000 slw
n 5235 4800 m 5100 4800 5100 5190 135 arcto 4 {pop} repeat
  5100 5325 8265 5325 135 arcto 4 {pop} repeat
  8400 5325 8400 4935 135 arcto 4 {pop} repeat
  8400 4800 5235 4800 135 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5100 2490 m 8400 2490 l 8400 3990 l 5100 3990 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6720 4630 m 6720 4815 l 6780 4815 l 6780 4630 l 6780 4630 l 6750 4780 l 6720 4630 l cp
eoclip
n 6750 3975 m
 6750 4800 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6720 4630 m 6750 4780 l 6780 4630 l 6750 4660 l 6720 4630 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
6720 5980 m 6720 6165 l 6780 6165 l 6780 5980 l 6780 5980 l 6750 6130 l 6720 5980 l cp
eoclip
n 6750 5325 m
 6750 6150 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6720 5980 m 6750 6130 l 6780 5980 l 6750 6010 l 6720 5980 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
6690 2135 m 6690 2490 l 6810 2490 l 6810 2135 l 6810 2135 l 6750 2435 l 6690 2135 l cp
eoclip
n 5925 1500 m 6750 1500 l
 6750 2475 l gs col0 s gr gr

% arrowhead
n 6690 2135 m 6750 2435 l 6810 2135 l 6750 2195 l 6690 2135 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 0 2475 m 3150 2475 l 3150 3975 l 0 3975 l
 cp gs col0 s gr 
% Polyline
gs  clippath
8012 6404 m 8197 6400 l 8196 6340 l 8011 6344 l 8011 6344 l 8162 6371 l 8012 6404 l cp
eoclip
n 7740 6381 m
 8182 6371 l gs col0 s gr gr

% arrowhead
7.500 slw
n 8012 6404 m 8162 6371 l 8011 6344 l 8042 6373 l 8012 6404 l 
 cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 180.00 scf sf
257 3160 m
gs 1 -1 sc (\(Algorithms/heuristics/user-guidence) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
482 3385 m
gs 1 -1 sc (deciding sequence of primitive ) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
107 3835 m
gs 1 -1 sc (Application of primitive transformations\)) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
557 3610 m
gs 1 -1 sc (transformations to be applied;) col0 sh gr
/Times-Bold-iso ff 240.00 scf sf
572 2785 m
gs 1 -1 sc (Behavioral Synthesis) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
975 4800 m
gs 1 -1 sc (Synthesized RTL) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
600 5625 m
gs 1 -1 sc (Manual RTL Optimizations) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 6450 m
gs 1 -1 sc (Manually Optimized RTL) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5925 5025 m
gs 1 -1 sc (Golden Circuit Model) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5408 5211 m
gs 1 -1 sc (\(Clocked Control/Data Flow Graphs\)) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5902 3397 m
gs 1 -1 sc (primitive transformations;) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5902 3172 m
gs 1 -1 sc (\(Application of certified) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5452 3622 m
gs 1 -1 sc (Offline proof of transformation rules;\)) col0 sh gr
/Times-Bold-iso ff 240.00 scf sf
5775 2775 m
gs 1 -1 sc (Certified Compiler) col0 sh gr
% Polyline
15.000 slw
n 2475 1200 m 2325 1200 2325 1650 150 arcto 4 {pop} repeat
  2325 1800 3675 1800 150 arcto 4 {pop} repeat
  3825 1800 3825 1350 150 arcto 4 {pop} repeat
  3825 1200 2475 1200 150 arcto 4 {pop} repeat
 cp gs col0 s gr 
% here ends figure;
$F2psEnd
rs
showpage
%%Trailer
%EOF

%%EndDocument
 @endspecial 1006 1836 a Fv(Fig)o(.)11 b(2.)19 b Fx(Frame)n(w)o(ork)h
(for)e(certi\002cation)h(of)g(beha)o(vioral)h(synthesis)f(\003o)n(ws)
523 2122 y FA(pro)o(ving;)26 b(a)i Fk(v)o(erifying)g
FA(transformation)e(is)j(not)e(itself)i(v)o(eri\002ed,)e(b)n(ut)h(each)
g(instance)g(is)h(accom-)523 2222 y(panied)23 b(by)h(a)h(v)o
(eri\002cation)e(of)h(correspondence)d(between)i(input)h(and)f(output.)
g(The)h(viability)g(of)523 2322 y(decomposition)h(is)k(justi\002ed)f
(by)f(the)h(nature)f(of)g(beha)n(vioral)f(synthesis.)i(T)m
(ransformations)d(ap-)523 2421 y(plied)i(at)h(the)f(higher)f(le)n(v)o
(el,)h(\()p Ft(e)o(.g)o(.)p FA(,)f(compiler)g(and)h(scheduling)f
(transformations\))e(are)k(generic.)523 2521 y(The)22
b(cost)g(of)g(a)g(monolithic)e(proof)h(is)i(therefore)d(mitigated)h(by)
g(the)h(reusability)f(of)h(the)g(transfor)n(-)523 2620
y(mation)j(o)o(v)o(er)f(dif)n(ferent)f(designs.)i(Such)g
(transformations)e(mak)o(e)i(up)g(the)h Fk(v)o(eri\002ed)f
FA(component.)523 2720 y(On)19 b(the)f(other)g(hand,)g(the)g
(optimizations)g(performed)e(at)j(the)g(lo)n(wer)f(le)n(v)o(els)g(are)h
(unique)e(to)i(the)g(de-)523 2820 y(sign)e(being)e(synthesized;)h
(these)h(transformations)d(constitute)i(the)h Fk(v)o(erifying)g
FA(component.)c(Since)523 2919 y(the)26 b(v)o(eri\002cation)e(is)i
(dischar)o(ged)d(per)i(instance,)g(it)i(must)e(be)h(fully)f(automatic.)
f(Ho)n(we)n(v)o(er)m(,)f(these)523 3019 y(transformations)28
b(tend)h(to)h(be)g(localized)f(and)g(independent)e(of)j(global)f(in)m
(v)n(ariants,)f(making)h(it)523 3119 y(tractable)20 b(to)g(v)o(erify)f
(them)h(automatically)e(by)i(sequential)f(equi)n(v)n(alence)g
(checking.)523 3366 y Fr(1.3)82 b(Golden)20 b(Cir)o(cuit)g(Model)h(and)
f(Synthesis)h(Certi\002cation)523 3530 y FA(In)16 b(a)h(practical)f
(synthesis)h(tool,)f(transformations)e(are)i(implemented)f(with)i(lo)n
(w-le)n(v)o(el,)e(optimized)523 3629 y(code.)21 b(A)i(nai)n(v)o(e)e
(approach)g(for)g(the)h Fk(v)o(eri\002ed)h FA(component,)c
Ft(e)o(.g)o(.)p FA(,)i(to)i(formally)d(v)o(erify)h(such)h(a)h(tool)523
3729 y(with)h(all)h(optimizations)e(w)o(ould)g(be)h(prohibiti)n(v)o(e.)
e(Furthermore,)f(such)j(an)g(approach)e(w)o(ould)i(tie)523
3828 y(the)c(frame)n(w)o(ork)e(to)j(a)f(single)g(tool,)g(limiting)g
(reusability)-5 b(.)648 3928 y(T)e(o)33 b(mitigate)f(this)i(challenge,)
e(we)h(de)n(v)o(elop)f(a)h(formal,)f(graph-based)f(abstraction)h
(called)523 4028 y Ft(cloc)n(k)o(ed)19 b(contr)l(ol/data)e(\003ow)i(gr)
o(aph)f FA(\(CCDFG\),)i(which)e(serv)o(es)h(as)h(the)f(uni)n(v)o(ersal)
f(golden)g(circuit)523 4127 y(model.)25 b(W)-7 b(e)28
b(discuss)f(our)f(formalization)e(of)i(CCDFG)i(in)f(Section)f(2.)g
(CCDFG)i(is)g(an)e(abstrac-)523 4227 y(tion)18 b(of)g(the)g
(control/data)e(\003o)n(w)i(graph)e(\(CDFG\))j(\227)f(used)g(as)h(an)f
(intermediate)e(representation)g(in)523 4327 y(most)22
b(synthesis)g(tools)g(\227)g(augmented)e(with)i(a)g(schedule.)f(The)h
(close)g(connection)d(between)i(the)523 4426 y(formal)26
b(abstraction)f(and)h(the)h(representation)e(used)h(in)h(a)g(synthesis)
g(\003o)n(w)f(enables)h(us)g(to)g(vie)n(w)523 4526 y(synthesis)d
(transformations)e(as)j(transformations)d(on)i(CCDFG,)h(while)f(ob)o
(viating)e(a)j(morass)f(of)523 4625 y(tool-speci\002c)15
b(details.)g(W)-7 b(e)17 b(construct)e(a)h Ft(r)m(efer)m(ence)g(\003ow)
f FA(as)i(a)f(sequence)e(of)i(CCDFG)h(transforma-)523
4725 y(tions)h(as)h(follo)n(ws:)f(each)g(transformation)d(generates)i
(a)i(CCDFG)g(that)g(is)g(guaranteed)d(to)i(preserv)o(e)523
4825 y(semantic)29 b(correspondence)d(with)k(its)g(input.)e(A)i
(production)d(transformation)g(is)j(decomposed)523 4924
y(into)e Ft(primitive)g(tr)o(ansformations)p FA(,)f(together)f(with)j
(algorithms/heuristics)d(that)i(determine)e(the)p eop
end
%%Page: 5 5
TeXDict begin 5 4 bop 523 448 a FA(application)23 b(sequence)h(of)g
(these)h(transformations.)d(Once)i(the)h(primiti)n(v)o(e)e
(transformations)g(are)523 548 y(certi\002ed,)h(the)g(algorithms)f(or)h
(heuristics)h(do)f(not)g(af)n(fect)f(the)i(correctness)e(of)h(a)h
(transformation)523 648 y(sequence,)f(only)h(the)g(performance.)d(The)j
(reference)f(\003o)n(w)i(requires)e(no)h(kno)n(wledge)e(about)h(the)523
747 y(algorithms/heuristics)18 b(which)i(are)g(often)f(con\002dential)g
(to)i(a)f(synthesis)g(tool.)648 849 y(Gi)n(v)o(en)j(a)j(synthesized)d
(hardw)o(are)h(design)g Fg(D)j FA(and)d(its)i(corresponding)21
b(beha)n(vioral)j(descrip-)523 948 y(tion,)c(the)g(certi\002cation)f
(of)h(the)g(hardw)o(are)f(can)h(be)g(mechanically)f(performed)e(as)k
(follo)n(ws.)581 1122 y Fr(\226)41 b FA(Extract)20 b(the)g(CCDFG)h
Fg(C)26 b FA(from)19 b(the)h(beha)n(vioral)f(description.)581
1223 y Fr(\226)41 b FA(Apply)17 b(the)h(certi\002ed)f(primiti)n(v)o(e)f
(transformations)g(from)g(the)i(reference)e(\003o)n(w)-5
b(,)17 b(follo)n(wing)f(the)664 1323 y(application)i(sequence)g(pro)o
(vided)e(by)j(the)g(synthesis)g(tool.)g(The)g(result)g(is)h(a)f(CCDFG)i
Fg(C)3238 1293 y Fo(0)3280 1323 y FA(that)664 1423 y(is)g(close)g(to)f
(to)g Fg(D)j FA(in)e(abstraction)e(le)n(v)o(el.)581 1524
y Fr(\226)41 b FA(Apply)19 b(equi)n(v)n(alence)g(checking)f(to)i
(guarantee)f(correspondence)e(between)i Fg(C)2943 1494
y Fo(0)2987 1524 y FA(and)g Fg(D)r FA(.)523 1696 y(The)g(o)o(v)o(erall)
f(correctness)h(of)g(this)h(certi\002cation)f(is)i(justi\002ed)e(by)h
(the)f(correctness)g(of)g(the)h Fk(v)o(eri\002ed)523
1795 y FA(and)g Fk(v)o(erifying)g FA(components)e(and)h(their)h
(coupling)e(through)g(the)j(CCDFG)g Fg(C)2782 1765 y
Fo(0)2805 1795 y FA(.)648 1897 y(Ho)n(w)c(does)h(the)f(approach)f
(disentangle)g(the)i(certi\002cation)f(of)g(a)i(synthesized)d(hardw)o
(are)h(from)523 1996 y(the)g(inner)f(w)o(orkings)f(of)h(the)h
(synthesis)g(tool?)f(Although)f(each)h(certi\002ed)g(transformation)e
(mimics)523 2096 y(a)25 b(corresponding)c(transformation)h(applied)i
(by)g(the)h(tool,)f(from)g(the)g(perspecti)n(v)o(e)f(of)i
Ft(certifying)523 2196 y FA(the)17 b(hardw)o(are)f(the)o(y)g(are)h
(merely)f(heuristic)h(guides)f(transforming)f(CCDFGs)j(to)g(f)o
(acilitate)f(equi)n(v-)523 2295 y(alence)k(checking:)f(certi\002cation)
g(of)h(the)g(synthesized)g(hardw)o(are)f(reduces)g(to)h(checking)f
(that)h(the)523 2395 y Ft(initial)j FA(CCDFG)g(re\003ects)g(the)g
(design)f(intent.)g(The)g(initial)h(CCDFG)g(can)g(be)f(automatically)f
(e)o(x-)523 2495 y(tracted)16 b(from)f(the)i(synthesis)f(tools')g
(initial)h(internal)e(representation.)2565 2464 y Fj(6)2613
2495 y FA(Furthermore,)e(the)k(frame-)523 2594 y(w)o(ork)j(abstracts)g
(lo)n(w-le)n(v)o(el)f(optimizations)g(making)f(the)j(v)o(eri\002cation)
d(problem)h(tractable.)648 2696 y(The)g(rest)i(of)f(the)g(paper)f(is)i
(or)o(ganized)c(as)k(follo)n(ws.)f(In)f(Section)h(2)g(we)h(present)e
(the)h(semantics)523 2795 y(of)15 b(CCDFG.)h(In)f(Section)g(3)h(we)f
(discuss)h(ho)n(w)e(to)i(use)f(theorem)f(pro)o(ving)f(to)i(v)o(erify)f
(the)i(correctness)523 2895 y(of)22 b(generic)f(CCDFG)j
(transformations.)19 b(In)j(Section)g(4)g(we)h(present)f(our)f(equi)n
(v)n(alence)f(checking)523 2995 y(procedure.)e(W)-7 b(e)21
b(pro)o(vide)d(initial)j(e)o(xperimental)d(results)i(in)h(Section)e(5,)
h(discuss)h(related)f(w)o(ork)f(in)523 3094 y(Section)h(6,)g(and)g
(conclude)e(in)i(Section)g(7.)523 3369 y Fu(2)99 b(Clock)o(ed)26
b(Contr)n(ol/Data)f(Flo)o(w)f(Graphs)523 3578 y FA(A)19
b(CCDFG)h(can)e(be)g(vie)n(wed)g(as)h(a)g(formal)e Ft(contr)l(ol/data)g
(\003ow)i(gr)o(aph)e FA(\(CDFG\))h(\227)h(used)g(as)g(inter)n(-)523
3677 y(nal)h(representation)e(in)i(most)g(synthesis)g(tools)g
(including)e(Spark)h(and)g(Autopilot)g(\227)i(augmented)523
3777 y(with)29 b(a)g(schedule.)f(Fig.)h(3)g(sho)n(ws)g(tw)o(o)g(CCDFGs)
i(for)d(the)h(TEA)g(encryption.)d(The)i(semantics)523
3877 y(of)23 b(CCDFG)j(are)d(formalized)f(in)i(the)g(logic)f(of)g(the)h
(A)m(CL2)g(theorem)e(pro)o(v)o(er)f([12].)i(This)h(section)523
3976 y(brie\003y)c(discusses)g(the)h(formulation)c(of)j(a)h(CCDFG;)g
(for)f(a)h(more)e(complete)g(account,)g(see)i([13].)648
4078 y(The)27 b(formalization)f(of)i(CCDFG)i(assumes)e(that)g(the)g
(underlying)e(language)g(pro)o(vides)g(the)523 4177 y(semantics)16
b(for)g(a)h(collection)e Ft(ops)i FA(of)f Ft(primitive)h(oper)o(ations)
p FA(.)d(The)i(primiti)n(v)o(e)g(operations)e(in)j(Fig.)f(1)523
4277 y(include)29 b(comparison)f(and)h(arithmetic)h(operations.)e(W)-7
b(e)31 b(also)f(assume)g(a)h(partition)d(of)i(design)523
4377 y(v)n(ariables)20 b(into)g Ft(state)i(variables)e
FA(and)g Ft(input)g(variables)p FA(.)g(V)-9 b(ariable)20
b(assignments)g(are)h(assumed)f(to)523 4476 y(be)e(in)f(a)i(Static)f
(in)g(Single)f(Static)h(Assignment)f(\(SSA\))h(form.)f(Design)g
(descriptions)f(are)i(assumed)523 4576 y(to)24 b(be)f(amenable)g(to)g
(control)g(and)g(data)g(\003o)n(w)h(analysis.)f(Control)g(\003o)n(w)h
(is)g(brok)o(en)e(up)h(into)g(basic)p 523 4654 473 4
v 558 4710 a Fi(6)606 4742 y Fx(Since)c(the)h(input)f(description)i(is)
e(normally)h(unclock)o(ed,)h(the)e(initial)g(CCDFG)f(does)i(not)g
(contain)g(sched-)606 4833 y(ule)d(information,)h(and)g(can)f(be)h(vie)
n(wed)g(as)f(a)g(CDFG.)f(Schedules)i(are)f(generated)i(by)e(synthesis)h
(transfor)o(-)606 4924 y(mations)h(that)g(turn)g(the)g(unclock)o(ed)i
(representation)f(to)f(a)g(clock)o(ed)h(one.)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 542 2240 a @beginspecial 0 @llx
0 @lly 367 @urx 466 @ury 1764 @rwi @setspecial
%%BeginDocument: figures/ccdfg3.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\Documents and Settings\HKC\Desktop\fig\eps\ccdfg3.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 367 466
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 367 466
%AI3_TileBox: 0 0 367 466
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.141 0.110 0.051 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  122.0400 85.9200 m
  296.0400 85.9200 L
  296.0400 21.7200 L
  122.0400 21.7200 L
  122.0400 85.9200 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  122.0400 21.7200 m
  122.0400 85.9200 L
  296.0400 85.9200 L
  296.0400 21.7200 L
  122.0400 21.7200 L
s
U
u
  0.141 0.110 0.051 0.000 k
  0.000 0.000 0.000 1.000 K
  122.0400 155.6400 m
  296.0400 155.6400 L
  296.0400 92.5200 L
  122.0400 92.5200 L
  122.0400 155.6400 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  122.0400 92.5200 m
  122.0400 155.6400 L
  296.0400 155.6400 L
  296.0400 92.5200 L
  122.0400 92.5200 L
s
U
u
  0.141 0.110 0.051 0.000 k
  0.000 0.000 0.000 1.000 K
  122.0400 248.8800 m
  296.0400 248.8800 L
  296.0400 162.3600 L
  122.0400 162.3600 L
  122.0400 248.8800 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  122.0400 162.3600 m
  122.0400 248.8800 L
  296.0400 248.8800 L
  296.0400 162.3600 L
  122.0400 162.3600 L
s
U
u
  0.141 0.110 0.051 0.000 k
  0.000 0.000 0.000 1.000 K
  8.4000 398.1600 m
  296.2800 398.1600 L
  296.2800 255.3600 L
  8.4000 255.3600 L
  8.4000 398.1600 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  8.4000 255.3600 m
  8.4000 398.1600 L
  296.2800 398.1600 L
  296.2800 255.3600 L
  8.4000 255.3600 L
s
U
u
  0.141 0.110 0.051 0.000 k
  0.000 0.000 0.000 1.000 K
  120.9600 456.9600 m
  294.9600 456.9600 L
  294.9600 408.4800 L
  120.9600 408.4800 L
  120.9600 456.9600 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  120.9600 408.4800 m
  120.9600 456.9600 L
  294.9600 456.9600 L
  294.9600 408.4800 L
  120.9600 408.4800 L
s
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  130.6800 391.3200 m
  285.2400 391.3200 L
  285.2400 343.8000 L
  130.6800 343.8000 L
  130.6800 391.3200 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 343.8000 m
  130.6800 391.3200 L
  285.2400 391.3200 L
  285.2400 343.8000 L
  130.6800 343.8000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 142.6800 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(newPhi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.9600 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.9200 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(phi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 212.6400 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.4800 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.9600 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(, \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.4400 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(newbin\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 266.1600 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 270.0000 378.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(;\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 145.2000 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 151.0800 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 157.4400 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 163.9200 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 173.6400 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.6000 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(phi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 202.3200 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 206.2800 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 212.0400 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.1600 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 221.6400 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 224.8800 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(, \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 231.3600 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.6800 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(56\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 263.6400 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 267.4800 364.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(;\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 146.8800 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 152.6400 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 159.1200 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 165.6000 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 175.3200 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.2800 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(phi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.0000 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.8400 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.6000 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.8400 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 223.3200 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 226.5600 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(, \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 233.0400 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.2400 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(41\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 265.2000 350.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  144.2400 325.0800 m
  207.9600 315.1200 L
  271.6800 325.0800 L
  207.9600 335.1600 L
  144.2400 325.0800 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  144.2400 325.0800 m
  207.9600 315.1200 L
  271.6800 325.0800 L
  207.9600 335.1600 L
  144.2400 325.0800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 172.5600 321.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(newPhi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.7200 321.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(== \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 230.5200 321.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(32\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  130.6800 450.2400 m
  285.2400 450.2400 L
  285.2400 435.4800 L
  130.6800 435.4800 L
  130.6800 450.2400 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 435.4800 m
  130.6800 450.2400 L
  285.2400 450.2400 L
  285.2400 435.4800 L
  130.6800 435.4800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 195.0000 439.4400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Input\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  130.6800 303.1200 m
  285.2400 303.1200 L
  285.2400 288.3600 L
  130.6800 288.3600 L
  130.6800 303.1200 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 288.3600 m
  130.6800 303.1200 L
  285.2400 303.1200 L
  285.2400 288.3600 L
  130.6800 288.3600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 154.0800 292.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(newbin \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 194.1600 292.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.1200 292.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(newPhi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 245.4000 292.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 255.3600 292.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  130.6800 279.1200 m
  285.2400 279.1200 L
  285.2400 264.3600 L
  130.6800 264.3600 L
  130.6800 279.1200 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 264.3600 m
  130.6800 279.1200 L
  285.2400 279.1200 L
  285.2400 264.3600 L
  130.6800 264.3600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 150.1200 268.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(sum\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 171.9600 268.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.6800 268.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.6400 268.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(newPhi\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.6800 268.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(*\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 234.2400 268.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(delta\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 259.4400 268.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  14.5200 312.6000 m
  106.3200 312.6000 L
  106.3200 284.1600 L
  14.5200 284.1600 L
  14.5200 312.6000 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  14.5200 284.1600 m
  14.5200 312.6000 L
  106.3200 312.6000 L
  106.3200 284.1600 L
  14.5200 284.1600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 30.2400 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 36.1200 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 39.3600 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 45.8400 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(] = \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 62.1600 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.0400 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 74.5200 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 80.8800 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 87.3600 301.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(;\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 31.9200 288.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 37.6800 288.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 40.9200 288.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 47.4000 288.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(] = \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 63.8400 288.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 69.7200 288.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.0800 288.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 82.5600 288.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  14.5200 276.4800 m
  106.3200 276.4800 L
  106.3200 259.5600 L
  14.5200 259.5600 L
  14.5200 276.4800 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  14.5200 259.5600 m
  14.5200 276.4800 L
  106.3200 276.4800 L
  106.3200 259.5600 L
  14.5200 259.5600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 45.3600 264.6000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(return\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  130.6800 239.0400 m
  285.2400 239.0400 L
  285.2400 224.2800 L
  130.6800 224.2800 L
  130.6800 239.0400 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 224.2800 m
  130.6800 239.0400 L
  285.2400 239.0400 L
  285.2400 224.2800 L
  130.6800 224.2800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 151.8000 228.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 171.2400 228.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(26 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.3200 228.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 197.2800 228.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(sum\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.2400 228.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 225.7200 228.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 232.4400 228.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(delta\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.6400 228.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  130.6800 213.3600 m
  285.2400 213.3600 L
  285.2400 168.1200 L
  130.6800 168.1200 L
  130.6800 213.3600 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 168.1200 m
  130.6800 213.3600 L
  285.2400 213.3600 L
  285.2400 168.1200 L
  130.6800 168.1200 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 136.5600 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.8800 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(39 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 171.9600 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 185.8800 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.7600 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.1200 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.6000 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.3200 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(<< \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 231.0000 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.4800 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) + \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 254.6400 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 260.4000 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 266.8800 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 273.9600 201.1200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 134.4000 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 138.3600 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 157.6800 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(26 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 173.7600 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.8400 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.6000 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 196.0800 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 202.5600 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 209.0400 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.0000 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 224.7600 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 232.4400 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.2000 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.6800 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 251.1600 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.5200 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(>>\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 271.0800 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 277.5600 187.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.9600 173.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 202.9200 173.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.8000 173.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.1600 173.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  130.6800 149.8800 m
  285.2400 149.8800 L
  285.2400 135.0000 L
  130.6800 135.0000 L
  130.6800 149.8800 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 135.0000 m
  130.6800 149.8800 L
  285.2400 149.8800 L
  285.2400 135.0000 L
  130.6800 135.0000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 153.1200 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.5600 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(41 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 188.6400 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.6000 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 217.9200 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(39\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 230.8800 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.6000 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.4800 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.8400 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 256.3200 138.9600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  130.6800 126.7200 m
  285.2400 126.7200 L
  285.2400 97.4400 L
  130.6800 97.4400 L
  130.6800 126.7200 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 97.4400 m
  130.6800 126.7200 L
  285.2400 126.7200 L
  285.2400 97.4400 L
  130.6800 97.4400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 145.8000 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 165.0000 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(49 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.2000 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.0000 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 214.4400 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(41\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.2800 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 234.1200 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 253.4400 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(26\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 266.4000 115.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 161.8800 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 167.2800 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 175.0800 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 194.4000 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(41\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.3600 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(>>\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 220.9200 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.2800 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.9600 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.7200 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.2000 101.6400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  130.6800 79.2000 m
  285.2400 79.2000 L
  285.2400 50.8800 L
  130.6800 50.8800 L
  130.6800 79.2000 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 50.8800 m
  130.6800 79.2000 L
  285.2400 79.2000 L
  285.2400 50.8800 L
  130.6800 50.8800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 132.9600 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 152.4000 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(54 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 168.4800 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 186.2400 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 205.5600 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(41 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 221.6400 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(<< \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.4400 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 248.1600 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 258.1200 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 264.0000 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 270.3600 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 277.5600 68.5200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.9600 54.6000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 209.2800 54.6000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(49\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.2400 54.6000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.0000 w
  0.000 0.000 0.000 1.000 K
1 J
1 j
  207.9600 338.0400 m
  207.9600 343.8000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 338.7600 m
  204.3600 338.7600 L
  207.9600 335.1600 L
  211.5600 338.7600 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  207.9600 306.0000 m
  207.9600 315.1200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 306.7200 m
  204.3600 306.7200 L
  207.9600 303.1200 L
  211.5600 306.7200 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  60.4800 315.3600 m
  60.4800 325.2000 L
  144.2400 325.2000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  64.0800 316.0800 m
  56.8800 316.0800 L
  60.4800 312.6000 L
  64.0800 316.0800 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  207.9600 282.0000 m
  207.9600 288.3600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 282.7200 m
  204.3600 282.7200 L
  207.9600 279.1200 L
  211.5600 282.7200 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  207.9600 241.9200 m
  207.9600 264.3600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 242.6400 m
  204.3600 242.6400 L
  207.9600 239.0400 L
  211.5600 242.6400 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  207.9600 216.1200 m
  207.9600 224.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 216.8400 m
  204.3600 216.8400 L
  207.9600 213.3600 L
  211.5600 216.8400 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  207.9600 152.6400 m
  207.9600 168.1200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 153.3600 m
  204.3600 153.3600 L
  207.9600 149.8800 L
  211.5600 153.3600 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  207.9600 129.6000 m
  207.9600 135.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 130.3200 m
  204.3600 130.3200 L
  207.9600 126.7200 L
  211.5600 130.3200 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  207.9600 81.9600 m
  207.9600 97.4400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 82.6800 m
  204.3600 82.6800 L
  207.9600 79.2000 L
  211.5600 82.6800 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  130.6800 42.1200 m
  285.2400 42.1200 L
  285.2400 27.3600 L
  130.6800 27.3600 L
  130.6800 42.1200 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 27.3600 m
  130.6800 42.1200 L
  285.2400 42.1200 L
  285.2400 27.3600 L
  130.6800 27.3600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 153.1200 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.5600 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(56 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 188.6400 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.6000 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 217.9200 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(54\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 230.8800 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.6000 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.4800 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.8400 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 256.3200 31.2000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  207.9600 45.0000 m
  207.9600 50.8800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 45.7200 m
  204.3600 45.7200 L
  207.9600 42.1200 L
  211.5600 45.7200 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  210.8400 403.4400 m
  342.7200 403.4400 L
  342.7200 9.8400 L
  207.9600 9.8400 L
  207.9600 27.3600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 399.8400 m
  211.5600 407.0400 L
  207.9600 403.4400 L
  211.5600 399.8400 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 145.2000 328.0800 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 178.5600 307.6800 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(N\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 23.0400 207.2400 0 Tp
TP
/_Helvetica 13.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Scheduling \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 42.6000 191.0400 0 Tp
TP
/_Helvetica 13.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Step\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 XR

  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
1 j
*u
  89.8800 249.3600 m
  89.8800 249.3600 L
  89.8800 249.3600 L
  89.8800 249.2400 L
  89.7600 249.1200 L
  89.7600 249.0000 L
  89.7600 248.8800 L
  89.8800 248.7600 L
  89.8800 248.6400 L
  90.0000 248.6400 L
  90.0000 248.5200 L
  90.1200 248.5200 L
  90.2400 248.5200 L
  90.3600 248.5200 L
  90.4800 248.5200 L
  90.6000 248.5200 L
  90.7200 248.5200 L
  90.7200 248.6400 L
  92.2800 250.2000 L
  92.2800 250.3200 L
  92.4000 250.4400 L
  92.4000 250.4400 L
  92.4000 250.6800 L
  92.4000 250.6800 L
  92.4000 250.8000 L
  92.2800 250.9200 L
  92.2800 251.0400 L
  92.0400 251.0400 L
  92.0400 251.1600 L
  91.9200 251.1600 L
  91.8000 251.1600 L
  91.6800 251.1600 L
  91.5600 251.1600 L
  91.5600 251.0400 L
  91.4400 251.0400 L
  89.8800 249.3600 L
  89.8800 249.3600 L
B
u
  80.4000 239.2800 m
  80.4000 239.2800 L
  80.2800 239.1600 L
  80.2800 239.0400 L
  80.2800 239.0400 L
  80.2800 238.8000 L
  80.2800 238.6800 L
  80.2800 238.6800 L
  80.4000 238.5600 L
  80.5200 238.4400 L
  80.5200 238.3200 L
  80.6400 238.3200 L
  80.7600 238.3200 L
  80.8800 238.3200 L
  81.0000 238.3200 L
  81.1200 238.3200 L
  81.2400 238.4400 L
  81.2400 238.4400 L
  86.7600 244.4400 L
  86.8800 244.4400 L
  86.8800 244.5600 L
  86.8800 244.6800 L
  87.0000 244.8000 L
  86.8800 244.9200 L
  86.8800 245.0400 L
  86.8800 245.1600 L
  86.7600 245.1600 L
  86.7600 245.2800 L
  86.5200 245.4000 L
  86.5200 245.4000 L
  86.4000 245.4000 L
  86.2800 245.4000 L
  86.1600 245.2800 L
  86.0400 245.2800 L
  86.0400 245.1600 L
  80.4000 239.2800 L
  80.4000 239.2800 L
B
U
u
  70.9200 229.0800 m
  70.9200 229.0800 L
  70.8000 228.9600 L
  70.8000 228.9600 L
  70.8000 228.8400 L
  70.8000 228.7200 L
  70.8000 228.6000 L
  70.8000 228.4800 L
  70.9200 228.3600 L
  71.0400 228.2400 L
  71.0400 228.2400 L
  71.1600 228.1200 L
  71.2800 228.1200 L
  71.4000 228.1200 L
  71.5200 228.1200 L
  71.5200 228.2400 L
  71.7600 228.2400 L
  71.7600 228.2400 L
  77.2800 234.2400 L
  77.4000 234.3600 L
  77.4000 234.4800 L
  77.4000 234.4800 L
  77.5200 234.6000 L
  77.4000 234.8400 L
  77.4000 234.8400 L
  77.4000 234.9600 L
  77.2800 235.0800 L
  77.1600 235.2000 L
  77.0400 235.2000 L
  77.0400 235.2000 L
  76.8000 235.2000 L
  76.8000 235.2000 L
  76.6800 235.2000 L
  76.5600 235.0800 L
  76.4400 234.9600 L
  70.9200 229.0800 L
  70.9200 229.0800 L
B
U
u
  61.4400 219.0000 m
  61.4400 219.0000 L
  61.3200 218.8800 L
  61.3200 218.7600 L
  61.3200 218.6400 L
  61.3200 218.5200 L
  61.3200 218.4000 L
  61.3200 218.2800 L
  61.4400 218.2800 L
  61.4400 218.1600 L
  61.5600 218.0400 L
  61.6800 218.0400 L
  61.8000 218.0400 L
  61.8000 218.0400 L
  62.0400 218.0400 L
  62.0400 218.0400 L
  62.1600 218.0400 L
  62.2800 218.1600 L
  67.8000 224.0400 L
  67.9200 224.1600 L
  67.9200 224.2800 L
  67.9200 224.4000 L
  68.0400 224.5200 L
  67.9200 224.6400 L
  67.9200 224.7600 L
  67.9200 224.8800 L
  67.8000 224.8800 L
  67.6800 225.0000 L
  67.5600 225.0000 L
  67.5600 225.0000 L
  67.3200 225.0000 L
  67.3200 225.0000 L
  67.0800 225.0000 L
  67.0800 225.0000 L
  66.9600 224.8800 L
  61.4400 219.0000 L
  61.4400 219.0000 L
B
U
*U
u
1 XR

  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  88.5600 252.3600 m
  93.8400 247.4400 L
  96.1200 255.2400 L
  88.5600 252.3600 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  60.4800 279.3600 m
  60.4800 284.1600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  64.0800 280.0800 m
  56.8800 280.0800 L
  60.4800 276.4800 L
  64.0800 280.0800 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 28.4400 419.2800 0 Tp
TP
/_Helvetica 13.2500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Microstep\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 XR

  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
1 j
*u
  124.5600 375.6000 m
  124.5600 375.6000 L
  124.4400 375.7200 L
  124.4400 375.7200 L
  124.3200 375.7200 L
  124.2000 375.8400 L
  124.0800 375.8400 L
  123.9600 375.7200 L
  123.8400 375.7200 L
  123.7200 375.7200 L
  123.7200 375.6000 L
  123.6000 375.4800 L
  123.6000 375.3600 L
  123.6000 375.2400 L
  123.6000 375.1200 L
  123.6000 375.0000 L
  123.6000 375.0000 L
  123.7200 374.8800 L
  126.1200 372.0000 L
  126.2400 371.8800 L
  126.3600 371.8800 L
  126.4800 371.7600 L
  126.6000 371.7600 L
  126.7200 371.7600 L
  126.8400 371.7600 L
  126.8400 371.8800 L
  127.0800 371.8800 L
  127.0800 372.0000 L
  127.0800 372.1200 L
  127.2000 372.2400 L
  127.2000 372.2400 L
  127.2000 372.4800 L
  127.2000 372.4800 L
  127.0800 372.6000 L
  127.0800 372.7200 L
  124.5600 375.6000 L
  124.5600 375.6000 L
B
u
  115.5600 386.1600 m
  115.5600 386.1600 L
  115.5600 386.2800 L
  115.3200 386.2800 L
  115.3200 386.2800 L
  115.2000 386.4000 L
  115.0800 386.4000 L
  114.9600 386.2800 L
  114.8400 386.2800 L
  114.7200 386.2800 L
  114.6000 386.1600 L
  114.6000 386.0400 L
  114.6000 385.9200 L
  114.6000 385.8000 L
  114.6000 385.6800 L
  114.6000 385.5600 L
  114.6000 385.5600 L
  114.7200 385.4400 L
  119.8800 379.2000 L
  120.1200 379.2000 L
  120.1200 379.0800 L
  120.2400 379.0800 L
  120.3600 379.0800 L
  120.4800 379.0800 L
  120.6000 379.0800 L
  120.6000 379.2000 L
  120.8400 379.2000 L
  120.8400 379.3200 L
  120.9600 379.3200 L
  120.9600 379.4400 L
  120.9600 379.5600 L
  120.9600 379.6800 L
  120.9600 379.8000 L
  120.8400 379.9200 L
  120.8400 380.0400 L
  115.5600 386.1600 L
  115.5600 386.1600 L
B
U
u
  106.5600 396.7200 m
  106.5600 396.7200 L
  106.4400 396.8400 L
  106.3200 396.8400 L
  106.2000 396.8400 L
  106.2000 396.9600 L
  105.9600 396.9600 L
  105.9600 396.8400 L
  105.8400 396.8400 L
  105.7200 396.8400 L
  105.6000 396.7200 L
  105.6000 396.6000 L
  105.4800 396.4800 L
  105.4800 396.3600 L
  105.4800 396.2400 L
  105.4800 396.1200 L
  105.6000 396.1200 L
  105.6000 396.0000 L
  110.8800 389.7600 L
  111.0000 389.7600 L
  111.1200 389.6400 L
  111.2400 389.6400 L
  111.3600 389.6400 L
  111.4800 389.6400 L
  111.4800 389.6400 L
  111.7200 389.7600 L
  111.7200 389.7600 L
  111.8400 389.8800 L
  111.8400 389.8800 L
  111.8400 390.0000 L
  111.9600 390.1200 L
  111.9600 390.2400 L
  111.8400 390.3600 L
  111.8400 390.4800 L
  111.8400 390.6000 L
  106.5600 396.7200 L
  106.5600 396.7200 L
B
U
u
  97.4400 407.2800 m
  97.4400 407.2800 L
  97.3200 407.4000 L
  97.3200 407.4000 L
  97.2000 407.4000 L
  97.0800 407.5200 L
  96.9600 407.5200 L
  96.8400 407.4000 L
  96.7200 407.4000 L
  96.6000 407.4000 L
  96.6000 407.2800 L
  96.4800 407.1600 L
  96.4800 407.0400 L
  96.4800 406.9200 L
  96.4800 406.8000 L
  96.4800 406.6800 L
  96.4800 406.6800 L
  96.6000 406.5600 L
  101.8800 400.3200 L
  102.0000 400.3200 L
  102.0000 400.2000 L
  102.1200 400.2000 L
  102.2400 400.2000 L
  102.3600 400.2000 L
  102.4800 400.2000 L
  102.6000 400.3200 L
  102.7200 400.3200 L
  102.7200 400.4400 L
  102.8400 400.4400 L
  102.8400 400.5600 L
  102.8400 400.6800 L
  102.8400 400.8000 L
  102.8400 400.9200 L
  102.8400 401.0400 L
  102.7200 401.1600 L
  97.4400 407.2800 L
  97.4400 407.2800 L
B
U
u
  88.4400 417.8400 m
  88.4400 417.8400 L
  88.4400 417.9600 L
  88.2000 417.9600 L
  88.2000 417.9600 L
  88.0800 418.0800 L
  87.9600 418.0800 L
  87.8400 417.9600 L
  87.7200 417.9600 L
  87.6000 417.9600 L
  87.4800 417.8400 L
  87.4800 417.7200 L
  87.4800 417.6000 L
  87.4800 417.4800 L
  87.4800 417.3600 L
  87.4800 417.2400 L
  87.4800 417.2400 L
  87.6000 417.1200 L
  92.7600 410.8800 L
  92.8800 410.8800 L
  93.0000 410.7600 L
  93.1200 410.7600 L
  93.2400 410.7600 L
  93.3600 410.7600 L
  93.4800 410.7600 L
  93.4800 410.8800 L
  93.7200 410.8800 L
  93.7200 411.0000 L
  93.8400 411.0000 L
  93.8400 411.1200 L
  93.8400 411.2400 L
  93.8400 411.3600 L
  93.8400 411.4800 L
  93.7200 411.6000 L
  93.7200 411.7200 L
  88.4400 417.8400 L
  88.4400 417.8400 L
B
U
*U
u
1 XR

  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  128.7600 375.3600 m
  123.3600 370.6800 L
  130.6800 367.5600 L
  128.7600 375.3600 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  130.6800 428.6400 m
  285.2400 428.6400 L
  285.2400 414.0000 L
  130.6800 414.0000 L
  130.6800 428.6400 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  130.6800 414.0000 m
  130.6800 428.6400 L
  285.2400 428.6400 L
  285.2400 414.0000 L
  130.6800 414.0000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 153.6000 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(delta\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 178.8000 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 188.4000 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.4800 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.9600 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 210.7200 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 217.2000 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 223.6800 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3779\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.4800 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(b\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 255.9600 417.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  207.9600 394.2000 m
  207.9600 414.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 394.9200 m
  204.3600 394.9200 L
  207.9600 391.3200 L
  211.5600 394.9200 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  207.9600 431.6400 m
  207.9600 435.4800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  211.5600 432.3600 m
  204.3600 432.3600 L
  207.9600 428.6400 L
  211.5600 432.3600 L
F
U
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
u
  3.6000 3.4800 m
  363.4800 3.4800 L
  363.4800 461.7600 L
  3.6000 461.7600 L
  3.6000 3.4800 L
n
  183.5400 232.6200 m
F
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 2036 2247 a @beginspecial 0 @llx 0 @lly
335 @urx 467 @ury 1620 @rwi @setspecial
%%BeginDocument: figures/ccdfg2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\Documents and Settings\HKC\Desktop\fig\eps\ccdfg2.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 335 467
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 335 467
%AI3_TileBox: 0 0 335 467
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
  Adobe_typography_AI5 begin
  Adobe_typography_AI5
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
 end
 end
  Adobe_typography_AI5 begin
} def
/terminate
{
  currentdict Adobe_typography_AI5 eq
  {
   end
  } if
} def
/modifyEncoding
{
  /_tempEncode exch ddef
  /_pntr 0 ddef
  {
    counttomark -1 roll
    dup type dup /marktype eq
    {
      pop pop exit
    }
    {
      /nametype eq
      {
        _tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
        put
      }
      {
        /_pntr exch ddef
      } ifelse
    } ifelse
  } loop
  _tempEncode
} def
/havefont
{
  systemdict /languagelevel known
    {
    /Font resourcestatus dup
      { exch pop exch pop }
    if
    }
    {
    systemdict /FontDirectory get 1 index known
      { pop true }
      {
      systemdict /fileposition known
        {
        dup length 6 add exch
        Ss 6 250 getinterval
        cvs pop
        Ss exch 0 exch getinterval
        status
          { pop pop pop pop true }
          { false }
        ifelse
        }
        {
        pop false
        }
      ifelse
      }
    ifelse
    }
  ifelse
} def
/TE
{
  StandardEncoding 256 array copy modifyEncoding
  /_nativeEncoding exch def
} def
/subststring {
  exch 2 index exch search
  {
    exch pop
    exch dup () eq
    {
      pop exch concatstring
    }
    {
      3 -1 roll
      exch concatstring
      concatstring
    } ifelse
    exch pop true
  }
  {
    pop pop false
  } ifelse
} def
/concatstring {
  1 index length 1 index length
  1 index add
  string
  dup 0 5 index putinterval
  dup 2 index 4 index putinterval
  4 1 roll pop pop pop
} def
%
/TZ
{
  dup type /arraytype eq
  {
    /_wv exch def
  }
  {
    /_wv 0 def
  } ifelse
  /_useNativeEncoding exch def
  2 index havefont
  {
    3 index
    255 string
    cvs

    dup
    (_Symbol_)
    eq
    {
      pop
      2 index
      findfont

    }
    {
      dup length 1 sub
      1 exch
      getinterval

      cvn
      findfont
    } ifelse
  }
  {
    dup 1 eq
    {
      2 index 64 string cvs
      dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
      {
        exch pop dup havefont
        {
          findfont false
        }
        {
          pop true
        } ifelse
      }
      {
        pop dup
        (-90ms-RKSJ-) (-Ext-RKSJ-) subststring
        {
          exch pop dup havefont
          {
            findfont false
          }
          {
            pop true
          } ifelse
        }
        {
          pop pop true
        } ifelse
      } ifelse
      {
        /Ryumin-Light-83pv-RKSJ-H havefont
          {/Ryumin-Light-83pv-RKSJ-H}
          {/Courier}
          ifelse
          findfont
          [1 0 0.5 1 0 0] makefont
      } if
    }
    {
      /Courier findfont
    } ifelse
  } ifelse
  _wv type /arraytype eq
  {
    _wv makeblendedfont
  } if
  dup length 10 add dict
 begin
  mark exch
  {
    1 index /FID ne
    {
      def
    } if
    cleartomark mark
  } forall
  pop
  /FontScript exch def
  /FontDirection exch def
  /FontRequest exch def
  /FontName exch def
  counttomark 0 eq
  {
    1 _useNativeEncoding eq
    {
      /Encoding _nativeEncoding def
    } if
    cleartomark
  }
  {
    /Encoding load 256 array copy
    modifyEncoding /Encoding exch def
  } ifelse
  FontName currentdict
 end
  definefont pop
} def
/tr
{
  _ax _ay 3 2 roll
} def
/trj
{
  _cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
  /Tx
  {
    dup
    currentpoint 3 2 roll
    tr _psf
    newpath moveto
    tr _ctm _pss
  } ddef
  /Tj
  {
    dup
    currentpoint 3 2 roll
    trj _pjsf
    newpath moveto
    trj _ctm _pjss
  } ddef
} def
/a1
{
W B
} def
/e0
{
  /Tx
  {
    tr _psf
  } ddef
  /Tj
  {
    trj _pjsf
  } ddef
} def
/e1
{
W F
} def
/i0
{
  /Tx
  {
    tr sp
  } ddef
  /Tj
  {
    trj jsp
  } ddef
} def
/i1
{
  W N
} def
/o0
{
  /Tx
  {
    tr sw rmoveto
  } ddef
  /Tj
  {
    trj swj rmoveto
  } ddef
} def
/r0
{
  /Tx
  {
    tr _ctm _pss
  } ddef
  /Tj
  {
    trj _ctm _pjss
  } ddef
} def
/r1
{
W S
} def
/To
{
  pop _ctm currentmatrix pop
} def
/TO
{
  iTe _ctm setmatrix newpath
} def
/Tp
{
  pop _tm astore pop _ctm setmatrix
  _tDict begin
  /W
  {
  } def
  /h
  {
  } def
} def
/TP
{
 end
  iTm 0 0 moveto
} def
/Tr
{
  _render 3 le
  {
    currentpoint newpath moveto
  } if
  dup 8 eq
  {
    pop 0
  }
  {
    dup 9 eq
    {
      pop 1
    } if
  } ifelse
  dup /_render exch ddef
  _renderStart exch get load exec
} def
/iTm
{
  _ctm setmatrix _tm concat
  _shift aload pop _lineorientation 1 eq { exch } if translate
  _scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
  _tm astore pop iTm 0 0 moveto
} def
/Td
{
  _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
  _render -1 eq
  {
  }
  {
    _renderEnd _render get dup null ne
    {
      load exec
    }
    {
      pop
    } ifelse
  } ifelse
  /_render -1 ddef
} def
/Ta
{
  pop
} def
/Tf
{
  1 index type /nametype eq
  {
    dup 0.75 mul 1 index 0.25 mul neg
  } if
  /_fontDescent exch ddef
  /_fontAscent exch ddef
  /_fontSize exch ddef
  /_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
  /_fontHeight _fontSize ddef
  findfont _fontSize scalefont setfont
} def
/Tl
{
  pop neg 0 exch
  _leading astore pop
} def
/Tt
{
  pop
} def
/TW
{
  3 npop
} def
/Tw
{
  /_cx exch ddef
} def
/TC
{
  3 npop
} def
/Tc
{
  /_ax exch ddef
} def
/Ts
{
  0 exch
  _shift astore pop
  currentpoint
  iTm
  moveto
} def
/Ti
{
  3 npop
} def
/Tz
{
  count 1 eq { 100 } if
  100 div exch 100 div exch
  _scale astore pop
  iTm
} def
/TA
{
  pop
} def
/Tq
{
  pop
} def
/Tg
{
  pop
} def
/TG
{
  pop
} def
/Tv
{
  /_lineorientation exch ddef
} def
/TV
{
  /_charorientation exch ddef
} def
/Ty
{
  dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
  pop
} def
/T~
{
  Tx
} def
/Th
{
  pop pop pop pop pop
} def
/TX
{
  pop
} def
/Tk
{
  _fontSize mul 1000 div
  _lineorientation 0 eq { neg 0 } { 0 exch } ifelse
  rmoveto
  pop
} def
/TK
{
  2 npop
} def
/T*
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  Td
} def
/T*-
{
  _leading aload pop
  _lineorientation 0 ne { exch } if
  exch neg exch neg
  Td
} def
/T-
{
  _ax neg 0 rmoveto
  _lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
  _ctm currentmatrix pop
  _tm astore pop
  iTm 0 0 moveto
} def
/TS
{
  currentfont 3 1 roll
  /_Symbol_ findfont _fontSize scalefont setfont

  0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  setfont
} def
/Xb
{
  pop pop
} def
/Tb /Xb load def
/Xe
{
  pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
  currentfont 5 1 roll
  dup havefont
    {
    findfont _fontSize scalefont setfont
    }
    {
    pop
    exch
    } ifelse
  2 index 0 eq
  {
    Tx
  }
  {
    Tj
  } ifelse
  pop pop
  setfont
} def
/T^ /X^ load def
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
  Adobe_screens_AI5 begin
  /screenid
    deviceDPI 600 gt composite? not or
    {
    -1
    }
    {
      deviceDPI currentScreenFreq
      dup dup 60 ge exch 150 le and deviceDPI 300 le and
    {
      pop 60
    } if
    div 1.41421 div 0.5 add cvi
    } ifelse
  def

  2 screenid eq
  {
    /customsize 16 def
    /customdata /customdata2 def
    setcustomscreen
  } if

  3 screenid eq
  {
    /customsize 24 def
    /customdata /customdata3 def
    setcustomscreen
  } if

  4 screenid eq
  {
    /customsize 16 def
    /customdata /customdata4 def
    setcustomscreen
  } if

  5 screenid eq
  {
    /customsize 20 def
    /customdata /customdata5 def
    setcustomscreen
  } if

  6 screenid eq
  {
    /customsize 24 def
    /customdata /customdata6 def
    setcustomscreen
  } if

  7 screenid eq
  {
    /customsize 28 def
    /customdata /customdata7 def
    setcustomscreen
  } if

  8 screenid eq
  {
    /customsize 16 def
    /customdata /customdata8 def
    setcustomscreen
  } if
} def
/terminate
{
  currentdict Adobe_screens_AI5 eq
  {
   end
  } if
} def
/setcustomscreen
{
  deviceDPI customsize div 0
  {
    1 add 2 div customsize mul cvi exch
    1 add 2 div customsize mul cvi exch
    customsize mul add
    customdata load exch get 256 div
  } setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
  AGM_Gradient_Sep begin
  AGM_Gradient_Sep_private begin
  _compositeJob{
    initializeSinglePassSeps
  }{
    initializeMultiPassSeps
  }ifelse
  initializeSeps
  AGM_Gradient_private begin
    /_fillSD newSpotDict def
    /_rampSD newSpotDict def
    /_nCustomColorSD nd
 end
  AGM_Gradient_Sep_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient_Sep
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/terminate{
  currentdict AGM_Gradient_Sep eq{
   end
  }if
}def

AGM_Gradient_Sep_private begin
/initializeSeps{
  _noImage not _level2PS not and{
    /_whiteBytes 1 makeByte8 pt
    /knockOut{
      8 setImageParms _whiteBytes /_image load 5 execImage
    }def
    /linealFill{
      mySave
      8 setImageParms
      _color{
        _nCustomColorSD begin
          cyan magenta yellow black
          _spotColor{
            spot1 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
            spot2 begin
              /tintImage tintValue 1 exch sub makeByte8 def
           end
          }if
       end
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 _nCustomColorSD ncolorimage
      }{
        _nCustomColorSD/black get 1 exch sub makeByte8
        _nCustomColorSD bwImage
      }ifelse
      myRestore
    }def
  }{
     /knockOut{
      gsave
      false setoverprint
      1 setgray
      0 0 1 1 rectfill
      grestore
    }def
  }ifelse
  /newSpotDict{
    11 dict dup begin
      /nSpots 2 def
      /spot1 7 dict def
      /spot2 7 dict def
   end
  }def
  /initSpotData
  {
   begin
      /name nd
      /tintImage nd
      /tintValue nd
      /spot_C nd
      /spot_M nd
      /spot_Y nd
      /spot_K nd
   end
  }def
  /initSpotDict{
   begin
      /cyanInk false def
      /magentaInk false def
      /yellowInk false def
      /blackInk false def
      /cyan nd
      /magenta nd
      /yellow nd
      /black nd
      spot1 initSpotData
      spot2 initSpotData
   end
  }def
  /copySpotDict{
    /_dst xp
   begin
      cyanInk magentaInk yellowInk blackInk
      cyan magenta yellow black
      spot1 spot2
   end
    _dst begin
      /spot1 spot1 maxlength dict def
      /spot2 spot2 maxlength dict def
      spot2 copy pop
      spot1 copy pop
      /black xd
      /yellow xd
      /magenta xd
      /cyan xd
      /blackInk xd
      /yellowInk xd
      /magentaInk xd
      /cyanInk xd
   end
  }def
  /setCustomColor
  {
    1 index /Black eq{
      6 1 roll 5 npop
      1 exch sub
      setgray
    }{
      6 1 roll _ccAry1 astore exch
      dup null eq{
        pop 0
      }if
      setcustomcolor
    }ifelse
  }def
  /setCStop{
    /_colorStyle exch pt

    _colorStyle 0 eq{
      0 0 0
      4 -1 roll
      1 exch sub
      _spotColor{
        /_colorStyle 3 pt
        /Black
        1 index
        1 exch sub
      }if
    }if
    _colorStyle 2 eq{
      3 npop
    }if
    _rampSD _fillSD copySpotDict

    _colorStyle 4 eq{
      pop
      9 2 roll 3 npop 6 -2 roll
    } if

    _colorStyle 3 eq _colorStyle 4 eq or{

      _fillSD begin
        exch
        dup spot1/name get eq{
          spot1 spot2
        }{
          spot2 spot1
        }ifelse
       begin
         begin
            /name xd
            1 exch sub /tintValue xd
            4{
              tintValue mul 4 1 roll
            }repeat
            _spotColor not{
              /tintValue null def
            }if
         end
          /tintValue 0 def
       end
     end
    }if
    _fillSD nsetcustomcolor
  }def
  /renderCMYK{
    spot1/name get null eq
    spot2/name get null eq and
    dup not{
      pop
      spot1 spotConverted
    }if
    dup not{
      pop
      spot2 spotConverted
    }if
  }def
  /fill_ /fill load def
  /fillOvp{
    currentoverprint{
      _inRipSep{
        currentcolorspace 0 get
        dup /DeviceGray eq
        1 index /DeviceCMYK eq or{
          pop
          currentcmykcolor add add add 0 eq{
            newpath
          }if
        }{
          /Separation eq{
            currentcolor 0 eq{
              newpath
            }if
          }if
        }ifelse
      }{
        currentgray 1 eq{
          newpath
        }if
      }ifelse
    }if
    fill_
  }def
  /fill{
    _nCustomColorSD begin
      renderCMYK
      {
        fillOvp
      }{
        spot1 begin
          gsave
          name null ne{
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
          }{
            1 setgray
          }ifelse
          fillOvp
          grestore
       end
        spot2 begin
          name null ne{
            gsave
            true setoverprint
            spot_C spot_M spot_Y spot_K name tintValue setCustomColor
            fillOvp
            grestore
          }if
       end
        newpath
      }ifelse
   end
  }def
  /expandSpot{
    _spotColor{
      /_len xp
      _rampSD begin
        spot1 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
        spot2 begin
          tintImage null ne{
            tintImage _len expandOne /tintImage xd
          }if
       end
     end
    }{
      pop
    }ifelse
  }def
  /rampImage{
    _rampSD begin
      _color{
        /cyanInk _cyanData 0 ne def
        /magentaInk _magentaData 0 ne def
        /yellowInk _yellowData 0 ne def
        /blackInk _blackData 0 ne def
        _nSamples setImageParms
        _nSamples expandSpot
        _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
        true 4 _rampSD ncolorimage
      }{
        /cyanInk false def
        /magentaInk false def
        /yellowInk false def
        /blackInk true def
        _nSamples setImageParms
        _blackData _rampSD bwImage
      }ifelse
   end
  }def
  /nsetcustomcolor where{
    pop
  }{
    /nsetcustomcolor
    {
      /_nCustomColorSD xp
      _nCustomColorSD begin
        4 copy
        /black xd
        /yellow xd
        /magenta xd
        /cyan xd
        4 copy
        0 ne /blackInk xd
        0 ne /yellowInk xd
        0 ne /magentaInk xd
        0 ne /cyanInk xd
     end
      setcmykcolor
    }def
  }ifelse
  /nsetcustomcolorend where{
    pop
  }{
    /nsetcustomcolorend
    {
      /_nCustomColorSD null pt
    }def
  }ifelse
}def
/initializeSinglePassSeps{
  /_decodeNorm  [0 1] pt
  /_decodeInvert  [1 0] pt
  /spotConverted
  {
   begin
      name null eq{
        false
      }{
        tintValue null eq tintImage null eq and{
          true
        }{
          false
          currentpagedevice/SeparationOrder get{name eq or}forall
          not
        }ifelse
      }ifelse
   end
  }def
  /dictImage
  {
    20 dict dup begin
      /Dict xd
      /Decode xd
      /DataSource xd
      /ImageMatrix xd
      /BitsPerComponent xd
      /Height xd
      /Width xd
      /ImageType 1 def
      Dict
   end
    /_image load 1 execImage
  }def
  /bwImage{
   begin
      gsave
      currentoverprint{
        blackInk{
          [/Separation /Black /DeviceGray{}] setcolorspace
          _decodeInvert dictImage
        }{
          5 npop
        }ifelse
      }{
        /DeviceGray setcolorspace
        _decodeNorm dictImage
      }ifelse
      grestore
   end
  }def
  /ncolorimage where{
    pop
  }{
    /ncolorimage{
     begin
        renderCMYK
        {
          cyanInk
          magentaInk and
          yellowInk and
          blackInk and
          not
          currentoverprint
          and
          {
            pop pop
            gsave
            cyanInk{
              8 copy
              [/Separation /Cyan /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }if
            magentaInk{
              8 copy
              [/Separation /Magenta /DeviceGray{}] setcolorspace
              4 -1 roll
              3 npop
              _decodeNorm dictImage
            }if
            yellowInk{
              8 copy
              [/Separation /Yellow /DeviceGray{}] setcolorspace
              4 -2 roll
              3 npop
              _decodeNorm dictImage
            }if
            blackInk{
              4 -3 roll
              [/Separation /Black /DeviceGray{}] setcolorspace
              3 npop
              _decodeNorm dictImage
            }{
              8 npop
            }ifelse
            grestore
          }{
            /_colorimage load 10 execImage
          }ifelse
        }{
          6 npop
          gsave
          spot1 begin
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              4 copy
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              1 setgray fill
            }ifelse
         end
          spot2 begin
            true setoverprint
            name null ne tintImage null ne and{
              [/Separation name /DeviceGray{}] setcolorspace
              tintImage
              name /Black eq{
                _decodeNorm
              }{
                _decodeInvert
              }ifelse
              dictImage
            }{
              4 npop
              1 setgray fill
            }ifelse
         end
          grestore
        }ifelse
     end
    }def
  }ifelse
}def
/initializeMultiPassSeps{
  /_isCMYKSep
    _cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
  pt
  /invertXfer{
    [
    {
      1 exch sub
    }/exec load systemdict /currenttransfer get exec /exec load
    ] cvx systemdict /settransfer get exec
  }def
  /ccThrough{
    gsave
    1 setCustomColor
    currentcmykcolor
    grestore
    add add add 0 ne
  }def
  /spotConverted
  {
   begin
      _isCMYKSep not{
        false
      }{
        name null eq{
          false
        }{
          tintValue null eq tintImage null eq and{
            true
          }{
            spot_C spot_M spot_Y spot_K name ccThrough
          }ifelse
        }ifelse
      }ifelse
   end
  }def
  /spotChannel
  {
    _isCMYKSep{
      pop false
    }{
     begin
        name null eq{
          false
        }{
          spot_C spot_M spot_Y spot_K name ccThrough
        }ifelse
     end
    }ifelse
  }def
  /getChannelData
  {
    _isCMYKSep dup{
      pop renderCMYK
    }if
    {
      _blackPlate{
        4 1 roll 3 npop blackInk
      }{
        _yellowPlate{
          4 2 roll 3 npop yellowInk
        }{
          _magentaPlate{
            4 3 roll 3 npop magentaInk
          }{
            3 npop cyanInk
          }ifelse
        }ifelse
      }ifelse
      {
        true /nonZeroData
      }{
        true /zeroData
      }ifelse
    }{
      4 npop
      spot1/name get null ne
      spot1 spotChannel and{
        spot1/tintImage get dup null ne{
          false /nonZeroData
        }{
          pop false /noData
        }ifelse
      }{
        spot2/name get null ne
        spot2 spotChannel and{
          spot2/tintImage get dup null ne{
            false /nonZeroData
          }{
            pop false /noData
          }ifelse
        }{
          false /noData
        }ifelse
      }ifelse
    }ifelse
  }def
  /renderChannelData
  {
    /_tmp xp
    _tmp /nonZeroData ne currentoverprint and{
      pop
      _tmp /zeroData eq{pop}if
      4 npop
    }{
      _tmp /nonZeroData eq{
        {
          invertXfer
        }if
          systemdict/image
        get 5 execImage
      }{
        pop
        _tmp /zeroData eq{pop}if
        4 npop
        knockOut
      }ifelse
    }ifelse
  }def
  /bwImage{
   begin
      gsave
      dup dup dup
      getChannelData
      exch pop false exch
      renderChannelData
      grestore
   end
  }def
  /ncolorimage{
   begin
      pop pop
      gsave
      spot2/name get null ne spot2 spotChannel and{
        true setoverprint
      }if
      getChannelData
      renderChannelData
      grestore
   end
  }def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
  AGM_Gradient begin
  AGM_Gradient_private begin
  initializeVars

  /bd systemdict/mark get def
  /ed
    _level2PS
    {
      (>>)
    }{
      (counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
    } ifelse
  cvx def

  _level2PS{
    initializeLev2
  }{
    initializeLev1
  }ifelse

  queryDevice

  initializeShading
  initializeOps
  _producingSeps{
    AGM_Gradient_Sep/initialize get exec
  }{
    initializeComposite
  }ifelse
  _illustrator{
    /f{}def
    /F{}def
    /s{}def
    /S{}def
    /b{}def
    /B{}def
  }if
  /image where{
    /image get /_image xd
  }if
  /colorimage where{
    /colorimage get /_colorimage xd
  }if
  /rectfill where dup{
    exch pop not _producingSeps or
  }{
    not
  }ifelse
  {
    /rectfill{
      gsave
      newpath
      4 2 roll moveto
      1 index 0 rlineto
      0 1 index rlineto
      1 index neg 0 rlineto
      pop pop
      closepath
      fill
      grestore
    }def
  }if
  /linealImage _noImage{
    /rectImage load
  }{
    _producingSeps{
      AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      /rampImage load
     end
    }{
      /rampImage load
    }ifelse
  }ifelse
  def
  AGM_Gradient_private
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
  AGM_Gradient
  {
    dup xcheck 1 index type /arraytype eq and
    {
      bind
    }if
    pop pop
  }forall
 end

  currentdict readonly pop
 end
}def
/initializeAI
{
  pop pop
  AGM_Gradient/AGM_Gradient_private get /_illustrator true put
  AGM_Gradient/initialize get exec
    AGM_Gradient begin
}def
/unload{
  systemdict/languagelevel known{
    systemdict/languagelevel get 2 ge{
      userdict/AGM_Gradient_Sep 2 copy known{
        undef
      }{
        pop pop
      }ifelse
      userdict/AGM_Gradient 2 copy known{
        undef
      }{
        pop pop
      }ifelse
    }if
  }if
}def
/terminate{
  currentdict AGM_Gradient eq{
   end
  }if
}def

AGM_Gradient_private begin
/initializeVars{
  /_d255 256 array def
  0 1 255{
    _d255 exch dup 255 div put
  }bind for
  /_d255- 256 array def
  0 1 255{
    _d255- exch 1 _d255 2 index get sub put
  }bind for
  /_sSave nd
  /_dUserSpace matrix defaultmatrix def
  /_bUMatrix matrix def
  /_imageMatrix matrix def
  /_saveMatrix matrix def
  /_xm matrix def
  /_ccAry1 5 array def
  /_level2PS
    systemdict/languagelevel known dup{
      pop systemdict/languagelevel get 2 ge
    }if
  def
  /_level3PS
    _level2PS systemdict/shfill known and
  def
  currentdict /_illustrator known not{
    /_illustrator false def
  }if

}def
/initializeOps
{
  AGM_Gradient begin
  currentdict/Bc known not{
    /Bc{

      _renderFlag 2 eq{
        6 npop
      }{
        pushBSpace
        _rampIndex 0 eq{
          pop pop
          setCStop
        }if
        linealFill
        popBSpace
      }ifelse

    }def
  }if

  currentdict/Bg known not{
    /Bg{
      10 npop
      /_gradName xp
      /_renderFlag xp

      _renderFlag 2 ne{

        _illustrator{
          _of setoverprint
        }if

        _illustrator _eo and _renderFlag 3 eq or{
          eoclip
        }{
          clip
        }ifelse

        _gradNames _gradName 2 copy known{
          get
          mark exch aload pop
          /_gradType xp
          1 sub dup /_rampIndex xp
          /_maxRampIndex xp
          mark exch aload pop
          0 0
        }if
        pop pop
        getRampData
      }{
        mark mark
      }ifelse
    }def
  }if

  currentdict/Bm known not{
    /Bm{
      _renderFlag 2 ne{
        _gradType 0 eq{
          linealRamp
        }{
          radialGrad
        }ifelse
      }{
        6 npop
      }ifelse
    }def
  }if

  currentdict/Bh known not{
    /Bh{
      2 npop
      /_yHi xp
      /_xHi xp
      /_radHilite _xHi 0 ne _yHi 0 ne or pt
    }def
  }if

  currentdict/Bn known not{
    /Bn{
      AGM_Gradient_private begin
        dict /_gradNames xp
     end
    }def
  }if

  currentdict/Bd known not{
    /Bd{
      AGM_Gradient begin
      AGM_Gradient_private begin
        /_nColorsBd xp
        /_gradType xp
        /_gradName xp
    }def
  }if

  currentdict/BD known not{
    /BD{
        currentdict/_gradNames known not{
          /_gradNames 20 dict def
        }if
        ] _nColorsBd _gradType
        ]  _gradName exch /_gradNames xput
     end
     end
    }def
  }if

  currentdict/Bb known not{
    /Bb{

      AGM_Gradient begin
      AGM_Gradient_private begin
      _producingSeps{
        AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
      }if
      mySave
    }def
  }if

  currentdict/BB known not{
    /BB{

      /_tmp xp
      cleartomark cleartomark

      _tmp dup
      _renderFlag

      myRestore

      _producingSeps{
       end
      }if

      _illustrator
     end
     end

      {
        2 ne exch 0 gt and{
          2 eq{
            s
          }{
            S
          }ifelse
        }{
          pop newpath
        }ifelse
      }{
        pop newpath
      }ifelse


    }def
  }if

  currentdict/Xm known not{
    /Xm{
      _xm astore pop
    }def
  }if

 end
}def
/queryDevice{
  /_inRipSep
    _level2PS{
      currentpagedevice/Separations 2 copy known{
        get
      }{
        pop pop false
      }ifelse
    }{
      false
    }ifelse
  def
  /_noImage /lv1Fix where{
    pop lv1Fix
  }{
    false
  }ifelse
  def
  /_useShells where{
    pop
  }{
    /_useShells true def
  }ifelse

  /_useSmoothShade where{
    pop
  }{
    /_useSmoothShade false def
  }ifelse
  /_cyanPlate 1 0 0 0 testCMYKColorThrough def
  /_magentaPlate 0 1 0 0 testCMYKColorThrough def
  /_yellowPlate 0 0 1 0 testCMYKColorThrough def
  /_blackPlate 0 0 0 1 testCMYKColorThrough def
  /_compositeJob
    _cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
  def
  /_compositeSpotDevice where{
    pop
  }{
    /_compositeSpotDevice _compositeJob not _inRipSep or{
      1
    }{
      0
    }ifelse
    def
  }ifelse
  /_producingSeps _compositeSpotDevice 0 ne def
  /_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
  /_dpiThreshold where{
    pop
  }{
    /_dpiThreshold 600 def
  }ifelse
  /_screenFreqThreshold where{
    pop
  }{
    /_screenFreqThreshold 150 def
  }ifelse
  /_contoneDevice where{
    pop
  }{
    /_contoneDevice false def
  }ifelse
  /_subSampleOK
    _deviceDPI _dpiThreshold le
    currentScreenFreq _screenFreqThreshold le and
    _contoneDevice not and
    _producingSeps not and
  def
}def
/initializeLev1{
  /makeByte8{
    /_tmp 0 pt
    255 mul cvi
    8 string 8{
      dup _tmp 3 index put
      /_tmp _tmp 1 add pt
    }repeat
    exch pop
  }def
  /currentScreenFreq{
    currentscreen pop pop
  }def
  /_byte 1 string def
  /colorimage where{
    pop
  }{
    /colorimage{
      pop pop
      /_blackTmp xp
      /_yellowTmp xp
      /_magentaTmp xp
      /_cyanTmp xp
      /_cnt 0 pt
      [
      _byte dup 0
      _cyanTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
      _magentaTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
      _yellowTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
      _blackTmp
        /_cnt cvx /get cvx _d255 /exch cvx /get cvx
      /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /dup cvx 1 /gt cvx{
        pop 1
      }/if cvx
      255 /mul cvx /cvi cvx
      256 /mod cvx
      /dup cvx 0 /lt cvx{
        pop 0
      }/if cvx
      /put cvx
      /_cnt dup cvx 1 /add cvx /pt cvx
      ] cvx
      bind
      /_image load 5 execImage
    }def
  }ifelse
}def
/initializeLev2{
  /level2ScreenFreq{
   begin
    60
    HalftoneType 1 eq{
      pop Frequency
    }if
    HalftoneType 2 eq{
      pop GrayFrequency
    }if
    HalftoneType 5 eq{
      pop Default level2ScreenFreq
    }if
     end
  }def
  /currentScreenFreq{
    currenthalftone level2ScreenFreq
  }def
}def
/initializeShading{
  _useSmoothShade _level3PS and{
    /_usingSmoothShade true pt
    initializeLev3_Ops
  }{
    /_usingSmoothShade false pt
  }ifelse
}def
/initializeLev3_Ops
{
  /initShFill{
    /_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
    /_rampFuncsArray _maxRampIndex array pt
    /_boundsArray _maxRampIndex 1 sub array pt
    /_encodeArray _maxRampIndex 2 mul array pt
    /_beginCoord _rampPoint pt
    /_colorSpace null pt
    /_firstFill _rampIndex _maxRampIndex eq pt
    /_lastFill false pt
  }def
  /getRampColorSpace{
    _nSamples 1 gt{
      /_ndx 0 pt
      [blendColor] cvx exec
    }if
    /_C0 [currentcolor] pt
    /_C0_Space currentcolorspace pt

    _nSamples 1 gt{
      /_ndx _nSamples 1 sub pt
      [blendColor] cvx exec
    }if
    /_C1 [currentcolor] pt
    /_C1_Space currentcolorspace pt

    _C0_Space _C1_Space eq{
      /_rampColorSpace _C0_Space pt
    }{
      (colorspace conflict!) ==
      showpage
      stop
    }ifelse

    _spotColor{
      nsetcustomcolorend
    }if
  }def
  /linealShFill{
    popBSpace
    _xm aload pop pushBSpace

    /_size _index 1 add pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
      /_boundsArray _boundsArray 0 _size 1 sub getinterval pt
      /_encodeArray _encodeArray 0 _size 2 mul getinterval pt
    }if

    bd
      /ShadingType 2
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_firstFill _lastFill]
      /Domain [0 1]
      /Coords [_beginCoord 0 _endCoord 0]
    ed
    shfill
  }def

  /radialShFill{
    /_size _maxRampIndex _index sub pt
    _size _maxRampIndex lt {
      /_rampFuncsArray _rampFuncsArray _index _size getinterval pt
      /_boundsArray _boundsArray _index _size 1 sub getinterval pt
      /_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
    }if

    /_rampLen _beginCoord _endCoord sub pt
    bd
      /ShadingType 3
      /ColorSpace _colorSpace
      /Function
        bd
          /FunctionType 3
          /Domain [0 1]
          /Functions _rampFuncsArray
          /Bounds _boundsArray
          /Encode _encodeArray
        ed
      /Extend [_lastFill _firstFill]
      /Domain [0 1]
      /Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord]
    ed
    shfill

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if
  }def

  /fillRamp{


    /_invert _midPoint 0.5 lt pt
    _rampIndex _maxRampIndex eq {
      initShFill
    }if

    getRampColorSpace

    _colorSpace null eq{
      /_colorSpace _rampColorSpace pt
    }{
      _colorSpace _rampColorSpace ne{
        /_index _index 1
        _gradType 0 eq{
          sub pt
          linealShFill
        }{
          add pt
          radialShFill
        }ifelse
        initShFill
        /_colorSpace _rampColorSpace pt
      } if
    }ifelse
    /_endCoord _endPoint pt
    _rampFuncsArray _index
    bd
      /FunctionType 2
      /Domain [0 1]
      /N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
      _gradType 0 eq{
        _invert{/C1}{/C0}ifelse _C0
        _invert{/C0}{/C1}ifelse _C1
      }{
        _invert{/C0}{/C1}ifelse _C1
        _invert{/C1}{/C0}ifelse _C0
      }ifelse
    ed
    put

    _rampIndex 1 ne{
      _boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
    } if

    0 1 _invert {exch}if
    _encodeArray _index 2 mul 1 add 3 -1 roll put
    _encodeArray _index 2 mul 3 -1 roll put
    _rampIndex 1 eq {
      /_lastFill true pt
      _gradType 0 eq{
        linealShFill
      }{
        radialShFill
      }ifelse
    }if
    /_index _index 1
    _gradType 0 eq{
      add pt
    }{
      sub pt
    }ifelse
  }def

  /radialRamp
    /fillRamp load def

  /rampImage
    /fillRamp load def

  AGM_Gradient begin
  /Bc{
    6 npop
  }def

 end


}def
/initializeComposite{
  /bwImage{
    pop /_image load 5 execImage
  }def
  currentdict/rampImage known not{
    /rampImage{
      _color{
        _nSamples setImageParms


        _rgbRamp{
          _redData _greenData _blueData _nSamples 3 expandColor
          true 3 null ncolorimage
        }{
          _cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
          true 4 null ncolorimage
        }ifelse
      }{
        _nSamples setImageParms _blackData null bwImage
      }ifelse
    }def
  }if
  /setCStop{
    /_colorStyle exch pt
    _colorStyle 0 eq{
      1 exch sub
      0 0 0
      4 -1 roll
    }if

    _colorStyle 2 eq{
      setrgbcolor 4 npop
    }if

    _colorStyle 3 eq{
      1 exch sub /_tmp xp
      pop
      4{
        _tmp mul 4 1 roll
      }repeat
    }if

    _colorStyle 4 eq{
      3 -1 roll pop pop
      1 exch sub /_tmp xp
      3{
        1 exch sub _tmp mul 1 exch sub 3 1 roll
      }repeat
      setrgbcolor
      4 npop
    }if
    _colorStyle 2 ne _colorStyle 4 ne and{
      null nsetcustomcolor
    }if
  }def
  /nsetcustomcolor
  {
    pop setcmykcolor
  }def
  /nsetcustomcolorend
  {
  }def
  /ncolorimage{
    pop
    /_colorimage load 10 execImage
  }def
  _noImage not _level2PS not and{
    /linealFill{
      8 setImageParms
      _color{
        currentcmykcolor
        4{
          makeByte8 4 1 roll
        }repeat
        true 4 null ncolorimage
      }{
        currentgray makeByte8 null bwImage
      }ifelse
    }def
  }if
}def
/npop{
  {pop}repeat
}def
/xd{
  exch def
}def
/nd{
  null def
}def
/pt{
  AGM_Gradient_private 3 1 roll put
}def
/xp{
  exch pt
}def
/xput{
  dup load dup length exch maxlength eq{
    dup dup load dup
    length 2 mul dict copy def
  }if
  load begin
    def
  end
}def
/mySave{
  save /_sSave xp
}def
/myRestore{
  _sSave type /savetype eq{
    _sSave restore
  }if
}def
/gMark{
  counttomark 2 add -1 roll
}def
/execImage{
  /_tmp xp
  {
    exec
  }stopped{
    $error /errorname get /undefinedresult ne{
      stop
    }{
      _tmp npop
    }ifelse
  }if
}def
/pushBSpace{
  newpath gsave
  _bUMatrix astore concat
}def
/popBSpace{
  grestore
}def
/setImageParms{
  1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
  0 0 1 1 rectfill
}def
/testCMYKColorThrough{
  gsave
  setcmykcolor currentcmykcolor
  grestore
  add add add 0 ne
}def
/expandOne  {
  /_tmp xp
  dup type /stringtype ne{
    _tmp string
    exch
    dup 0 ne{
      255 mul cvi
      0 1 _tmp 1 sub{
        3 copy
        exch put pop
      }for
    }if
    pop
  }if
}def
/expandColor{
  /_channels xp
  /_len xp
  _channels{
    _len expandOne _channels 1 roll
  }repeat
}def
/blendColor{

  _color{
    _rgbRamp _producingSeps not and{
      _redData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _greenData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blueData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      /setrgbcolor cvx
    }{
      _cyanData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _magentaData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _yellowData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if
      _blackData dup type /stringtype eq{
        /_ndx cvx /get cvx _d255 /exch cvx /get cvx
      }if

      _spotColor{
        _rampSD begin
          /_rampSD cvx /begin cvx

          spot1 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx

          spot2 begin
            tintImage dup type /stringtype eq{
              /_ndx cvx /get cvx _d255- /exch cvx /get cvx
            }{
              dup null ne{
                name type /nametype ne{
                  1 exch sub
                }if
              }if
            }ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /_rampSD cvx
        /nsetcustomcolor cvx
      }{
        /setcmykcolor cvx
      }ifelse
    }ifelse
  }{
    _blackData /_ndx cvx /get cvx
    _d255 /exch cvx /get cvx

    _usingSmoothShade{
      1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
    }{
       /setgray cvx
    }ifelse
  }ifelse
}def
/linealRamp{
  pushBSpace
  _ramp{
    linealImage
  }{
    linealFill
  }ifelse
  popBSpace
  /_rampIndex _rampIndex 1 sub pt
  _rampIndex 0 gt{
    getRampData
  }if
}def
/radialGrad{
  /_firstShell true pt
  _usingSmoothShade not{
    fill
  }if
  pushBSpace

  _radHilite{
    _xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
    _rampPoint 1 lt{
      1 _rampPoint sub dup _xHi mul exch _yHi mul translate
    }if
  }if
  _rampIndex{
      radialRamp
    /_rampIndex _rampIndex 1 sub pt
    _rampIndex 0 gt{
      getRampData
    }if
  }repeat

  popBSpace

}def
/getNSamples{
  0 exch
  {
    dup type /stringtype eq{
      length exch pop exit
    }if
    pop
  }forall
  dup 0 eq{
    pop 1
  }if
}def
/getRampData{
  /_rampType gMark pt
  /_color _rampType 0 gt pt
  /_ccRGB _rampType 5 eq _rampType 6 eq or pt
  /_rgbRamp _rampType 4 eq _ccRGB or pt
  /_ccProcess _rampType 2 eq _rampType 3 eq or pt
  _producingSeps{
    _rampSD initSpotDict
    /_spotColor _ccProcess _ccRGB or pt
  }{
    /_spotColor false pt
  }ifelse
  /_ramp true pt
  100 div /_rampPoint xp
  100 div /_midPoint xp

  dup /_colorStyle xp
  _colorStyle 0 eq{
    2
  }{
    _colorStyle 1 eq{
      5
    }{
      _colorStyle 2 eq{
        8
      }{
        _colorStyle 3 eq{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 3 index def
                /spot_K 4 index def
                /spot_Y 5 index def
                /spot_M 6 index def
                /spot_C 7 index def
             end
           end
          }if
          7
        }{
          _producingSeps{
            _rampSD begin
              spot1 begin
                /name 4 index def
                /spot_K 8 index def
                /spot_Y 9 index def
                /spot_M 10 index def
                /spot_C 11 index def
             end
           end
          }if
          11
        } ifelse
      }ifelse
    }ifelse
  }ifelse
  /_tmp xp
  _tmp index 100 div /_endPoint xp

  _gradType 1 eq{
    _tmp 1 add index 100 div /_midPoint xp
  }if

  _producingSeps{
    _tmp 2 add index /_nextColorStyle xp
    _nextColorStyle 3 eq{
      /_tmp _tmp 4 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 2 add index def
            /spot_Y _tmp 3 add index def
            /spot_M _tmp 4 add index def
            /spot_C _tmp 5 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
    _nextColorStyle 4 eq{
      /_tmp _tmp 5 add pt
      _tmp index dup
      _rampSD begin
        spot1 /name get ne{
          spot2 begin
            /name xd
            /spot_K _tmp 5 add index def
            /spot_Y _tmp 6 add index def
            /spot_M _tmp 7 add index def
            /spot_C _tmp 8 add index def
         end
        }{
          pop
        }ifelse
     end
    }if
  }if
  _rampType 3 eq _rampType 6 eq or{
    /_tint2Data gMark pt
  }if
  _ccProcess _ccRGB or{
    /_tint1Data gMark pt
  }if
  _rgbRamp{
    /_blueData gMark pt
    /_greenData gMark pt
    /_redData gMark pt
  }if

  _producingSeps{
    _rampSD begin
      _ccProcess _ccRGB or{
        _rampType 3 eq _rampType 6 eq or{
          spot2 begin
            /tintImage _gradType 0 eq{
              _tint2Data
            }{
              _tint1Data
            }ifelse
            def
            name null eq{
              /name /Black def
            }if
         end
        }if
        spot1 begin
          /tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
            _tint1Data
          }{
            _tint2Data
          }ifelse
          def
          _rampType 2 eq _rampType 5 eq or{
            name null eq{
              /name spot2 /name get def
              spot2 /name null put
            }if
          }{
            name null eq{
              /name /Black def
            }if
          }ifelse
       end
      }if
   end
  }if
  /_blackData gMark pt
  _rampType 0 gt{
    counttomark 4 add -3 roll
    /_yellowData xp
    /_magentaData xp
    /_cyanData xp
  }if
  _ramp{
    /_nSamples
      [
      _rampType 0 eq {_blackData}if
      _rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
      _rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
      _rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
      _rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
      _rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
      _rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
      ] getNSamples pt
    _usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
  } if

  setCStop
}def
/rectImage{
  gsave
  /_sInc 1 pt
  /_bInc 1 _nSamples div pt
  /_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
  /_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
  0
  _nSamples
  [
  /dup cvx
  /_ndx /exch cvx /pt cvx
  blendColor
  0 0 _bInc 1 /rectfill cvx
  _bInc 0 /translate cvx
  _sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  _spotColor{
    nsetcustomcolorend
  }if
  grestore
}def
/radialInit{
  /_nRadSamples _nSamples dup 0 eq{pop 1}if pt
  /_sInc -1 pt
  /_rampLen _rampPoint _endPoint sub pt
  /_bInc _rampLen _nSamples div neg pt
  /_optimize false pt
  _subSampleOK{
    /_uRampLen
      _rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
      2 copy lt{
        exch
      }if pop
    pt
    /_pChange
      _uRampLen 0 eq{
        0
      }{
        _nSamples _uRampLen div
      }ifelse
    pt
    _pChange .5 gt dup /_optimize xp{
      /_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
      /_bInc _rampLen _nRadSamples div neg pt
      /_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
    }if
  }if
  _radHilite{
    /_xBCInc _xHi _rampLen mul _nRadSamples div pt
    /_yBCInc _yHi _rampLen mul _nRadSamples div pt
  }if
}def
currentdict/radialRamp known not{
  /radialRamp{

    /_saveMatrix _saveMatrix currentmatrix def

    radialInit

    _rampPoint

    _nSamples 1 sub

    _nRadSamples
    [
      /dup cvx

      _optimize{
        /round cvx /cvi cvx
      }if

      /_ndx /exch cvx /pt cvx

      _useShells{
        /_firstShell cvx{
          /_firstShell false pt
        }{
          0 0 3 index 360 0 arcn fill
        }/ifelse cvx
      }if

      blendColor

      _useShells{
        0 0 3 /index cvx 0 360 /arc cvx
      }{
        0 0 3 /index cvx 0 360 /arc cvx /fill cvx
      }ifelse

      /exch cvx _bInc /add cvx /exch cvx

      _sInc /add cvx

      _radHilite{
        _xBCInc _yBCInc /translate cvx
      }if
    ] cvx bind
    repeat

    pop pop

    _saveMatrix setmatrix

    _radHilite{
      _xHi _rampLen mul _yHi _rampLen mul translate
    }if

    _useShells _rampIndex 1 eq and{
      fill
    }if
    _spotColor{
      nsetcustomcolorend
    }if


  }def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
  userdict /Adobe_ColorImage_AI6 24 dict put
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{
  Adobe_ColorImage_AI6 begin
  Adobe_ColorImage_AI6
  {
    dup type /arraytype eq
    {
      dup xcheck
      {
        bind
      } if
    } if
    pop pop
  } forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
  /Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
  /channelcount 0 def
  /sourcecount 0 def
  /sourcearray 4 array def
  /plateindex -1 def
  /XIMask 0 def
  /XIBinary 0 def
  /XIChannelCount 0 def
  /XIBitsPerPixel 0 def
  /XIImageHeight 0 def
  /XIImageWidth 0 def
  /XIImageMatrix null def
  /XIBuffer null def
  /XIDataProc null def
  /XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
  /colorimage where
  {
    /colorimage get /_colorimage exch def
  }
  {
    /_colorimage null def
  } ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
  0 3 index
  dup length 1 sub 0 3 3 -1 roll
  {
    3 getinterval { } forall
    5 index exec
    3 index
  } for

   5 { pop } repeat
} def
/WalkCMYKString
{
  0 3 index
  dup length 1 sub 0 4 3 -1 roll
  {
    4 getinterval { } forall

    6 index exec

    3 index

  } for

  5 { pop } repeat

} def
/StuffRGBIntoGrayString
{
  .11 mul exch

  .59 mul add exch

  .3 mul add

  cvi 3 copy put

  pop 1 add
} def
/RGBToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 3 idiv string
    dup 3 1 roll

    /StuffRGBIntoGrayString load exch
    WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
  exch .11 mul add

  exch .59 mul add

  exch .3 mul add

  dup 255 gt { pop 255 } if

  255 exch sub cvi 3 copy put

  pop 1 add
} def
/CMYKToGrayImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcearray 0 get exec
    dup length 4 idiv string
    dup 3 1 roll

    /StuffCMYKIntoGrayString load exch
    WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
  pop true eq
  {
    Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
  }
  {
    Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
    {
      Adobe_ColorImage_AI6_Vars begin
        sourcearray 0 3 -1 roll put

        channelcount 3 eq
        {
          /RGBToGrayImageProc
        }
        {
          /CMYKToGrayImageProc
        } ifelse
        load
     end
    } if
    image
  } ifelse
} def
/SeparateCMYKImageProc
{
  Adobe_ColorImage_AI6_Vars begin
    sourcecount 0 ne
    {
      sourcearray plateindex get exec
    }
    {
      sourcearray 0 get exec

      dup length 4 idiv string

      0 2 index

      plateindex 4 2 index length 1 sub
      {
        get 255 exch sub

        3 copy put pop 1 add

        2 index
      } for
      pop pop exch pop
    } ifelse
 end
} def

/FourEqual
{
  4 index ne
  {
    pop pop pop false
  }
  {
    4 index ne
    {
      pop pop false
    }
    {
      4 index ne
      {
        pop false
      }
      {
        4 index eq
      } ifelse
    } ifelse
  } ifelse
} def
/TestPlateIndex
{
  Adobe_ColorImage_AI6_Vars begin
    /plateindex -1 def
    /setcmykcolor where
    {
      pop
      gsave
      1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
      0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
      grestore
      1 0 0 0 FourEqual
      {
        /plateindex 0 def
      }
      {
        0 1 0 0 FourEqual
        {
          /plateindex 1 def
        }
        {
          0 0 1 0 FourEqual
          {
            /plateindex 2 def
          }
          {
            0 0 0 1 FourEqual
            {
              /plateindex 3 def
            }
            {
              0 0 0 0 FourEqual
              {
                /plateindex 5 def
              } if
            } ifelse
          } ifelse
        } ifelse
      } ifelse
      pop pop pop pop
    } if
    plateindex
 end
} def
/colorimage
{
  Adobe_ColorImage_AI6_Vars begin
    /channelcount 1 index def
    /sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
    4 sourcecount add index dup
    8 eq exch 1 eq or not
 end

  {
    /_colorimage load null ne
    {
      _colorimage
    }
    {
      Adobe_ColorImage_AI6_Vars /sourcecount get
      7 add { pop } repeat
    } ifelse
  }
  {
    dup 3 eq
    TestPlateIndex
    dup -1 eq exch 5 eq or or
    {
      /_colorimage load null eq
      {
        ColorImageCompositeEmulator
      }
      {
        dup 1 eq
        {
          pop pop image
        }
        {
          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            gsave

            0 _currenttransfer exec
            1 _currenttransfer exec
            eq
            { 0 _currenttransfer exec 0.5 lt }
            { 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse

            { { pop 0 } } { { pop 1 } } ifelse
            systemdict /settransfer get exec
          } if

          _colorimage

          Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
          {
            grestore
          } if
        } ifelse
      } ifelse
    }
    {
      dup 1 eq
      {
        pop pop
        image
      }
      {
        pop pop
        Adobe_ColorImage_AI6_Vars begin
          sourcecount -1 0
          {
            exch sourcearray 3 1 roll put
          } for
          /SeparateCMYKImageProc load
       end
        systemdict /image get exec
      } ifelse
    } ifelse
  } ifelse
} def
/XG
{
  pop pop
} def
/XF
{
  13 {pop} repeat
} def
/Xh
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIImageHeight exch def
    /XIImageWidth exch def
    /XIImageMatrix exch def
    0 0 moveto
    XIImageMatrix concat
    XIImageWidth XIImageHeight scale

    XIMask
    {
      /_lp /null ddef
      _fc
      /_lp /imagemask ddef
    }
    if
    /XIVersion 7 def
 end
} def
/XH
{
  Adobe_ColorImage_AI6_Vars begin
    /XIVersion 6 def
    grestore
 end
} def
/XI
{
  Adobe_ColorImage_AI6_Vars begin
    gsave
    /XIMask exch 0 ne def
    /XIBinary exch 0 ne def
    pop
    pop
    /XIChannelCount exch def
    /XIBitsPerPixel exch def
    /XIImageHeight exch def
    /XIImageWidth exch def
    pop pop pop pop
    /XIImageMatrix exch def
    XIBitsPerPixel 1 eq
    {
      XIImageWidth 8 div ceiling cvi
    }
    {
      XIImageWidth XIChannelCount mul
    } ifelse
    /XIBuffer exch string def
    XIBinary
    {
      /XIDataProc { currentfile XIBuffer readstring pop } def
      XIVersion 6 le
      {
        currentfile 128 string readline pop pop
      }
      if
    }
    {
      /XIDataProc { currentfile XIBuffer readhexstring pop } def
    } ifelse

    XIVersion 6 le
    {
      0 0 moveto
      XIImageMatrix concat
      XIImageWidth XIImageHeight scale
      XIMask
      {
        /_lp /null ddef
        _fc
        /_lp /imagemask ddef
      } if
    } if

    XIMask
    {
      XIImageWidth XIImageHeight
      false
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load
      imagemask
    }
    {
      XIImageWidth XIImageHeight
      XIBitsPerPixel
      [ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
      /XIDataProc load

      XIChannelCount 1 eq
      {
        gsave
        0 setgray
        image
        grestore
      }
      {
        false
        XIChannelCount
        colorimage
      } ifelse
    } ifelse
    grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
  Adobe_Illustrator_AI5 dup begin
  Adobe_Illustrator_AI5_vars begin
  discardDict
  {
    bind pop pop
  } forall
  dup /nc get begin
  {
    dup xcheck 1 index type /operatortype ne and
    {
      bind
    } if
    pop pop
  } forall
 end
  newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
  Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
  dup load dup length exch maxlength eq
  {
    dup dup load dup
    length 2 mul dict copy def
  } if
  load begin
  def
 end
} def
/npop
{
  {
    pop
  } repeat
} def
/hswj
{
  dup stringwidth 3 2 roll
  {
    _hvwb eq { exch _hvcx add exch _hvcy add } if
    exch _hvax add exch _hvay add
  } cforall
} def
/vswj
{
  0 0 3 -1 roll
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      dup cstring stringwidth 5 2 roll
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      4 -1 roll sub exch
      3 -1 roll sub exch
    }
    {
      _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      exch _hvay sub exch _hvax sub
      _fontHeight sub
    } ifelse
  } cforall
} def
/swj
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
  0 0 0 6 3 roll swj
} def
/vjss
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index setmatrix stroke
      grestore
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      gsave
      2 index false charpath
      6 index setmatrix stroke
      grestore

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjss
{
  4 1 roll
  {
    dup cstring
    gsave
    false charpath currentpoint
    5 index setmatrix stroke
    grestore
    moveto
    _sp eq
    {
      5 index 5 index rmoveto
    } if
    2 copy rmoveto
  } cforall
  6 npop
} def
/jss
{
  _lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
  0 0 0 7 3 roll jss
} def
/vjsp
{
  4 1 roll
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      false charpath
            currentpoint
      _fontRotateAdjust sub
      moveto
      _sp eq
      {
        5 index 5 index rmoveto
      } if
      2 copy rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      5 index sub
      3 index _sp eq
      {
        9 index sub
      } if

      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto

      2 index false charpath

      moveto pop pop
    } ifelse
  } cforall
  6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
  matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
  transform
  0.25 sub round 0.25 add exch
  0.25 sub round 0.25 add exch
  itransform
} def
/setstrokeadjust where
{
  pop true setstrokeadjust
  /c
  {
    curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll curveto
  } def
  /V
  /v load def
  /y
  {
    2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    lineto
  } def
  /L
  /l load def
  /m
  {
    moveto
  } def
}
{
  /c
  {
    pl curveto
  } def
  /C
  /c load def
  /v
  {
    currentpoint 6 2 roll pl curveto
  } def
  /V
  /v load def
  /y
  {
    pl 2 copy curveto
  } def
  /Y
  /y load def
  /l
  {
    pl lineto
  } def
  /L
  /l load def
  /m
  {
    pl moveto
  } def
} ifelse
/d
{
  setdash
} def
/cf
{
} def
/i
{
  dup 0 eq
  {
    pop cf
  } if
  setflat
} def
/j
{
  setlinejoin
} def
/J
{
  setlinecap
} def
/M
{
  setmiterlimit
} def
/w
{
  setlinewidth
} def
/XR
{
  0 ne
  /_eo exch ddef
} def
/H
{
} def
/h
{
  closepath
} def
/N
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      _eo {eoclip} {clip} ifelse /_doClip 0 ddef
    } if
    newpath
  }
  {
    /CRender
    {
      N
    } ddef
  } ifelse
} def
/n
{
  N
} def
/F
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
      /_doClip 0 ddef
    }
    {
      _pf
    } ifelse
  }
  {
    /CRender
    {
      F
    } ddef
  } ifelse
} def
/f
{
  closepath
  F
} def
/S
{
  _pola 0 eq
  {
    _doClip 1 eq
    {
      gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      _ps
    } ifelse
  }
  {
    /CRender
    {
      S
    } ddef
  } ifelse
} def
/s
{
  closepath
  S
} def
/B
{
  _pola 0 eq
  {
    _doClip 1 eq
    gsave F grestore
    {
      gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
      /_doClip 0 ddef
    }
    {
      S
    } ifelse
  }
  {
    /CRender
    {
      B
    } ddef
  } ifelse
} def
/b
{
  closepath
  B
} def
/W
{
  /_doClip 1 ddef
} def
/*
{
  count 0 ne
  {
    dup type /stringtype eq
    {
      pop
    } if
  } if
  newpath
} def
/u
{
} def
/U
{
} def
/q
{
  _pola 0 eq
  {
    gsave
  } if
} def
/Q
{
  _pola 0 eq
  {
    grestore
  } if
} def
/*u
{
  _pola 1 add /_pola exch ddef
} def
/*U
{
  _pola 1 sub /_pola exch ddef
  _pola 0 eq
  {
    CRender
  } if
} def
/D
{
  pop
} def
/*w
{
} def
/*W
{
} def
/`
{
  /_i save ddef
  clipForward?
  {
    nulldevice
  } if
  6 1 roll 4 npop
  concat pop
  userdict begin
  /showpage
  {
  } def
  0 setgray
  0 setlinecap
  1 setlinewidth
  0 setlinejoin
  10 setmiterlimit
  [] 0 setdash
  /setstrokeadjust where {pop false setstrokeadjust} if
  newpath
  0 setgray
  false setoverprint
} def
/~
{
 end
  _i restore
} def
/O
{
  0 ne
  /_of exch ddef
  /_lp /none ddef
} def
/R
{
  0 ne
  /_os exch ddef
  /_lp /none ddef
} def
/g
{
  /_gf exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _gf setgray
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/G
{
  /_gs exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _gs setgray
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/k
{
  _cf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _cf aload pop setcmykcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/K
{
  _cs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _cs aload pop setcmykcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/Xa
{
  _rgbf astore pop
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _rgbf aload pop setrgbcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XA
{
  _rgbs astore pop
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _rgbs aload pop setrgbcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/_rgbtocmyk
{
3
  {
  1 exch sub 3 1 roll
  } repeat
3 copy 1 4 1 roll
3
  {
  3 index 2 copy gt
    {
    exch
    } if
  pop 4 1 roll
  } repeat
pop pop pop
4 1 roll
3
  {
  3 index sub
  3 1 roll
  } repeat
4 -1 roll
} def
/Xx
{
  exch
  /_gf exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/XX
{
  exch
  /_gs exch ddef
  0 eq
  {
    findcmykcustomcolor
  }
  {
    /findrgbcustomcolor where not {
      4 1 roll _rgbtocmyk
      5 -1 roll
      findcmykcustomcolor
    }
    {
      pop
      findrgbcustomcolor
    } ifelse
  } ifelse
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/x
{
  /_gf exch ddef
  findcmykcustomcolor
  /_if exch ddef
  /_fc
  {
    _lp /fill ne
    {
      _of setoverprint
      _if _gf 1 exch sub setcustomcolor
      /_lp /fill ddef
    } if
  } ddef
  /_pf
  {
    _fc
    _eo {eofill} {fill} ifelse
  } ddef
  /_psf
  {
    _fc
    hvashow
  } ddef
  /_pjsf
  {
    _fc
    hvawidthshow
  } ddef
  /_lp /none ddef
} def
/X
{
  /_gs exch ddef
  findcmykcustomcolor
  /_is exch ddef
  /_sc
  {
    _lp /stroke ne
    {
      _os setoverprint
      _is _gs 1 exch sub setcustomcolor
      /_lp /stroke ddef
    } if
  } ddef
  /_ps
  {
    _sc
    stroke
  } ddef
  /_pss
  {
    _sc
    ss
  } ddef
  /_pjss
  {
    _sc
    jss
  } ddef
  /_lp /none ddef
} def
/A
{
  pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
  pop pop
} def
/discard
{
  save /discardSave exch store
  discardDict begin
  /endString exch store
  gt38?
  {
    2 add
  } if
  load
  stopped
  pop
 end
  discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
  /endStringLength endString length store
  /newBuff buffer 0 endStringLength getinterval store
  /newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
  /newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
  newBuff 0 newBuffButFirst putinterval
  newBuffLast 0
  currentfile read not
  {
  stop
  } if
  put
} def
0
{
  pre38Initialize
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff endString eq
      {
        cleartomark stop
      } if
      shiftBuffer
    } loop
  }
  {
  stop
  } ifelse
} def
1
{
  pre38Initialize
  /beginString exch store
  mark
  currentfile newBuff readstring exch pop
  {
    {
      newBuff beginString eq
      {
        /layerCount dup load 1 add store
      }
      {
        newBuff endString eq
        {
          /layerCount dup load 1 sub store
          layerCount 0 eq
          {
            cleartomark stop
          } if
        } if
      } ifelse
      shiftBuffer
    } loop
  } if
} def
2
{
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    endString eq
    {
      cleartomark stop
    } if
  } loop
} def
3
{
  /beginString exch store
  /layerCnt 1 store
  mark
  {
    currentfile buffer readline not
    {
    stop
    } if
    dup beginString eq
    {
      pop /layerCnt dup load 1 add store
    }
    {
      endString eq
      {
        layerCnt 1 eq
        {
          cleartomark stop
        }
        {
          /layerCnt dup load 1 sub store
        } ifelse
      } if
    } ifelse
  } loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
  /n /N /s /S /f /F /b /B
}
{
  {
    _doClip 1 eq
    {
      /_doClip 0 ddef _eo {eoclip} {clip} ifelse
    } if
    newpath
  } def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
  4 npop
  6 1 roll
  pop
  4 1 roll
  pop pop pop
  0 eq
  {
    0 eq
    {
      (%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
    }
    {

      /clipForward? true def

      /Tx /pop load def
      /Tj /pop load def

      currentdict end clipRenderOff begin begin
    } ifelse
  }
  {
    0 eq
    {
      save /discardSave exch store
    } if
  } ifelse
} bind def
/LB
{
  discardSave dup null ne
  {
    restore
  }
  {
    pop
    clipForward?
    {
      currentdict
     end
     end
     begin

      /clipForward? false ddef
    } if
  } ifelse
} bind def
/Pb
{
  pop pop
  0 (%AI5_EndPalette) discard
} bind def
/Np
{
  0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
  72 exch div
  0 dtransform dup mul exch dup mul add sqrt
  dup 1 lt
  {
    pop 1
  } if
  setflat
} def
/Mb
{
  q
} def
/Md
{
} def
/MB
{
  Q
} def
/nc 4 dict def
nc begin
/setgray
{
  pop
} bind def
/setcmykcolor
{
  4 npop
} bind def
/setrgbcolor
{
  3 npop
} bind def
/setcustomcolor
{
  2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
  Adobe_cshow begin
  Adobe_cshow
  {
    dup xcheck
    {
      bind
    } if
    pop pop
  } forall
 end
  Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
  {
 end
  } if
} def
/cforall
{
  /_lobyte 0 ddef
  /_hibyte 0 ddef
  /_cproc exch ddef
  /_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
  {
    /_lobyte exch ddef
    _hibyte 0 eq
    _cscript 1 eq
    _lobyte 129 ge _lobyte 159 le and
    _lobyte 224 ge _lobyte 252 le and or and
    _cscript 2 eq
    _lobyte 161 ge _lobyte 254 le and and
    _cscript 3 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript 25 eq
    _lobyte 161 ge _lobyte 254 le and and
      _cscript -1 eq
    or or or or and
    {
      /_hibyte _lobyte ddef
    }
    {
      _hibyte 256 mul _lobyte add
      _cproc
      /_hibyte 0 ddef
    } ifelse
  } forall
} def
/cstring
{
  dup 256 lt
  {
    (s) dup 0 4 3 roll put
  }
  {
    dup 256 idiv exch 256 mod
    (hl) dup dup 0 6 5 roll put 1 4 3 roll put
  } ifelse
} def
/clength
{
  0 exch
  { 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
  {
    dup cstring
    show
    _hvax _hvay rmoveto
    _hvwb eq { _hvcx _hvcy rmoveto } if
  } cforall
} def
/vawidthshow
{
  {
    dup 255 le
    _charorientation 1 eq
    and
    {
      -90 rotate
      0 _fontRotateAdjust rmoveto
      cstring
      _hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
      0 _fontRotateAdjust neg rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      exch _hvay sub exch _hvax sub
      2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
      3 2 roll
      cstring
      dup stringwidth pop 2 div neg _fontAscent neg rmoveto
      show
      moveto
    } ifelse
  } cforall
} def
/hvawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  _lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
  0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
  0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
  0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
  bind def
} bind def
/xs
{
  exch store
} bd
/nullProc
{
  {
  }
} def
/initialize
{
  pop pop
  Adobe_blend_AI5 begin
    Adobe_blend_AI5_vars begin
      /_contoneDevice where
      {
        pop
      }
      {
        /_contoneDevice false def
      } ifelse

      /_dpiThreshold where
      {
        pop
      }
      {
        /_dpiThreshold 600 def
      } ifelse

      /_screenFreqThreshold where
      {
        pop
      }
      {
        /_screenFreqThreshold 150 def
      } ifelse

      /tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
  /invertXfer
  {
    [
    {
      1 exch sub
        } /exec load systemdict/currenttransfer get exec /exec load
        ] cvx systemdict/settransfer get exec
      } bd
      /spotDict 3 dict dup begin
        /nSpots 2 def
        /spot1 7 dict def
        /spot2 7 dict def
     end
      def
      composite?
      {
        /_setgray_ /setgray load def
        /_fill_ /fill load def
        /_image_ /image load def
      }
      {
        /_setgray_ systemdict/setgray get def
        /_fill_ systemdict/fill get def
        /_image_ systemdict/image get def
      } ifelse
    } bd
    /terminate
    {
      currentdict Adobe_blend_AI5_vars eq
      {
     end
      currentdict Adobe_blend_AI5 eq
      {
     end
    } if
  } if
} bd
/_compositeSpotDevice where
{
 begin
    _compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
  /_compositeSpotDevice 0 def
} ifelse

/nullString () def
/d255 256 array def
0 1 255
{
  d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
  d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
  /f /F /s /S /b /B
}
{
  null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
  save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
  pop lv1Fix
}
{
  false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
  null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
  0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
  counttomark 2 add -1 roll
} bd
/setCustomColor
{
  dup /ccTint exch store
  1 exch sub 6 1 roll
  ccAry1 astore
  exch setcustomcolor
} bd
/currentCustomColor
{
  ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where
{
  pop
}
{
  /nsetcustomcolor
  {
    pop setcmykcolor
  } bd
} ifelse
/nsetcustomcolorend where
{
  pop
}
{
  /nsetcustomcolorend
  {
  } bd
} ifelse
/setBSpace
{
  newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
  dup 0 eq
  {
    pop

    spotColor?
      {
      dup 1 exch sub /ccTint exch def
      ccAry1 4 /Black put
      } if
    setgray
  }
  {
    1 eq
    {
      setcmykcolor
    }
    {
      composite? not colorType 2 lt and
      {
        forceCMYK
      }
      {
        setCustomColor
      } ifelse
    } ifelse
  } ifelse
} bd
/makeByte
{
  /tmp 0 store
  255 mul cvi
  8 string 8
  {
    dup tmp 3 index put /tmp tmp 1 add store
  } repeat
  exch pop
} bd
/setImgSpace
{
  cDataLen 1 8
  2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
  setImgSpace cData /_image_ load
  {
    exec
  } stopped
  {
    $error /errorname get /undefinedresult ne
    {
      stop
    }
    {
      pop pop pop pop pop
    } ifelse
  } if
} bd
level2?
{
  /bFill
  {
    _fill
  } def
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    expandCMYK
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
} if
/expandOne
{
      dup type /stringtype ne
      {
        cDataLen string
        exch
        dup 0 ne
        {
          255 mul cvi
          0 1 cDataLen 1 sub
          {
            3 copy
            exch put pop
          } for
        } if
        pop
      } if
} bd
/expandSpot
{
  spotColor?
  {
    spotDict begin
      spot1 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
      spot2 begin
        tintImage type /nulltype ne
        {
          tintImage expandOne /tintImage exch def
        } if
      end
   end
  } if
} bd
/expandCMYK
{
  4
  {
    expandOne 4 1 roll
  } repeat
} bd
/colorimage where dup
{
  exch pop

  /ncolorimage where
  {
    pop
  }
  {
    /ncolorimage {pop colorimage} bd
  } ifelse
} if
not
{
  /ncolorimage where
  {
    pop
  }
  {
    /colorimage? false store
    /ncolorimage
    {
      pop pop pop

    setSSave
    /blackData xs
    /yeData xs
    /mgData xs
    /cyData xs
    /cnt1 0 store
    [
    byte dup 0
    cyData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
    }
    {
      .3 mul
    } ifelse
    mgData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
    }
    {
      .59 mul
    } ifelse
    yeData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
    }
    {
      .11 mul
    } ifelse
    blackData dup type /stringtype eq
    {
      /cnt1 cvx /get cvx d255 /exch cvx /get cvx
    } if
    /add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /dup cvx 1 /gt cvx
    {
      pop 1
    } /if cvx
    255 /mul cvx /cvi cvx
    256 /mod cvx
    /dup cvx 0 /lt cvx
    {
      pop 0
    } /if cvx
    /put cvx
    /cnt1 dup cvx 1 /add cvx /store cvx
    ] cvx
    bind
      _image_
    sSave restore
  } bd
  } ifelse
} if
level2? not
{
  /bCImg
  {
    /cDataLen bDataLen store
    setImgSpace
    setSSave
    expandSpot
    cyData mgData yeData cData
    colorimage?
    {
      expandCMYK
    } if
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bwFill
  {
    setSSave
    /cDataLen 8 store
    /cData currentgray makeByte store
    bwImage
    sSave restore
  } bd
  /c1ImgFill
  {
    setSSave
    /cDataLen 8 store
    setImgSpace
    spotColor?
    {
      spotDict begin
        spot1 begin
          currentCustomColor makeByte /tintImage exch def
          /name exch def
          /spot_K exch def
          /spot_Y exch def
          /spot_M exch def
          /spot_C exch def
       end
        spot2 initSpotData
     end
    } if
    currentcmykcolor
    4
    {
      makeByte 4 1 roll
    } repeat
    true 4 spotDict
    {
      ncolorimage
    } stopped
    {
      $error /errorname get /undefinedresult ne
      {
        stop
      }
      {
        10
        {
          pop
        } repeat
      } ifelse
    } if
    sSave restore
  } bd
  /bFill
  noImg
  {
    {
      _fill
    }
  }
  {
    {
      color?
      {
        c1ImgFill
      }
      {
        bwFill
      } ifelse
    }
  } ifelse
  bd
} if
composite?
{
  /bCFun
  {
    color?
    {
      cyData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      mgData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      yeData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      cData dup type /stringtype eq
      {
        /ndx cvx /get cvx d255 /exch cvx /get cvx
      } if
      spotColor?
      {
        spotDict begin
          /spotDict cvx /begin cvx
          spot1 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
          spot2 begin
            tintImage dup type /stringtype eq
            {
              /ndx cvx /get cvx d255- /exch cvx /get cvx
            }
            {
              dup type /nulltype ne
              {
                name type /nametype ne {1 exch sub} if
              } if
            } ifelse
         end
          /spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
          /end cvx
       end
        /spotDict cvx
        /nsetcustomcolor cvx
      }
      {
        /setcmykcolor cvx
      } ifelse
    }
    {
      cData /ndx cvx /get cvx
      d255 /exch cvx /get cvx
      /setgray cvx
    } ifelse
  } bd
  /Bc
  {
    newpath
    gsave
    setBSpace
    nColors 1 eq
    {
      pop pop
      setCStop
    } if
    bFill
    grestore
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      linImg
    }
    {
      bFill
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    _fill
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      _fill
      blend? bHi? or
      {
        rdBlend
      } if
      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /cGetRData
  {
    setCStop
    /blend?
    cData type /stringtype eq
    dup not color? and
    {
      pop
      cyData type /stringtype eq
      mgData type /stringtype eq
      yeData type /stringtype eq
      or or
    } if
    store
  } def
  /cGetRData
} if
/eCStop
{
  mark
  1 index 3 mul 3 add dup 8 gt
  {
    pop 8
  } if
  1 roll
  cleartomark
} bd
composite? not
{
  /knockOut
  level2?
  {
    {
      0 0 0 0 setcmykcolor _fill
    }
  }
  {
    /bFill noImg
    {
      {
        _fill
      }
    }
    {
      {
        _of true eq
        {
          currentgray 1 ne
          {
            bwFill
          } if
        }
        {
          bwFill
        } ifelse
      }
    } ifelse
    def
    /whiteByte 1 makeByte def
    noImg
    {
      {
        0 0 0 0 setcmykcolor _fill
      }
    }
    {
      {
        cBType 0 eq
        {
          setSSave
          /cData whiteByte store
          /cDataLen 8 store
          bwImage
          sSave restore
        }
        {
          _fill
        } ifelse
      }
    } ifelse
  } ifelse
  bd
  /bCFun
  {
    cData dup type /stringtype ne
    {
      color?
      {
        1 exch sub
      } if
    }
    {
      /ndx cvx /get cvx
      color? customColor? not and
      {
        d255-
      }
      {
        d255
      } ifelse
      /exch cvx /get cvx
    } ifelse
    /_setgray_ cvx
  } bd
  /eCCBlend
  {
    dup 3 eq
    {
      pop
      mark 7 1 roll
      6 copy ccThrough? dup /blend? xs
      {
        /startC? true store
        setCustomColor
        customColor?
        {
          /cData tint1Data store
          setCDataLen
        } if
        /endC?
        3 index 3 eq
        {
          4 index 1 ne
        }
        {
          false
        } ifelse
        store
      } if
      cleartomark
      stop
    } if
    1 eq
    {
      pop pop pop
    } if
    pop
    /startC? false store
    6
    {
      8 index
    } repeat
    ccThrough? dup /blend? xs
    {
      /endC? true store
      blend? not
      {
        stop
      } if
      customColor?
      {
        /cData tint1Data store
        setCDataLen
      } if
    } if
  } bd
  /handleOP
  {
    _of not
    {
      knockOut
    } if
  } bd
  /handleROP
  {
    _of not
    {
      0 0 0 0 setcmykcolor _fill
    }
    {
      newpath
    } ifelse
  } bd
  /rdBm
  {
    /nColors dup load 1 sub store
    blend?
    {
      _fill
    }
    {
      handleROP
    } ifelse
    gsave
    bUMatrix astore concat
    bHi?
    {
      xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
      rampPoint 1 lt
      {
        1 rampPoint sub dup xHi mul exch yHi mul translate
      } if
    } if
    nColors
    {
      0 0 rampPoint 0 360 arc
      blend?
      {
        cData type /stringtype ne bHi? not and
        {
          cData color?
          {
            1 exch sub
          } if
          _setgray_
          _fill_
        }
        {
          cData type /stringtype ne
          {
            /cDataLen 1 store
            /bDataLen 1 store
          } if
          rdBlend
        } ifelse
      }
      {

        handleROP

        pTState?
        {
          /bAxis rampPoint endPoint sub store
          xHi bAxis mul yHi bAxis mul translate
        } if
      } ifelse

      nColors 1 gt
      {
        getRData
      } if
      /nColors dup load 1 sub store
    } repeat
    /nColors 1 store
    grestore
  } bd
  /ccThrough?
  {
    gsave
    pop 0 setCustomColor
    currentcmykcolor
    grestore
    anyColor?
  } bd
  /forceCMYK
  {
    exch pop
    1 exch sub 5 1 roll
    4
    {
      4 index mul 4 1 roll
    } repeat
    0
    cCMYKData dup /cData ne
    {
      dup /yeData eq
      {
        pop 1 add
      }
      {
        /mgData eq
        {
          2
        }
        {
          3
        } ifelse
        add
      } ifelse
      0
    } if
    pop
    index
    0 eq
    {
      pop pop pop pop 0 0 0 0
    } if
    setcmykcolor
    pop
    /fCMYK? true store
  } bd
  /endCapSepBc
  {
    pop pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        colorType 1 eq
        {
          forceCMYK
        }
        {
          fCMYK?
          {
            forceCMYK
          }
          {
            setCustomColor
          } ifelse
        } ifelse
      } ifelse
    } ifelse
    currentcmykcolor anyColor?
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse

  } bd
} if
/cCMYKData 0 def
composite? dup not
{
  pop customColor?
} if
not
{
  /cCMYKData
  /cyData /mgData /yeData /cData
  black? not
  {
    yellow?
    {
      exch
    }
    {
      magenta?
      {
        3
      }
      {
        4
      } ifelse
      -1 roll
    } ifelse
  } if
  4 1 roll pop pop pop
  store
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {

      blend? currentcmykcolor anyColor? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cCMYKData load dup type /stringtype eq
      {
        dup length /cDataLen xs
        /cData xs
        gsave
        colorType 0 ne noImg not and
        {
          invertXfer
        } if
        linImg
        grestore
      }
      {
        pop bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /cmykGetRData
  {
    /fCMYK? false store
    blend?
    {
      {
        cmykDataProcs colorType get exec
      } stopped
      pop
      blend?
      {
        /cData cCMYKData load store
        setCDataLen
      } if
    } if
  } def
  /cmykDataProcs
  [
  {
    pop
    black? dup /blend? xs
    {
      setgray
      0
    } if
    pop
  }
  {
    cCMYKData load dup type /stringtype ne
    {
      0 0 0
      cyan? not
      {
        4 magenta?
        {
          1
        }
        {
          yellow?
          {
            2
          }
          {
            3
          } ifelse
        } ifelse
        roll
      } if
      4 copy add add add 0 eq
      {
        /blend? false store
      } if

      setcmykcolor
      /startC? true store
      /endC? true store
      eCStop
      stop
    } if
    pop
    dup 0 eq
    {
      pop
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        forceCMYK
      } ifelse
    } ifelse
  } bind
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      black?
      {
        setgray
      }
      {
        0 0 0 4 -1 roll 1 exch sub setcmykcolor
      } ifelse
      black?
      {
        /blend? true store
      } if
      6
      {
        8 index
      } repeat
      ccThrough?
      {
        /blend? true store
      }
      {
        black?
        {
          /cData tint1Data store
          setCDataLen
        }
        {
          /blend? false store
        } ifelse
      } ifelse
    }
    {
      mark 7 1 roll
      6 copy ccThrough?
      {
        forceCMYK
        pop
        stop
      } if
      9 index 0 eq
      {
        black? dup /blend? xs
        {
          pop 1 setgray
          /cData tint2Data store
          setCDataLen
          0
        } if
        pop
      }
      {
        /blend?
        6
        {
          16 index
        } repeat
        ccThrough?
        store
        blend?
        {
          forceCMYK
        } if
      } ifelse
      cleartomark
    } ifelse
  } bind
  ] def
  /cmykGetRData
} if
composite? dup not
{
  pop isCMYKSep?
} if
not
{
  /endCapSepBc
  {
    /white? false store
    pop pop
    dup 0 eq
    {
      pop
      /white? 1 index 1 eq store
      setgray
    }
    {
      1 eq
      {
        setcmykcolor
      }
      {
        setCustomColor
      } ifelse
    } ifelse
%
    currentcmykcolor anyColor?
    endC? or
    blend? and
    {
      bFill
    }
    {
      handleOP
    } ifelse
  } bd
  /Bc
  {
    gsave
    setBSpace
    nColors 1 gt
    {
      blend? startC? and
      {
        bFill
      }
      {
        handleOP
      } ifelse
    }
    {
      endCapSepBc
    } ifelse
    grestore
    newpath
  } bd
  /linealBm
  {
    /nColors dup load 1 sub store
    newpath
    gsave
    setBSpace
    blend?
    {
      cData type /stringtype eq
      {
        linImg
      }
      {
        bFill
      } ifelse
    }
    {
      handleOP
    } ifelse
    grestore
    nColors 1 gt
    {
      getRData
    } if
  } bd
  /discardCMY
  {
    counttomark 4 add -3 roll pop pop pop
  } bd
  /testTopCC
  {
    6 copy ccThrough?
  } bd
  /getCRamp
  {
    {
      ccDataProcs colorType 2 sub get exec
    } stopped pop
    blend? cDataLen 0 eq and
    {
      /cDataLen bDataLen store
    } if
  } bd
  /ccGetRData
  {
    /fCMYK? false store
    /startC? false store
    /endC? false store
    colorType 2 lt
    {
      /blend? false def
    } if
    blend?
    {
      getCRamp
    }
    {
      setCStop
    } ifelse
    blend?
    {
      /blend? cData 1 ne store
      blend?
      {
        cData dup type /stringtype ne
        {
          1 exch sub /cData xs 0
        } if
        pop
      } if
    } if
  } def
  /ccDataProcs
  [
  /eCCBlend load
  {
    cBType 1 eq
    {
      tint1Data tint2Data
      /tint1Data xs
      /tint2Data xs
    } if
    0 eq
    {
      /blend? false store
      pop
    }
    {
      mark 7 1 roll
      testTopCC
      {
        /blend? 1 index 1 ne store
        /startC? blend? store
        /endC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint1Data store
        setCDataLen
        setCustomColor
        pop
        stop
      } if
      cleartomark
    } ifelse
    2 index 0 eq
    {
      /blend? false store
    }
    {
      mark 6
      {
        9 index
      } repeat
      testTopCC dup /blend? xs
      {
        /blend? 1 index 1 ne store
        /endC? blend? store
        /startC? false store
        blend? not
        {
          cleartomark stop
        } if
        /cData tint2Data store
        setCDataLen
      } if
      cleartomark
    } ifelse
  } bind
  ] def
  /ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
  /cDataLen 0 cData dup type /stringtype eq
  {
    length exch
  } if
  pop store
} bd
/initSpotData
{
 begin
    /name null def
    /tintImage null def
    /tintValue null def
    /spot_C  null def
    /spot_M  null def
    /spot_Y  null def
    /spot_K  null def
 end
} bd
/getRData
{
  /colorType gMark store
  _compositeSpotDevice 0 ne
  {
    spotDict begin
      spot1 initSpotData
      spot2 initSpotData
   end
    /spotColor? colorType 2 eq colorType 3 eq or def
  }
  {
    /spotColor? false store
  } ifelse
  /blend? true store
  0 0 0 0 setcmykcolor
  100 div /rampPoint xs
% (between 13 and 87%)
  100 div /midPoint xs
  dup 0 eq
  {
    2
  }
  {
    dup 1 eq
    {
      5
    }
    {
      _compositeSpotDevice 0 ne
      {
        spotDict begin
          spot1 begin
            /name 3 index def
            /spot_K 4 index def
            /spot_Y 5 index def
            /spot_M 6 index def
            /spot_C 7 index def
         end
       end
      } if
      7
    } ifelse
  } ifelse
  /tmp exch def
  tmp index 100 div /endPoint xs
  _compositeSpotDevice 0 ne
  {
    tmp 2 add index 3 eq
    {
      /tmp tmp 4 add def
      tmp index dup
      spotDict begin
        spot1/name get ne
        {
          spot2 begin
            /name exch def
            /spot_K tmp 2 add index def
            /spot_Y tmp 3 add index def
            /spot_M tmp 4 add index def
            /spot_C tmp 5 add index def
         end
        }
        {
          pop
        } ifelse
     end
    } if
  } if
  /color? colorType 0 gt store

  colorType 3 eq
  {
    /tint2Data gMark store
  } if

  colorType 2 ge
  {
    /tint1Data gMark store
  } if
  _compositeSpotDevice 0 ne
  {
    spotDict begin

      colorType 2 ge
      {
        colorType 3 eq
        {
          spot2 begin
            /tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
            name null eq {/name /Black def} if
         end
        } if
        spot1 begin
          /tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
          colorType 2 eq
          {
            name null eq
            {
              /name spot2/name get def
              spot2/name null put
            } if
          }
          {
            name null eq {/name /Black def} if
          } ifelse
       end
      } if
   end
  } if

  /cData gMark store
  setCDataLen
  colorType 0 gt
  {
    counttomark 4 add -3 roll
    /yeData xs
    /mgData xs
    /cyData xs
  } if
  blend?
  {
    /bDataLen
    cDataLen dup 0 eq color? and
    {
      [
      cyData mgData yeData
      ]
      {
        dup type /stringtype eq
        {
          length exch pop exit
        } if
        pop
      } forall
    } if
    store
    bDataLen 0 eq
    {
      /bDataLen 1 store
    } if
    getData
    blend?
    {
      composite? cDataLen 0 eq and
      {
        /cDataLen bDataLen store
      } if
    } if
  }
  {
    setCStop
  } ifelse
} bd
/Bg
{
  0 0 0 0 setcmykcolor
  6
  {
    pop
  } repeat
  /blendLength xs
  pop pop pop
  /cBName xs
  /bRender xs
  bRender 2 ne
  {
    composite? not
    {
      _of setoverprint
    } if
    _eo {eoclip} {clip} ifelse
    _bn cBName 2 copy known
    {
      get
      mark exch aload pop
      /cBType xs
      /nColors xs
      mark exch aload pop
      0 0
    } if
    pop pop
    getRData
    cBType 0 eq
    {
      /linealBm
    }
    {
      bHi?
      {
        /pTState? nColors 2 gt store
      } if
      /doBlend /rdBlend load store
      /rdBm
    } ifelse
  }
  {
    inLine? not
    {
      mark mark
    } if
    /Bc dup
    {
      cleartomark mark
    } bd
    /nullProc
  } ifelse
  load /Bm xs
} bd
/linImg
noImg
{
  {
    newpath doRctBlend
  }
}
{
  {
    /doBlend
    color? composite? and
    {
      /bCImg
    }
    {
      /bwImage
    } ifelse
    load
    store

    0 0 moveto
    tRectOK? composite? and
    {
      {
        mark
        0 1 dtransform atan cvi 90 mod 0 eq
        1 0 dtransform atan cvi 90 mod 0 eq
      } stopped
      {
        cleartomark
      }
      {
        and exch pop
        {
          newpath
          doRctBlend
        }
        {
          doBlend
        } ifelse
      } ifelse
    }
    {
      doBlend
    } ifelse
  }
} ifelse
bd
/doRctBlend
{
  gsave
  /sInc 1 store
  /nSamples bDataLen store
  /bInc 1 bDataLen div store
  /ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
  /pChange ubAxis 0 eq
  {
    0
  }
  {
    bDataLen ubAxis div
  } ifelse
  store
  pChange .5 gt noImg not and dup /optimize? xs
  {
    /nSamples ubAxis 2 div round cvi dup 1 le
    {
      pop 2
    } if
    store
    /bInc 1 nSamples div store
    /sInc bDataLen 1 sub nSamples 1 sub div store
  } if
  0
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  /rectfill where dup
  {
    exch pop _compositeSpotDevice 1 ne and
  } if
  {
    0 0 bInc 1 /rectfill cvx
  }
  {
    0 0 /moveto cvx
    bInc 0 /lineto cvx
    bInc 1 /lineto cvx
    0 1 /lineto cvx
    /closepath cvx
    /_fill_ cvx
  } ifelse
  bInc 0 /translate cvx
  sInc /add cvx
  ] cvx
  bind
  repeat
  pop
  spotColor? {nsetcustomcolorend} if

  grestore
} bd
/rdPrep
{
  /nSamples bDataLen dup 0 eq
  {
    pop 1
  } if
  store
  /sInc -1 store
  /bAxis rampPoint endPoint sub store
  /bInc bAxis bDataLen div neg store
  /optimize? false store
  tRectOK?
  {
    /ubAxis
    bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
    2 copy lt
    {
      exch
    } if
    pop store
    /pChange ubAxis 0 eq
    {
      0
    }
    {
      bDataLen ubAxis div
    } ifelse
    store
    pChange .5 gt noImg not and dup /optimize? xs
    {
      /nSamples ubAxis 2 div round cvi dup 1 le
      {
        pop 2
      } if
      store
      /bInc bAxis nSamples div neg store
      /sInc bDataLen 1 sub nSamples 1 sub div neg store
    } if
  } if
  bHi?
  {
    /xBCInc xHi bAxis mul nSamples div store
    /yBCInc yHi bAxis mul nSamples div store
  } if
} bd
/rdBlend
{
  newpath
  gsave
  rdPrep
  rampPoint
  bDataLen 1 sub
  nSamples
  [
  /dup cvx
  optimize?
  {
    /round cvx /cvi cvx
  } if
  /ndx /exch cvx /store cvx
  bCFun
  0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
  /exch cvx bInc /add cvx /exch cvx
  sInc /add cvx
  bHi?
  {
    xBCInc yBCInc /translate cvx
  } if
  ] cvx
  bind
  repeat
  pop pop
  spotColor? {nsetcustomcolorend} if
  grestore
  pTState?
  {
    xHi bAxis mul yHi bAxis mul translate
  } if
} bd
/Bh
{
  pop pop
  /pTState? false store
  2 copy 0 ne exch 0 ne or dup /bHi? xs
  {
    /yHi xs
    /xHi xs
    0 0
  } if
  pop pop
} bd
/BD
{
  inLine? not
  {
    ] nColors cBType
    ] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
  3 -1 roll dup nullString eq dup
  {
    setSSave
  } if
  /inLine? exch def
  /cBName exch def
  /nColors exch def
  /cBType exch def
} bd
/Bb
{
  sSave null eq
  {
    Adobe_blend_AI5_vars begin
    setSSave
  } if
  composite?
  {
    /_fill /fill load store
  }
  {
    /__fill /fill load store
      /_fill
      {
        _of true eq
        {
          currentgray 1 ne
          {
            __fill
          } if
        }
        {
          __fill
        } ifelse
      } def
  } ifelse
  /fill
  {
  } def
  } bd
  /BB
  {
  /cBType xs
  cleartomark cleartomark
  cBType dup
  bRender
  sSave dup type /savetype eq
  {
    restore 0
  } if
  pop
  currentdict Adobe_blend_AI5_vars eq
  {
   end
  } if
  2 ne exch 0 gt and
  {
    2 eq
    {
      s
    }
    {
      S
    } ifelse
  }
  {
    pop newpath
  } ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
  userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
  dup null eq
  {
    pop
    _dp 0 ne
    {
      0 1 _dp 1 sub _dl mod
      {
        _da exch get 3 get
      } for
      _dp 1 sub _dl mod 1 add packedarray
      _da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
      definepattern pop
    } if
  }
  {
    _dp 0 ne _dp _dl mod 0 eq and
    {
      null dp
    } if
    7 packedarray _da exch _dp _dl mod exch put
    _dp _dl mod _da 0 get 4 get 2 packedarray
    /_dp _dp 1 add def
  } ifelse
} def
/E
{
  _ed begin
  dup 0 get type /arraytype ne
  {
    0
    {
      dup 1 add index type /arraytype eq
      {
        1 add
      }
      {
        exit
      } ifelse
    } loop
    array astore
  } if
  /_dd exch def
  /_ury exch def
  /_urx exch def
  /_lly exch def
  /_llx exch def
  /_n exch def
  /_y 0 def
  /_dl 4 def
  /_dp 0 def
  /_da _dl array def
  0 1 _dd length 1 sub
  {
    /_d exch _dd exch get def
    0 2 _d length 2 sub
    {
      /_x exch def
      /_c _d _x get _ ne def
      /_r _d _x 1 add get cvlit def
      _r _ ne
      {
        _urx _llx sub _ury _lly sub
        [
        1 0 0 1 0 0
        ]
        [
        /save cvx
        _llx neg _lly neg /translate cvx
        _c
        {
          nc /begin cvx
        } if
        _r dup type /stringtype eq
        {
          cvx
        }
        {
          {
            exec
          } /forall cvx
        } ifelse
        _c
        {
          /end cvx
        } if
        /restore cvx
        ] cvx
        /_fn 12 _n length add string def
        _y _fn cvs pop
        /_y _y 1 add def
        _fn 12 _n putinterval
        _fn _c false dp
        _d exch _x 1 add exch put
      } if
    } for
  } for
  null dp
  _n _dd /_pd
 end
  xput
} def
/fc
{
  _fm dup concatmatrix pop
} def
/p
{
  /_fm exch ddef
  9 -2 roll _pm translate fc
  7 -2 roll _pm scale fc
  5 -1 roll _pm rotate fc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate fc
    1 -1 _pm scale fc
    neg _pm rotate fc
  }
  {
    pop
  } ifelse
  dup _pm rotate fc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore fc
  neg _pm rotate fc
  _pd exch get /_fdd exch ddef
  /_pf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          patternfill
        }
        {
          pop
          fill
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_psf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          9 copy 6 npop patternashow
        }
        {
          pop
          6 copy 3 npop hvashow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    sw rmoveto
  } ddef
  /_pjsf
  {
    save
    /_doClip 0 ddef
    0 1 _fdd length 1 sub
    {
      /_fd exch _fdd exch get ddef
      _fd
      0 2 _fd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _fc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _fm
          12 copy 6 npop patternawidthshow
        }
        {
          pop 9 copy 3 npop hvawidthshow
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    swj rmoveto
  } ddef
  /_lp /none ddef
} def
/sc
{
  _sm dup concatmatrix pop
} def
/P
{
  /_sm exch ddef
  9 -2 roll _pm translate sc
  7 -2 roll _pm scale sc
  5 -1 roll _pm rotate sc
  4 -2 roll exch 0 ne
  {
    dup _pm rotate sc
    1 -1 _pm scale sc
    neg _pm rotate sc
  }
  {
    pop
  } ifelse
  dup _pm rotate sc
  exch dup sin exch cos div 1 0 0 1 0 6 2 roll
  _pm astore sc
  neg _pm rotate sc
  _pd exch get /_sdd exch ddef
  /_ps
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          patternstroke
        }
        {
          pop stroke
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    newpath
  } ddef
  /_pss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          10 copy 6 npop patternashowstroke
        }
        {
          pop 7 copy 3 npop ss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop sw rmoveto
  } ddef
  /_pjss
  {
    save
    /_doClip 0 ddef
    0 1 _sdd length 1 sub
    {
      /_sd exch _sdd exch get ddef
      _sd
      0 2 _sd length 2 sub
      {
        gsave
        2 copy get dup _ ne
        {
          cvx exec _sc
        }
        {
          pop
        } ifelse
        2 copy 1 add get dup _ ne
        {
          aload pop findfont _sm
          13 copy 6 npop patternawidthshowstroke
        }
        {
          pop 10 copy 3 npop jss
        } ifelse
        grestore
        pop
      } for
      pop
    } for
    restore
    pop swj rmoveto
  } ddef
  /_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
  /definepattern where
  {
    pop
  }
  {
   begin
   begin
    Adobe_pattern_AI5 begin
    Adobe_pattern_AI5
    {
      dup xcheck
      {
        bind
      } if
      pop pop
    } forall
    mark
    cachestatus 7 1 roll pop pop pop pop exch pop exch
    {
      {
        10000 add
        dup 2 index gt
        {
          exit
        } if
        dup setcachelimit
      } loop
    } stopped
    cleartomark
   end

   end
   end

    Adobe_pattern_AI5 begin
  } ifelse
} def
/terminate
{
  currentdict Adobe_pattern_AI5 eq
  {
   end
  } if
} def
errordict
/nocurrentpoint
{
  pop
  stop
} put
errordict
/invalidaccess
{
  pop
  stop
} put
/patternencoding
256 array def
0 1 255
{
  patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
  17 dict begin
  /uniform exch def
  /cache exch def
  /key exch def
  /procarray exch def
  /mtx exch matrix invertmatrix def
  /height exch def
  /width exch def
  /ctm matrix currentmatrix def
  /ptm matrix def
  /str 32 string def
  /slice 9 dict def
  slice /s 1 put
  slice /q 256 procarray length div sqrt floor cvi put
  slice /b 0 put
  /FontBBox
  [
  0 0 0 0
  ] def
  /FontMatrix mtx matrix copy def
  /Encoding patternencoding def
  /FontType 3 def
  /BuildChar
  {
    exch
   begin
    /setstrokeadjust where {pop true setstrokeadjust} if
    slice begin
    dup q dup mul mod s idiv /i exch def
    dup q dup mul mod s mod /j exch def
    q dup mul idiv procarray exch get
    /xl j width s div mul def
    /xg j 1 add width s div mul def
    /yl i height s div mul def
    /yg i 1 add height s div mul def
    uniform
    {
      1 1
    }
    {
      width 0 dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
      0 height dtransform
      dup mul exch dup mul add sqrt dup 1 add exch div
    } ifelse
    width 0 cache
    {
      xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
      setcachedevice
    }
    {
      setcharwidth
    } ifelse
    gsave
    scale
    newpath
    xl yl moveto
    xg yl lineto
    xg yg lineto
    xl yg lineto
    closepath
    clip
    newpath
   end
   end
    exec
    grestore
  } def
  key currentdict definefont
 end
} def
/patterncachesize
{
  gsave
  newpath
  0 0 moveto
  width 0 lineto
  width height lineto
  0 height lineto
  closepath
  patternmatrix setmatrix
  pathbbox
  exch ceiling 4 -1 roll floor sub 3 1 roll
  ceiling exch floor sub
  mul 1 add
  grestore
} def
/patterncachelimit
{
  cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
  exch dup begin
  setfont
  ctm setmatrix
  concat
  slice exch /b exch slice /q get dup mul mul put
  FontMatrix concat
  uniform
  {
    width 0 dtransform round width div exch round width div exch
    0 height dtransform round height div exch height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix
  }
  {
    ptm currentmatrix pop
  } ifelse
  {
    currentpoint
  } stopped not
  {
    2 npop
    pathbbox
    true
    4 index 3 index eq
    4 index 3 index eq
    and
    {
      pop false
      {
        {
          2 npop
        }
        {
          3 npop true
        }
        {
          7 npop true
        }
        {
          pop true
        } pathforall
      } stopped
      {
        5 npop true
      } if
    } if
    {
      height div ceiling height mul 4 1 roll
      width div ceiling width mul 4 1 roll
      height div floor height mul 4 1 roll
      width div floor width mul 4 1 roll
      2 index sub height div ceiling cvi exch
      3 index sub width div ceiling cvi exch
      4 2 roll moveto
      FontMatrix mtx invertmatrix
      dup dup 4 get exch 5 get rmoveto
      ptm ptm concatmatrix pop
      slice /s
      patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
      dup slice /q get gt
      {
        pop slice /q get
      } if
      put
      0 1 slice /s get dup mul 1 sub
      {
        slice /b get add
        gsave
        0 1 str length 1 sub
        {
          str exch 2 index put
        } for
        pop
        dup
        {
          gsave
          ptm setmatrix
          1 index str length idiv
          {
            str show
          } repeat
          1 index str length mod str exch 0 exch getinterval show
          grestore
          0 height rmoveto
        } repeat
        grestore
      } for
      2 npop
    }
    {
      4 npop
    } ifelse
  } if
 end
} def
/patternclip
{
  _eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
  strokepath
} def
/patternmatrix
matrix def
/patternfill
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternclip
  Adobe_pattern_AI5 /patternpath get exec
  grestore
  newpath
} def
/patternstroke
{
  dup type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get
  } if
  gsave
  patternstrokepath
  true
  {
    {
      {
        newpath
        moveto
      }
      {
        lineto
      }
      {
        curveto
      }
      {
        closepath
        3 copy
        Adobe_pattern_AI5 /patternfill get exec
      } pathforall
      3 npop
    } stopped
    {
      5 npop
      patternclip
      Adobe_pattern_AI5 /patternfill get exec
    } if
  }
  {
    patternclip
    Adobe_pattern_AI5 /patternfill get exec
  } ifelse
  grestore
  newpath
} def
/vpatternawidthshow
{
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef

  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  3 npop
} def
/hpatternawidthshow
{
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    9 index 9 index 9 index
    Adobe_pattern_AI5 /patternfill get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
  6 index type /dicttype eq
  {
    Adobe_pattern_AI5 /patternmatrix get 7 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
  7 1 roll
  6 1 roll
  /_hvay exch ddef
  /_hvax exch ddef
  /_hvwb exch ddef
  /_hvcy exch ddef
  /_hvcx exch ddef
  {
    dup cstring
    dup length 1 eq
    _charorientation 1 eq
    and
    {
      -90 rotate
      currentpoint
      _fontRotateAdjust add
      moveto
      gsave
      false charpath currentpoint
      3 index setmatrix
      6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      _fontRotateAdjust sub
      moveto
      _hvwb eq { _hvcx _hvcy rmoveto } if
      _hvax _hvay rmoveto
      90 rotate
    }
    {
      currentpoint
      _fontHeight sub
      _hvax sub
      3 index _hvwb eq { _hvcx sub } if
      currentpoint
      exch 4 index stringwidth pop 2 div sub
      exch _fontAscent sub
      moveto
      gsave
      2 index false charpath
      4 index setmatrix
      7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
      grestore
      newpath moveto pop pop
    } ifelse
  } cforall
  4 npop
} def
/hpatternawidthshowstroke
{
  7 1 roll
  {
    dup cstring exch
    gsave
    3 index eq { 5 index 5 index rmoveto } if
    false charpath currentpoint
    7 index setmatrix
    10 index 10 index 10 index
    Adobe_pattern_AI5 /patternstroke get exec
    grestore
    newpath moveto
    2 copy rmoveto
  } cforall
  9 npop
} def
/patternashowstroke
{
  0 0 0 7 3 roll
  patternawidthshowstroke
} def
/patternawidthshowstroke
{
  7 index type /dicttype eq
  {
    patternmatrix /patternmatrix get 8 1 roll
  } if
  _lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.141 0.110 0.051 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  155.6400 462.1200 m
  329.7600 462.1200 L
  329.7600 417.7200 L
  155.6400 417.7200 L
  155.6400 462.1200 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  155.6400 417.7200 m
  155.6400 462.1200 L
  329.7600 462.1200 L
  329.7600 417.7200 L
  155.6400 417.7200 L
s
U
u
  0.141 0.110 0.051 0.000 k
  0.000 0.000 0.000 1.000 K
  34.9200 228.8400 m
  139.0800 228.8400 L
  139.0800 161.8800 L
  34.9200 161.8800 L
  34.9200 228.8400 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  34.9200 161.8800 m
  34.9200 228.8400 L
  139.0800 228.8400 L
  139.0800 161.8800 L
  34.9200 161.8800 L
s
U
u
  0.141 0.110 0.051 0.000 k
  0.000 0.000 0.000 1.000 K
  155.5200 78.8400 m
  329.6400 78.8400 L
  329.6400 19.6800 L
  155.5200 19.6800 L
  155.5200 78.8400 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  155.5200 19.6800 m
  155.5200 78.8400 L
  329.6400 78.8400 L
  329.6400 19.6800 L
  155.5200 19.6800 L
s
U
u
  0.141 0.110 0.051 0.000 k
  0.000 0.000 0.000 1.000 K
  155.5200 162.7200 m
  329.6400 162.7200 L
  329.6400 84.0000 L
  155.5200 84.0000 L
  155.5200 162.7200 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  155.5200 84.0000 m
  155.5200 162.7200 L
  329.6400 162.7200 L
  329.6400 84.0000 L
  155.5200 84.0000 L
s
U
u
  0.141 0.110 0.051 0.000 k
  0.000 0.000 0.000 1.000 K
  155.5200 408.7200 m
  329.6400 408.7200 L
  329.6400 167.0400 L
  155.5200 167.0400 L
  155.5200 408.7200 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  155.5200 167.0400 m
  155.5200 408.7200 L
  329.6400 408.7200 L
  329.6400 167.0400 L
  155.5200 167.0400 L
s
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  165.4800 436.5600 m
  320.0400 436.5600 L
  320.0400 421.9200 L
  165.4800 421.9200 L
  165.4800 436.5600 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.4800 421.9200 m
  165.4800 436.5600 L
  320.0400 436.5600 L
  320.0400 421.9200 L
  165.4800 421.9200 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 213.8400 425.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(pl\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.9600 425.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.4400 425.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(start \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 255.1200 425.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 265.2000 425.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 377.1600 m
  319.8000 377.1600 L
  319.8000 348.8400 L
  165.3600 348.8400 L
  165.3600 377.1600 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 348.8400 m
  165.3600 377.1600 L
  319.8000 377.1600 L
  319.8000 348.8400 L
  165.3600 348.8400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 169.5600 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 188.8800 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(54 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.9600 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.8800 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.2000 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(41 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 254.2800 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(<< \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 271.2000 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 280.8000 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.7600 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 296.6400 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 303.1200 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 310.2000 366.4800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 226.4400 352.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 245.7600 352.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(49 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 341.1600 m
  319.8000 341.1600 L
  319.8000 326.5200 L
  165.3600 326.5200 L
  165.3600 341.1600 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 326.5200 m
  165.3600 341.1600 L
  319.8000 341.1600 L
  319.8000 326.5200 L
  165.3600 326.5200 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 184.4400 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.8800 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(56 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.9600 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.9200 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.3600 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(54 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 265.4400 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 275.4000 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 281.2800 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 287.6400 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 294.1200 330.3600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 312.7200 m
  319.8000 312.7200 L
  319.8000 265.8000 L
  165.3600 265.8000 L
  165.3600 312.7200 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 265.8000 m
  165.3600 312.7200 L
  319.8000 312.7200 L
  319.8000 265.8000 L
  165.3600 265.8000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 177.2400 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(newPhi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.5200 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 228.4800 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(phi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 247.2000 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 251.1600 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.6400 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(, \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 264.0000 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(newbin\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 300.8400 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 304.6800 299.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(;\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.4400 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.2000 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.6800 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.1600 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 209.8800 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.8400 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(phi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.5600 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 242.4000 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 248.2800 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 251.4000 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.8800 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 261.1200 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(,\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 264.3600 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 283.6800 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(56\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 296.6400 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 300.4800 285.8400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(;\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.4400 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.2000 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.6800 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.1600 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 209.8800 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.8400 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(phi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.5600 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 242.4000 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 248.2800 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 251.4000 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.8800 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(]\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 261.1200 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(, \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 267.6000 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 286.9200 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(41\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 299.7600 271.9200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  178.8000 244.8000 m
  242.6400 234.7200 L
  306.3600 244.8000 L
  242.6400 254.8800 L
  178.8000 244.8000 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  178.8000 244.8000 m
  242.6400 234.7200 L
  306.3600 244.8000 L
  242.6400 254.8800 L
  178.8000 244.8000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 207.1200 241.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(newPhi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 248.4000 241.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(== \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 265.2000 241.3200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(32\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 227.5200 m
  319.8000 227.5200 L
  319.8000 212.6400 L
  165.3600 212.6400 L
  165.3600 227.5200 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 212.6400 m
  165.3600 227.5200 L
  319.8000 227.5200 L
  319.8000 212.6400 L
  165.3600 212.6400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 188.6400 216.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(newbin \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 228.7200 216.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 238.6800 216.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(newPhi \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 279.9600 216.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.0400 216.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 205.9200 m
  319.8000 205.9200 L
  319.8000 191.0400 L
  165.3600 191.0400 L
  165.3600 205.9200 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 191.0400 m
  165.3600 205.9200 L
  319.8000 205.9200 L
  319.8000 191.0400 L
  165.3600 191.0400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 168.4800 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(sum\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 190.4400 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.1600 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 210.1200 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(newPhi\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 248.1600 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(*\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.7200 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 259.2000 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 264.9600 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 271.4400 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 277.9200 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3779\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 303.7200 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(b\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 310.2000 195.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 185.1600 m
  319.8000 185.1600 L
  319.8000 170.2800 L
  165.3600 170.2800 L
  165.3600 185.1600 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 170.2800 m
  165.3600 185.1600 L
  319.8000 185.1600 L
  319.8000 170.2800 L
  165.3600 170.2800 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 213.7200 174.2400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(pl\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.7200 174.2400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.2000 174.2400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(start \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 255.0000 174.2400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 264.9600 174.2400 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 156.3600 m
  319.8000 156.3600 L
  319.8000 141.7200 L
  165.3600 141.7200 L
  165.3600 156.3600 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 141.7200 m
  165.3600 156.3600 L
  319.8000 156.3600 L
  319.8000 141.7200 L
  165.3600 141.7200 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 170.4000 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 189.6000 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(26 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 205.8000 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.8800 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(sum\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.7200 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.2000 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.9200 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.4000 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 263.1600 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 269.6400 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 276.1200 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3779\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 301.9200 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(b\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 308.4000 145.5600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 132.8400 m
  319.8000 132.8400 L
  319.8000 87.6000 L
  165.3600 87.6000 L
  165.3600 132.8400 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 87.6000 m
  165.3600 132.8400 L
  319.8000 132.8400 L
  319.8000 87.6000 L
  165.3600 87.6000 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 167.6400 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 186.9600 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(39 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.0400 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \( \(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 224.0400 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.8000 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 236.2800 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 242.7600 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.4800 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(<< \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 269.1600 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 275.6400 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) + \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 292.8000 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 298.5600 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 305.0400 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 312.1200 120.7200 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 169.0800 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 172.9200 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.2400 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(26 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.4400 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.4000 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 224.2800 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 230.6400 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.1200 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.4800 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.6800 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 259.3200 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 267.0000 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 272.8800 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 279.2400 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 285.7200 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 292.2000 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(>>\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 305.7600 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 312.2400 106.8000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 227.5200 92.8800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 237.6000 92.8800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.3600 92.8800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.8400 92.8800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 73.2000 m
  319.8000 73.2000 L
  319.8000 58.4400 L
  165.3600 58.4400 L
  165.3600 73.2000 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 58.4400 m
  165.3600 73.2000 L
  319.8000 73.2000 L
  319.8000 58.4400 L
  165.3600 58.4400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 184.4400 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 203.8800 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(41 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.9600 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 229.9200 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.3600 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(39 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 265.4400 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 275.4000 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 281.2800 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 287.6400 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 294.1200 62.4000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  165.3600 51.3600 m
  319.8000 51.3600 L
  319.8000 23.0400 L
  165.3600 23.0400 L
  165.3600 51.3600 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.3600 23.0400 m
  165.3600 51.3600 L
  319.8000 51.3600 L
  319.8000 23.0400 L
  165.3600 23.0400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 172.8000 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.1200 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(49 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 208.3200 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(= \(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 222.1200 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 241.4400 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(41 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 257.6400 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(+ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 267.6000 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 286.9200 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(26\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 299.7600 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 306.9600 40.6800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(^ \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.7200 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.4000 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tmp\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.8400 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(41 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 236.0400 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(>> \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 252.7200 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 259.2000 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\) + \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 276.3600 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(k\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 282.1200 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 288.4800 26.7600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  41.1600 220.6800 m
  132.9600 220.6800 L
  132.9600 192.3600 L
  41.1600 192.3600 L
  41.1600 220.6800 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  41.1600 192.3600 m
  41.1600 220.6800 L
  132.9600 220.6800 L
  132.9600 192.3600 L
  41.1600 192.3600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 58.4400 210.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 64.2000 210.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 67.5600 210.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 73.9200 210.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(] = \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 90.4800 210.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 96.2400 210.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 102.7200 210.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 109.0800 210.0000 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 58.4400 196.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 64.2000 196.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
([\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 67.5600 196.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 73.9200 196.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(] = \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 90.4800 196.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 96.2400 196.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 102.7200 196.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 109.0800 196.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  41.1600 183.9600 m
  132.9600 183.9600 L
  132.9600 167.1600 L
  41.1600 167.1600 L
  41.1600 183.9600 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  41.1600 167.1600 m
  41.1600 183.9600 L
  132.9600 183.9600 L
  132.9600 167.1600 L
  41.1600 167.1600 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 71.8800 172.0800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(return\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.0000 w
  0.000 0.000 0.000 1.000 K
1 J
1 j
  242.6400 344.1600 m
  242.6400 348.8400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 344.8800 m
  238.9200 344.8800 L
  242.6400 341.2800 L
  246.2400 344.8800 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 315.6000 m
  242.6400 326.5200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 316.3200 m
  238.9200 316.3200 L
  242.6400 312.7200 L
  246.2400 316.3200 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 257.6400 m
  242.6400 265.8000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 258.3600 m
  238.9200 258.3600 L
  242.6400 254.8800 L
  246.2400 258.3600 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 230.4000 m
  242.6400 234.7200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 231.1200 m
  238.9200 231.1200 L
  242.6400 227.5200 L
  246.2400 231.1200 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 208.8000 m
  242.6400 212.6400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 209.5200 m
  238.9200 209.5200 L
  242.6400 205.9200 L
  246.2400 209.5200 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 188.0400 m
  242.6400 191.1600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 188.7600 m
  238.9200 188.7600 L
  242.6400 185.1600 L
  246.2400 188.7600 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 159.3600 m
  242.6400 170.2800 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 160.0800 m
  238.9200 160.0800 L
  242.6400 156.3600 L
  246.2400 160.0800 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 135.7200 m
  242.6400 141.7200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 136.4400 m
  238.9200 136.4400 L
  242.6400 132.8400 L
  246.2400 136.4400 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 76.0800 m
  242.6400 87.6000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 76.8000 m
  238.9200 76.8000 L
  242.6400 73.2000 L
  246.2400 76.8000 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.6400 54.2400 m
  242.6400 58.4400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 54.9600 m
  238.9200 54.9600 L
  242.6400 51.3600 L
  246.2400 54.9600 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  87.0000 226.9200 m
  87.0000 244.8000 L
  178.8000 244.8000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  90.6000 227.8800 m
  83.4000 227.8800 L
  87.0000 220.6800 L
  90.6000 227.8800 L
F
U
u
0.7500 w
  0.000 0.000 0.000 1.000 K
  87.0000 189.4800 m
  87.0000 192.3600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  90.1200 190.3200 m
  83.8800 190.3200 L
  87.0000 183.9600 L
  90.1200 190.3200 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  179.0400 392.6400 m
  242.7600 382.5600 L
  306.4800 392.6400 L
  242.7600 402.6000 L
  179.0400 392.6400 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  179.0400 392.6400 m
  242.7600 382.5600 L
  306.4800 392.6400 L
  242.7600 402.6000 L
  179.0400 392.6400 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 210.4800 389.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(pl\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 219.4800 389.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(_\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 225.9600 389.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(start \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 251.7600 389.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(== \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 268.5600 389.1600 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  242.6400 377.1600 m
  242.6400 380.0400 L
  242.7600 380.0400 L
  242.7600 382.5600 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 380.7600 m
  238.9200 380.7600 L
  242.6400 377.1600 L
  246.2400 380.7600 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  242.7600 405.4800 m
  242.7600 414.9600 L
  242.7600 414.9600 L
  242.7600 421.9200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  246.2400 406.2000 m
  239.1600 406.2000 L
  242.7600 402.7200 L
  246.2400 406.2000 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  236.2800 320.8800 m
  141.8400 320.8800 L
  141.8400 392.6400 L
  179.0400 392.6400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  235.4400 324.4800 m
  235.4400 317.4000 L
  242.6400 320.8800 L
  235.4400 324.4800 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  165.4800 457.2000 m
  320.0400 457.2000 L
  320.0400 442.3200 L
  165.4800 442.3200 L
  165.4800 457.2000 L
F
U
u
  0.000 0.000 0.000 1.000 k
1.0000 w
  0.000 0.000 0.000 1.000 K
  165.4800 442.3200 m
  165.4800 457.2000 L
  320.0400 457.2000 L
  320.0400 442.3200 L
  165.4800 442.3200 L
s
U
0 To
1.0000 0.0000 0.0000 1.0000 229.8000 446.2800 0 Tp
TP
/_Helvetica 11.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Input\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  242.7600 439.2000 m
  242.7600 442.3200 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  245.8800 439.8000 m
  239.6400 439.8000 L
  242.7600 436.5600 L
  245.8800 439.8000 L
F
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  235.6800 413.1600 m
  24.0000 413.1600 L
  24.0000 12.8400 L
  242.6400 12.8400 L
  242.6400 23.0400 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  234.7200 416.7600 m
  234.7200 409.5600 L
  241.9200 413.1600 L
  234.7200 416.7600 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 178.0800 398.0400 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(N\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 211.9200 378.3600 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(Y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 177.6000 249.4800 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Y\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 210.9600 230.2800 0 Tp
TP
/_Helvetica 7.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(N\r) Tx
TO
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
u
  3.6000 3.4800 m
  331.3200 3.4800 L
  331.3200 463.3200 L
  3.6000 463.3200 L
  3.6000 3.4800 L
n
  167.4600 233.4000 m
F
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1226 2311 a Fx(\(A\))1331 b(\(B\))523 2481
y Fv(Fig)o(.)12 b(3.)i Fx(\(A\))h(Initial)f(CCDFG)g(of)g(TEA)g
(encryption)j(function.)e(\(B\))f(T)m(ransformed)i(CCDFG)e(after)g
(pipelining.)523 2573 y(The)i(shaded)g(re)o(gions)h(represent)f
(scheduling)h(steps,)e(and)h(white)g(box)o(es)g(represent)h
(microsteps.)e(F)o(or)g(bre)n(vity)-5 b(,)523 2664 y(only)29
b(the)g(control)g(\003o)n(w)g(is)f(sho)n(wn;)i(data)f(\003o)n(w)f(is)h
(omitted.)f(Although)i(the)f(underlying)h(operations)g(are)523
2755 y(assumed)20 b(to)f(be)g(in)g(SSA)f(form,)g(the)h(diagrams)h
(aggre)o(gate)f(se)n(v)o(eral)h(single)f(assignments)h(for)f
(simplicity)-5 b(.)523 3122 y FA(blocks.)17 b(Data)i(dependenc)o(y)c
(is)k(gi)n(v)o(en)e(by)h(\223read)g(after)g(write\224)g(paradigm:)f
Ff(op)2779 3134 y Fm(j)2832 3122 y FA(is)j(data)e(dependent)523
3222 y(on)e Ff(op)705 3234 y Fm(i)749 3222 y FA(if)g
Ff(op)898 3234 y Fm(j)949 3222 y FA(occurs)g(after)f
Ff(op)1433 3234 y Fm(i)1477 3222 y FA(in)i(some)e(control)g(\003o)n(w)h
(path)g(and)f(computes)g(an)h(e)o(xpression)e(o)o(v)o(er)523
3321 y(some)21 b(state)h(v)n(ariable)d Ff(v)25 b FA(that)c(is)h
(assigned)f(most)g(recently)f(by)g Ff(op)2434 3333 y
Fm(i)2483 3321 y FA(in)h(the)g(path.)g(The)f(language)g(is)523
3421 y(assumed)g(to)g(disallo)n(w)g(circular)f(data)h(dependencies.)523
3590 y Fr(De\002nition)g(1)41 b(\(Contr)o(ol)25 b(and)h(Data)g(Flo)o(w)
g(Graphs\).)f Ft(Let)i Fe(ops)41 b Fd(,)34 b Fg(f)p Ff(op)2723
3602 y Fz(1)2760 3590 y Ff(;)14 b(:)g(:)g(:)f(;)h(op)3026
3602 y Fm(n)3071 3590 y Fg(g)27 b Ft(be)f(a)g(set)523
3690 y(of)f(oper)o(ations)e(o)o(ver)i(some)f(set)i Ff(V)44
b Ft(of)24 b(\(state)h(and)f(input\))f(variables,)h(and)g
Fe(bb)30 b Ft(be)25 b(a)g(set)g(of)g(basic)523 3789 y(bloc)n(ks)f(eac)o
(h)e(consisting)h(of)h(a)g(sequence)e(of)i(oper)o(ations.)e(A)i
FA(data)f(\003o)n(w)h(graph)e Ff(G)2954 3801 y Fm(D)3039
3789 y Ft(o)o(ver)i(ops)g(is)523 3889 y(a)g(dir)m(ected)f(acyclic)g(gr)
o(aph)g(with)h(verte)n(x)g(set)h(ops.)e(A)h FA(control)f(\003o)n(w)g
(graph)g Ff(G)2815 3901 y Fm(C)2895 3889 y Ft(is)i(a)f(gr)o(aph)e(with)
523 3989 y(verte)n(x)f(set)g(bb)f(and)f(eac)o(h)g(edg)o(e)h(labeled)f
(with)i(an)f(assertion)g(o)o(ver)g Ff(V)f Ft(.)523 4158
y FA(An)e(edge)f(in)h Ff(G)963 4170 y Fm(D)1041 4158
y FA(from)e Ff(op)1301 4170 y Fm(i)1346 4158 y FA(to)i
Ff(op)1510 4170 y Fm(j)1563 4158 y FA(represents)e(data)i(dependenc)o
(y)-5 b(,)13 b(and)j(an)h(edge)f(in)h Ff(G)3054 4170
y Fm(C)3127 4158 y FA(from)f Ff(bb)3378 4170 y Fm(i)523
4257 y FA(to)i Ff(bb)678 4269 y Fm(j)730 4257 y FA(indicates)g(that)g
Ff(bb)1259 4269 y Fm(i)1304 4257 y FA(is)g(a)h(direct)e(predecessor)f
(of)h Ff(bb)2209 4269 y Fm(j)2262 4257 y FA(in)h(the)g(control)e(\003o)
n(w)i(of.)f(An)h(assertion)523 4357 y(on)i(an)g(edge)f(holds)h(whene)n
(v)o(er)e(program)g(control)h(mak)o(es)h(the)g(corresponding)d
(transition.)523 4526 y Fr(De\002nition)j(2)41 b(\(CDFG\).)28
b Ft(Let)i Fe(ops)48 b Fd(,)39 b Fg(f)p Ff(op)1848 4538
y Fz(1)1885 4526 y Ff(;)14 b(:)g(:)g(:)f(;)h(op)2151
4538 y Fm(m)2214 4526 y Fg(g)30 b Ft(be)f(a)g(set)h(of)f(oper)o(ations)
f(o)o(ver)h(a)h(set)523 4625 y(of)d(variables)g Ff(V)18
b Ft(,)28 b Fe(bb)41 b Fd(,)35 b Fg(f)p Ff(bb)1398 4637
y Fz(1)1434 4625 y Ff(;)14 b(:)g(:)g(:)f(;)h(bb)1690
4637 y Fm(n)1735 4625 y Fg(g)27 b Ft(be)g(a)g(set)g(of)g(basic)g(bloc)n
(ks)g(o)o(ver)g Fe(ops)8 b Ft(,)27 b Ff(G)3044 4637 y
Fm(D)3132 4625 y Ft(and)f Ff(G)3349 4637 y Fm(C)523 4725
y Ft(ar)m(e)h(data)g(and)f(contr)l(ol)h(\003ow)g(gr)o(aphs)f(o)o(ver)h
Fe(ops)35 b Ft(and)27 b Fe(bb)33 b Ft(r)m(espectively)-5
b(.)27 b(A)h FA(CDFG)g Ft(is)g(the)f(tuple)523 4825 y
Ff(G)588 4837 y Fm(C)t(D)726 4825 y Fd(,)e Fg(h)p Ff(G)913
4837 y Fm(D)974 4825 y Ff(;)14 b(G)1076 4837 y Fm(C)1132
4825 y Ff(;)g(H)7 b Fg(i)p Ft(,)22 b(wher)m(e)g Ff(H)29
b Ft(is)22 b(a)g(mapping)e Ff(H)32 b Fc(:)26 b Fe(ops)34
b Fg(!)25 b Fe(bb)j Ft(suc)o(h)21 b(that)h Ff(H)7 b Fc(\()p
Ff(op)3123 4837 y Fm(i)3150 4825 y Fc(\))26 b(=)g Ff(bb)3371
4837 y Fm(j)523 4924 y Ft(if)o(f)21 b Ff(op)694 4936
y Fm(i)742 4924 y Ft(occur)o(s)f(in)h Ff(bb)1141 4936
y Fm(j)1175 4924 y Ft(.)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 523 448 a FA(The)24 b(e)o(x)o(ecution)e(order)h
(of)h(operations)e(in)j(a)f(CDFG)h(is)g(irrele)n(v)n(ant)e(as)i(long)e
(as)i(control)e(and)h(data)523 548 y(dependencies)18
b(are)i(respected.)f(The)h(de\002nition)f(of)h Ft(micr)l(osteps)h
FA(mak)o(es)f(this)g(notion)f(e)o(xplicit.)523 721 y
Fr(De\002nition)h(3)41 b(\(Micr)o(ostep)21 b(Ordering)g(and)h(P)o
(artition\).)d Ft(Let)j Ff(G)2475 733 y Fm(C)t(D)2612
721 y Fd(,)j Fg(h)p Ff(G)2799 733 y Fm(C)2855 721 y Ff(;)14
b(G)2957 733 y Fm(D)3018 721 y Ff(;)g(H)7 b Fg(i)p Ft(,)21
b(wher)m(e)523 820 y(the)33 b(set)h(of)f(vertices)h(of)f
Ff(G)1337 832 y Fm(C)1427 820 y Ft(is)h Fe(bb)52 b Fd(,)47
b Fg(f)p Ff(bb)1870 832 y Fz(1)1906 820 y Ff(;)14 b(:)g(:)g(:)g(;)g(bb)
2163 832 y Fm(l)2187 820 y Fg(g)p Ft(,)33 b(and)f(the)h(set)h(of)f
(vertices)h(in)f Ff(G)3255 832 y Fm(D)3350 820 y Ft(is)523
920 y Fe(ops)52 b Fd(,)45 b Fg(f)p Ff(op)927 932 y Fz(1)963
920 y Ff(;)14 b(:)g(:)g(:)g(;)g(op)1230 932 y Fm(n)1275
920 y Fg(g)p Ft(.)32 b(F)-9 b(or)32 b(eac)o(h)f Ff(bb)1778
932 y Fm(k)1863 920 y Fg(2)45 b Fe(bb)6 b Ft(,)32 b(a)g
FA(microstep)f(ordering)e Ft(is)k(a)f(r)m(elation)g Fg(\036)3365
932 y Fm(k)523 1019 y Ft(o)o(ver)25 b Fe(ops)8 b Fc(\()p
Ff(bb)925 1031 y Fm(k)965 1019 y Fc(\))33 b Fd(,)e Fg(f)p
Ff(op)1250 1031 y Fm(i)1310 1019 y Fc(:)h Ff(H)7 b Fc(\()p
Ff(op)1555 1031 y Fm(i)1583 1019 y Fc(\))32 b(=)g Ff(bb)1816
1031 y Fm(k)1856 1019 y Fg(g)25 b Ft(suc)o(h)f(that)h
Fe(op)2338 1031 y Fb(a)2415 1019 y Fg(\036)2480 1031
y Fm(k)2553 1019 y Ff(op)2635 1031 y Fm(b)2694 1019 y
Ft(if)h(and)e(only)h(if)g(ther)m(e)h(is)523 1119 y(a)21
b(path)g(fr)l(om)h Ff(op)1013 1131 y Fm(a)1075 1119 y
Ft(to)f Ff(op)1243 1131 y Fm(b)1298 1119 y Ft(in)h(the)f(subgr)o(aph)e
Ff(G)1907 1131 y Fm(D)r(;k)2046 1119 y Ft(of)j Ff(G)2198
1131 y Fm(D)2280 1119 y Ft(induced)e(by)h Ff(ops)p Fc(\()p
Ff(bb)2890 1131 y Fm(k)2930 1119 y Fc(\))p Ft(.)h(A)f
FA(microstep)523 1219 y(partition)26 b(of)h Ff(bb)1001
1231 y Fm(k)1069 1219 y Ft(under)g Fg(\036)1356 1231
y Fm(k)1424 1219 y Ft(is)i(a)e(partition)g Ff(M)1977
1231 y Fm(k)2045 1219 y Ft(of)g Fe(ops)8 b Fc(\()p Ff(bb)2367
1231 y Fm(k)2408 1219 y Fc(\))28 b Ft(satisfying)f(the)g(following)g
(two)523 1318 y(conditions.)20 b(\(1\))i(F)-9 b(or)22
b(eac)o(h)f Ff(p)26 b Fg(2)h Ff(M)1579 1330 y Fm(k)1620
1318 y Ft(,)22 b(if)h Ff(op)1814 1330 y Fm(a)1854 1318
y Ff(;)14 b(op)1973 1330 y Fm(b)2033 1318 y Fg(2)26 b
Ff(p)d Ft(then)e Ff(op)2426 1330 y Fm(a)2493 1318 y Fg(6\036)26
b Ff(op)2666 1330 y Fm(b)2722 1318 y Ft(and)21 b Ff(op)2951
1330 y Fm(b)3011 1318 y Fg(6\036)3076 1330 y Fm(k)3143
1318 y Ff(op)3225 1330 y Fm(a)3265 1318 y Ft(.)h(\(2\))523
1418 y(If)i Ff(p;)14 b(q)33 b Fg(2)d Ff(M)913 1430 y
Fm(k)978 1418 y Ft(with)25 b Ff(p)k Fg(6)p Fc(=)h Ff(q)s
Ft(,)24 b Ff(op)1479 1430 y Fm(a)1549 1418 y Fg(2)31
b Ff(p)p Ft(,)24 b Ff(op)1804 1430 y Fm(b)1867 1418 y
Fg(2)30 b Ff(q)s Ft(,)24 b(and)f Ff(op)2268 1430 y Fm(a)2339
1418 y Fg(\036)2404 1430 y Fm(k)2474 1418 y Ff(op)2556
1430 y Fm(b)2589 1418 y Ft(,)i(then)e(for)h(eac)o(h)f
Ff(op)3185 1430 y Fm(a)3221 1414 y Fa(0)3278 1418 y Fg(2)30
b Ff(p)523 1518 y Ft(and)22 b Ff(op)753 1530 y Fm(b)782
1513 y Fa(0)837 1518 y Fg(2)29 b Ff(q)e(op)1067 1530
y Fm(b)1096 1513 y Fa(0)1151 1518 y Fg(6\036)1216 1530
y Fm(k)1285 1518 y Ff(op)1367 1530 y Fm(a)1403 1513 y
Fa(0)1429 1518 y Ft(.)d(A)f FA(microstep)f(partition)g(of)h
Ff(G)2362 1530 y Fm(C)t(D)2498 1518 y Ft(is)g(a)h(set)f
Ff(M)33 b Ft(containing)20 b(eac)o(h)523 1617 y(micr)l(ostep)g
(partition)g Ff(M)1260 1629 y Fm(k)1300 1617 y Ft(.)523
1790 y FA(If)k Ff(op)685 1802 y Fm(a)751 1790 y FA(and)g
Ff(op)978 1802 y Fm(b)1036 1790 y FA(are)g(in)h(the)g(same)f
(partition,)g(their)g(order)f(of)h(e)o(x)o(ecution)f(does)h(not)g
(matter;)g(if)h Ff(p)523 1889 y FA(and)g Ff(q)k FA(are)c(tw)o(o)h
(microsteps)e(where)h Ff(p)33 b Fg(\036)1766 1901 y Fm(k)1839
1889 y Ff(q)s FA(,)25 b(the)h(operations)d(in)j Ff(p)g
FA(must)f(be)g(e)o(x)o(ecuted)f(before)523 1989 y Ff(q)30
b FA(to)c(respect)g(the)g(data)g(dependencies.)e(Note)i(that)h(we)f
(treat)h(dif)n(ferent)d(instances)i(of)g(the)g(same)523
2089 y(operation)16 b(as)j(dif)n(ferent)e(\(with)h(same)g(semantics\);)
g(this)h(permits)f(stipulation)f(of)h Ff(H)26 b FA(as)19
b(a)f(function)523 2188 y(instead)23 b(of)g(a)g(relation,)f(and)h
(simpli\002es)h(the)f(formalization.)e(In)h(Fig.)i(3,)f(each)f(white)i
(box)e(corre-)523 2288 y(sponds)h(to)g(a)h(microstep)f(partition.)f
(Since)i Ff(G)1879 2300 y Fm(D)1963 2288 y FA(is)h(ac)o(yclic,)d
Fg(\036)2386 2300 y Fm(k)2451 2288 y FA(is)i(an)g(irre\003e)o(xi)n(v)o
(e)e(partial)h(order)523 2387 y(on)k Fe(ops)7 b Fc(\()p
Ff(bb)863 2399 y Fm(k)904 2387 y Fc(\))27 b FA(and)g(the)g(notion)e(of)
i(microstep)f(partition)g(is)i(well-de\002ned.)d(Gi)n(v)o(en)h(a)h
(microstep)523 2487 y(partition)i Ff(M)51 b Fd(,)41 b
Fg(f)p Ff(m)1188 2499 y Fz(0)1225 2487 y Ff(;)14 b(m)1335
2499 y Fz(1)1372 2487 y Ff(;)g(:)g(:)g(:)p Fg(g)30 b
FA(of)g Ff(G)1743 2499 y Fm(C)t(D)1886 2487 y FA(each)g
Ff(m)2142 2499 y Fm(i)2201 2487 y FA(is)h(called)f(a)h
Ft(micr)l(ostep)g FA(of)f Ff(G)3104 2499 y Fm(C)t(D)3216
2487 y FA(.)h(It)g(is)523 2587 y(con)m(v)o(enient)18
b(to)i(vie)n(w)g Fg(\036)1234 2599 y Fm(k)1295 2587 y
FA(as)h(a)g(partial)f(order)e(o)o(v)o(er)h(the)h(microsteps)g(of)g
Ff(bb)2702 2599 y Fm(k)2742 2587 y FA(.)648 2686 y(CCDFGs)26
b(are)f(formalized)e(by)i(augmenting)d(a)k(CDFG)g(with)f(a)g(schedule.)
f(Consider)g(a)i(mi-)523 2786 y(crostep)d(partition)g
Ff(M)33 b FA(of)23 b Ff(G)1365 2798 y Fm(C)t(D)1478 2786
y FA(.)h(A)g Ft(sc)o(hedule)f Ff(T)35 b FA(of)23 b Ff(M)33
b FA(is)25 b(a)f(partition)f(or)h Ft(gr)l(ouping)e FA(of)h
Ff(M)9 b FA(;)24 b(for)523 2886 y Ff(m)596 2898 y Fz(1)633
2886 y Ff(;)14 b(m)743 2898 y Fz(2)804 2886 y Fg(2)24
b Ff(M)9 b FA(,)20 b(if)h Ff(m)1159 2898 y Fz(1)1217
2886 y FA(and)f Ff(m)1431 2898 y Fz(2)1489 2886 y FA(are)g(in)h(the)f
(same)h(group)e(in)h Ff(T)12 b FA(,)20 b(we)h(say)g(that)f(the)o(y)g
(belong)f(to)h(the)523 2985 y(same)25 b(scheduling)e(step.)i
(Informally)-5 b(,)22 b(if)j(tw)o(o)h(microsteps)e(in)h
Ff(M)34 b FA(are)25 b(in)g(the)g(same)g(group)e(in)i
Ff(T)523 3085 y FA(then)20 b(the)o(y)f(are)h(e)o(x)o(ecuted)f(within)h
(the)g(same)g(clock)g(c)o(ycle.)523 3257 y Fr(De\002nition)g(4)41
b(\(CCDFG\).)29 b Ft(A)g FA(CCDFG)i Ft(is)g(a)e(tuple)g
Ff(G)41 b Fd(,)f Fg(h)p Ff(G)2427 3269 y Fm(C)t(D)2539
3257 y Ff(;)14 b(M)t(;)g(T)e Fg(i)p Ft(,)29 b(wher)m(e)h
Ff(G)3136 3269 y Fm(C)t(D)3278 3257 y Ft(is)g(a)523 3357
y(CDFG,)21 b Ff(M)29 b Ft(is)21 b(a)f(micr)l(ostep)h(partition)e(of)h
Ff(G)1845 3369 y Fm(C)t(D)1958 3357 y Ft(,)g(and)f Ff(T)32
b Ft(is)21 b(a)g(sc)o(hedule)e(of)h Ff(M)9 b Ft(.)523
3530 y FA(W)-7 b(e)24 b(formalize)e(CCDFG)i(e)o(x)o(ecutions)e(through)
f(a)i(state-based)g(semantics.)f(A)i Ft(CCDFG)g(state)g
FA(is)523 3629 y(a)d(v)n(aluation)f(of)h(state)g(v)n(ariables,)f(and)h
(a)g Ft(CCDFG)h(input)e FA(is)i(a)g(v)n(aluation)d(of)i(input)f(v)n
(ariables.)g(W)-7 b(e)523 3729 y(also)23 b(assume)g(a)g(well-de\002ned)
e Ft(initial)i(state)p FA(.)g(Gi)n(v)o(en)f(a)h(sequence)f
Fg(I)30 b FA(of)22 b(inputs,)g(an)h Ft(e)n(xecution)f
FA(of)523 3828 y(a)k(CCDFG)h Ff(G)34 b Fc(=)f Fg(h)p
Ff(G)1183 3840 y Fm(C)t(D)1295 3828 y Ff(;)14 b(M)t(;)g(T)e
Fg(i)26 b FA(is)g(a)g(sequence)f(of)h(CCDFG)h(states)f(that)g
(corresponds)e(to)i(an)523 3928 y(e)n(v)n(aluation)19
b(of)g(the)i(microsteps)e(in)h Ff(M)30 b FA(respecting)19
b Ff(T)12 b FA(.)648 4028 y(Finally)-5 b(,)26 b(we)h(consider)f
Ft(outputs)g FA(and)h Ft(observation)p FA(.)e(An)i Ft(output)f
FA(of)h(a)g(CCDFG)i Ff(G)f FA(is)g(some)523 4127 y(computable)21
b(function)g Ff(f)32 b FA(of)23 b(\(a)g(subset)g(of\))g(state)g(v)n
(ariables)g(of)f Ff(G)p FA(;)i(informally)-5 b(,)21 b
Ff(f)32 b FA(corresponds)523 4227 y(to)26 b(some)g(output)f(signal)g
(in)h(the)g(circuit)g(synthesized)f(from)g Ff(G)p FA(.)h(T)-7
b(o)26 b(formalize)f(this)h(in)g(A)m(CL2')-5 b(s)523
4327 y(\002rst)24 b(order)f(logic,)f(the)i(output)e(is)j(restricted)e
(to)g(a)h(Boolean)f(e)o(xpression)f(of)h(the)h(state)g(v)n(ariables;)
523 4426 y(the)j(domain)g(of)g(each)g(state)h(v)n(ariable)e(itself)i
(is)h(unrestricted,)c(which)i(enables)g(us)h(to)g(represent)523
4526 y(programs)e(such)i(as)h(the)f(Greatest)g(Common)f(Di)n(vider)g
(\(GCD\))h(algorithm)e(that)i(do)g(not)g(return)523 4625
y(Boolean)21 b(v)n(alues.)f(F)o(or)h(each)g(state)h Ff(s)g
FA(of)f Ff(G)p FA(,)h(the)g Ft(observation)e FA(corresponding)e(to)j
(an)g(output)f Ff(f)31 b FA(at)523 4725 y(state)21 b
Ff(s)g FA(is)h(the)f(v)n(aluation)e(of)h Ff(f)30 b FA(under)19
b Ff(s)p FA(.)i(Gi)n(v)o(en)e(a)i(set)h Ff(F)33 b FA(of)20
b(output)g(functions,)e(an)o(y)i(sequence)g Fg(E)523
4825 y FA(of)k(states)i(of)e Ff(G)h FA(induces)f(a)g(sequence)g(of)g
(observ)n(ations)e Fg(O)r FA(;)k(we)f(refer)e(to)i Fg(O)i
FA(as)e(the)g Ft(observable)523 4924 y(behavior)19 b
FA(of)h Fg(E)28 b FA(under)19 b Ff(F)12 b FA(.)p eop
end
%%Page: 8 8
TeXDict begin 8 7 bop 523 448 a Fu(3)99 b(Certi\002ed)27
b(Compilation)523 631 y FA(Certifying)14 b(a)i(transformation)d
Fg(T)37 b FA(requires)15 b(sho)n(wing)f(that)i(if)f(the)h(application)e
(of)h Fg(T)37 b FA(on)15 b(a)h(CCDFG)523 731 y Ff(G)33
b FA(generates)e(a)i(ne)n(w)f(CCDFG)i Ff(G)1581 701 y
Fo(0)1604 731 y FA(,)f(then)e(there)h(is)h(pro)o(v)n(able)d
(correspondence)f(between)i(the)523 830 y(e)o(x)o(ecutions)19
b(of)h Ff(G)i FA(and)e Ff(G)1280 800 y Fo(0)1303 830
y FA(.)h(The)f(certi\002cation)g(process)g(crucially)g(depends)f(on)h
(a)h(formal)f(notion)523 930 y(of)32 b(correspondence)d(to)k(relate)g
(the)f(e)o(x)o(ecutions)f(of)h Ff(G)i FA(and)e Ff(G)2434
900 y Fo(0)2457 930 y FA(.)h(Note)g(that)g(the)f(notion)f(must)523
1030 y(comprehend)17 b(dif)n(ferences)h(between)h(e)o(x)o(ecution)f
(order)h(of)h(operations)e(as)j(long)e(as)i(the)f(sequence)523
1129 y(of)27 b(observ)n(ations)f(is)j(unaf)n(fected.)c(The)i(notion)g
(we)h(use)g(is)g(loosely)g(based)f(on)g Ft(stuttering)h(tr)o(ace)523
1229 y(containment)16 b FA([14,)d(15].)k(Roughly)-5 b(,)16
b(a)j(CCDFG)g Ff(G)1984 1199 y Fo(0)2027 1229 y Ft(r)m(e\002nes)f
Ff(G)h FA(if)g(for)e(each)h(e)o(x)o(ecution)f(of)h Ff(G)3197
1199 y Fo(0)3239 1229 y FA(there)523 1328 y(is)26 b(an)f(e)o(x)o
(ecution)e(of)i Ff(G)h FA(that)f(produces)f(the)h(same)g(observ)n(able)
f(beha)n(vior)f(up)i(to)g(stuttering.)f(W)-7 b(e)523
1428 y(formalize)19 b(this)i(notion)e(belo)n(w)-5 b(.)523
1582 y Fr(De\002nition)20 b(5)41 b(\(Compr)o(essed)18
b(Execution\).)e Ft(Let)j Fg(E)30 b Fd(,)23 b Ff(s)2207
1594 y Fz(0)2244 1582 y Ff(;)14 b(s)2320 1594 y Fz(1)2357
1582 y Ff(;)g(:)g(:)g(:)k Ft(be)f(an)g(e)n(xecution)g(of)h(CCDFG)523
1681 y Ff(G)30 b Ft(and)d Ff(F)41 b Ft(be)29 b(a)g(set)g(of)g(output)e
(functions)h(o)o(ver)h Ff(G)p Ft(.)g(The)g FA(compression)e
Ft(of)h Fg(E)37 b Ft(under)28 b Ff(F)41 b Ft(is)29 b(the)523
1781 y(subsequence)24 b(of)i Fg(E)33 b Ft(obtained)24
b(by)h(r)m(emo)o(ving)g(eac)o(h)g Ff(s)2115 1793 y Fm(i)2169
1781 y Ft(suc)o(h)g(that)g Ff(f)9 b Fc(\()p Ff(s)2622
1793 y Fm(i)2649 1781 y Fc(\))34 b(=)e Ff(f)9 b Fc(\()p
Ff(s)2933 1793 y Fm(i)p Fz(+1)3045 1781 y Fc(\))26 b
Ft(for)g(e)o(very)523 1881 y Ff(f)32 b Fg(2)23 b Ff(F)12
b Ft(.)523 2034 y Fr(De\002nition)20 b(6)41 b(\(T)-6
b(race)31 b(Equi)o(v)o(alence\).)f Ft(Let)h Ff(G)h Ft(and)e
Ff(G)2204 2004 y Fo(0)2258 2034 y Ft(be)h(two)g(CCDFGs)h(on)e(the)h
(same)g(set)523 2134 y(of)26 b(state)f(and)g(input)g(variables,)f
Fg(E)34 b Ft(and)24 b Fg(E)1778 2104 y Fo(0)1828 2134
y Ft(be)h(e)n(xecutions)g(of)g Ff(G)i Ft(and)d Ff(G)2704
2104 y Fo(0)2754 2134 y Ft(r)m(espectively)-5 b(,)25
b(and)g Ff(F)523 2234 y Ft(be)i(a)g(set)h(of)f(output)f(functions.)g(W)
-8 b(e)28 b(say)f(that)g Fg(E)34 b Ft(is)28 b FA(trace)f(equi)n(v)n
(alent)f Ft(to)h Fg(E)2787 2204 y Fo(0)2838 2234 y Ft(if)h(the)f
(observable)523 2333 y(behavior)17 b(of)h(the)h(compr)m(ession)e(of)i
Fg(E)26 b Ft(under)17 b Ff(F)31 b Ft(is)19 b(the)g(same)f(as)h(the)f
(observable)f(behavior)g(of)h(the)523 2433 y(compr)m(ession)h(of)i
Fg(E)1097 2403 y Fo(0)1141 2433 y Ft(under)e Ff(F)12
b Ft(.)523 2587 y Fr(De\002nition)20 b(7)41 b(\(CCDFG)26
b(Re\002nement\).)f Ft(W)-8 b(e)27 b(say)f(that)f(a)h(CCDFG)h
Ff(G)2665 2557 y Fo(0)2715 2587 y FA(re\002nes)e Ff(G)i
Ft(if)f(for)g(eac)o(h)523 2686 y(e)n(xecution)19 b Fg(E)911
2656 y Fo(0)956 2686 y Ft(of)h Ff(G)1106 2656 y Fo(0)1150
2686 y Ft(ther)m(e)h(is)g(an)e(e)n(xecution)h Fg(E)28
b Ft(of)20 b Ff(G)h Ft(suc)o(h)f(that)g Fg(E)28 b Ft(is)21
b(tr)o(ace)f(equivalent)f(to)h Fg(E)3262 2656 y Fo(0)3285
2686 y Ft(.)523 2840 y(Remark)g(1.)41 b FA(F)o(or)17
b(the)g Fk(v)o(eri\002ed)h FA(component,)c(we)k(use)g(re\002nement)e
(instead)h(of)g(full)g(equi)n(v)n(alence)f(as)523 2940
y(a)22 b(notion)e(of)h(correspondence)e(between)h(CCDFGs,)j(to)f
(permit)f(connecting)e(the)j(same)f(ESL)h(de-)523 3039
y(scription)f(with)i(a)f(number)f(of)g(dif)n(ferent)g(concrete)g
(implementations.)f(In)i(the)g Fk(v)o(erifying)g FA(frame-)523
3139 y(w)o(ork,)27 b(we)g(will)i(use)e(a)h(stronger)e(notion)h(of)g
(equi)n(v)n(alence)e(\(and)i(indeed,)f(equi)n(v)n(alence)f(without)523
3239 y(stuttering\),)19 b(to)h(f)o(acilitate)h(sequential)e(equi)n(v)n
(alence)f(checking.)648 3392 y(In)h(addition)g(to)h(sho)n(wing)f(that)h
(a)h(transformation)c(on)j(a)h(CCDFG)g Ff(G)g FA(produces)d(a)j
(re\002nement)523 3492 y(of)g Ff(G)p FA(,)g(we)h(must)f(account)e(for)i
(the)g(possibility)f(that)h(a)h(transformation)c(may)j(be)g(applicable)
f(to)h Ff(G)523 3591 y FA(only)k(if)h Ff(G)h FA(has)f(a)g(speci\002c)g
(structural)g(characteristic;)f(furthermore)e(the)i(result)h(of)g
(application)523 3691 y(might)18 b(produce)e(a)j(CCDFG)h(with)f(a)g
(characteristic)f(to)h(f)o(acilitate)f(a)h(subsequent)e
(transformation.)523 3791 y(T)-7 b(o)21 b(mak)o(e)f(e)o(xplicit)g(the)h
(notion)e(of)h(applicability)g(of)g(a)h(transformation,)d(we)j(vie)n(w)
g(a)g(transforma-)523 3890 y(tion)i(as)i(a)f(\223guarded)d(command\224)
h Ff(\034)39 b Fd(,)29 b Fg(h)p Fe(pr)l(e)7 b Ff(;)14
b Fg(T)21 b Ff(;)14 b Fe(p)l(ost)8 b Fg(i)p FA(:)24 b
Ff(\034)34 b FA(is)25 b(applicable)d(to)i(a)g(CCDFG)h(which)523
3990 y(satis\002es)d Ft(pr)m(e)e FA(and)g(produces)e(a)j(CCDFG)g(which)
f(satis\002es)i Ft(post)q FA(.)523 4131 y Fr(De\002nition)e(8)41
b(\(T)-6 b(ransf)n(ormation)23 b(Corr)o(ectness\).)g
Ft(A)h(tr)o(ansformation)f Ff(\034)40 b Fd(,)30 b Fg(h)p
Fe(pr)l(e)6 b Ff(;)14 b Fg(T)22 b Ff(;)14 b Fe(p)l(ost)8
b Fg(i)25 b Ft(is)523 4231 y FA(correct)15 b Ft(if)h(the)g(r)m(esult)g
(of)f(applying)f Fg(T)38 b Ft(to)15 b(any)g(CCDFG)i Ff(G)f
Ft(satisfying)g Fe(pr)l(e)23 b Ft(r)m(e\002nes)15 b Ff(G)h
Ft(and)f(satis\002es)523 4330 y Fe(p)l(ost)8 b Ft(.)648
4472 y FA(The)25 b(follo)n(wing)f(theorem)g(is)i(tri)n(vial)g(by)f
(induction)f(on)h(the)g(sequence)g(of)g(transformations.)523
4571 y(Here)20 b Fc([)p Fg(T)773 4583 y Fz(0)811 4571
y Ff(;)14 b(:)g(:)g(:)f(;)h Fg(T)1040 4583 y Fm(n)1086
4571 y Fc(])20 b FA(represents)g(the)g(composition)e(of)i
Fg(T)2175 4583 y Fz(0)2213 4571 y Ff(;)14 b(:)g(:)g(:)f(;)h
Fg(T)2442 4583 y Fm(n)2487 4571 y FA(.)523 4725 y Fr(Theor)o(em)20
b(1)41 b(\(Corr)o(ectness)20 b(of)h(T)-6 b(ransf)n(ormation)20
b(Sequences\).)h Ft(Let)h Ff(\034)2690 4737 y Fz(0)2728
4725 y Ff(;)14 b(:)g(:)g(:)f(;)h(\034)2948 4737 y Fm(n)3016
4725 y Ft(be)21 b(some)g(se-)523 4825 y(quence)i(of)h(corr)m(ect)h(tr)o
(ansformations,)e(wher)m(e)h Ff(\034)1969 4837 y Fm(i)2028
4825 y Fd(,)30 b Fg(h)p Fe(pr)l(e)2273 4845 y Fm(i)2300
4825 y Ff(;)14 b Fg(T)2382 4837 y Fm(i)2410 4825 y Ff(;)g
Fe(p)l(ost)2597 4845 y Fm(i)2624 4825 y Fg(i)p Ft(,)25
b(Let)g Fe(p)l(ost)2983 4845 y Fm(i)3041 4825 y Fg(\))31
b Fe(pr)l(e)3272 4845 y Fm(i)p Fz(+1)3384 4825 y Ft(,)523
4924 y Fc(1)23 b Fg(\024)f Ff(i)h(<)g(n)p Ft(.)d(Then)g(the)g(tr)o
(ansformation)f Fg(h)p Fe(pr)l(e)1883 4945 y Fz(1)1920
4924 y Ff(;)14 b Fc([)p Fg(T)2025 4936 y Fz(0)2062 4924
y Ff(;)g Fg(T)2144 4936 y Fz(1)2182 4924 y Ff(;)g(:)g(:)g(:)f(;)h
Fg(T)2411 4936 y Fm(n)2456 4924 y Fc(])p Ff(;)g Fe(p)l(ost)2666
4945 y Fm(n)2712 4924 y Fg(i)21 b Ft(is)g(corr)m(ect.)p
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 523 448 a FA(Theorem)30 b(1)i(justi\002es)h
(decomposition)d(of)h(a)i(transformation)c(into)j(a)g(sequence)f(of)h
(primiti)n(v)o(e)523 548 y(transformations.)17 b(Note)i(that)g(the)g
(proof)f(of)h(Theorem)f(1)h(is)h(independent)d(of)i(a)g(speci\002c)h
(transfor)n(-)523 648 y(mation.)c(W)-7 b(e)19 b(thus)e(construct)f(a)i
Ft(r)m(efer)m(ence)f(\003ow)g FA(as)h(follo)n(ws.)f(\(1\))f(Identify)g
(and)h(distill)h(a)g(sequence)523 747 y Ff(\034)559 759
y Fz(0)597 747 y Ff(;)c(:)g(:)g(:)f(;)h(\034)817 759
y Fm(n)881 747 y FA(of)j(primiti)n(v)o(e)f(transformations;)f(\(2\))i
(v)o(erify)f Ff(\034)2215 759 y Fm(i)2261 747 y FA(indi)n(vidually;)f
(and)i(\(3\))g(check)g(that)g(for)523 847 y(each)j Fc(0)i
Fg(\024)h Ff(i)g(<)f(n)p FA(,)f Fe(p)l(ost)1229 867 y
Fm(i)1279 847 y Fg(\))j Fe(pr)l(e)1503 867 y Fm(i)p Fz(+1)1615
847 y FA(.)c(Theorem)f(1)h(guarantees)f(the)h(correctness)f(of)h(the)g
(\003o)n(w)-5 b(.)648 946 y(V)c(erifying)13 b(the)j(correctness)f(of)g
(indi)n(vidual)f(guarded)g(transformations)f(using)i(theorem)f(pro)o
(v-)523 1046 y(ing)29 b(might)g(in)m(v)n(olv)o(e)f(signi\002cant)h
(manual)f(ef)n(fort.)g(T)-7 b(o)30 b(ameliorate)e(this)i(cost,)g(we)g
(identify)e(and)523 1146 y(deri)n(v)o(e)20 b Ft(g)o(eneric)h(theor)m
(ems)g FA(that)g(can)g(certify)f(a)h(class)i(of)d(similar)i
(transformations.)c(As)k(a)g(simple)523 1245 y(e)o(xample,)d(consider)g
(an)o(y)h(transformation)e(that)j(re\002nes)g(the)f(schedule.)g(The)g
(follo)n(wing)f(theorem)523 1345 y(states)i(that)g(each)e(such)h
(transformation)e(is)j(correct.)523 1491 y Fr(Theor)o(em)f(2)41
b(\(Corr)o(ectness)16 b(of)g(Schedule)i(Re\002nement\).)e
Ft(Let)i Ff(G)23 b Fd(,)g Fg(h)p Ff(G)2706 1503 y Fm(C)t(D)2818
1491 y Ff(;)14 b(M)t(;)g(T)e Fg(i)17 b Ft(and)f Ff(G)3294
1461 y Fo(0)3340 1491 y Fd(,)523 1590 y Fg(h)p Ff(G)620
1602 y Fm(C)t(D)733 1590 y Ff(;)e(M)t(;)g(T)953 1560
y Fo(0)975 1590 y Fg(i)k Ft(be)g(CCDFGs)i(suc)o(h)d(that)h(for)g(any)g
(two)g(micr)l(osteps)h Ff(m)2612 1602 y Fm(i)2639 1590
y Ff(;)14 b(m)2749 1602 y Fm(j)2807 1590 y Fg(2)24 b
Ff(M)j Ft(if)19 b Ff(T)3120 1560 y Fo(0)3160 1590 y Ft(assigns)523
1690 y Ff(m)596 1702 y Fm(i)644 1690 y Ft(and)h Ff(m)863
1702 y Fm(j)918 1690 y Ft(the)g(same)h(gr)l(oup)e(then)h(so)g(does)g
Ff(T)12 b Ft(.)20 b(Then)g Ff(G)2232 1660 y Fo(0)2276
1690 y Ft(is)h(a)f(r)m(e\002nement)g(of)g Ff(G)p Ft(.)648
1836 y FA(Theorem)14 b(2)j(is)g(admittedly)e(tri)n(vial;)h(it)h(is)h
(only)d(sho)n(wn)h(here)g(for)f(illustration)h(purposes.)f(Ho)n(w-)523
1936 y(e)n(v)o(er)m(,)23 b(the)i(same)g(approach)d(can)i(v)o(erify)g
(more)f(comple)o(x)g(transformations.)f(F)o(or)i(e)o(xample,)f(con-)523
2035 y(sider)30 b(the)g(constant)f(propagation)d(and)j(pipelining)g
(transformations)e(sho)n(wn)i(in)h(Figure)f(3)h(for)523
2135 y(our)f(TEA)i(e)o(xample.)d(The)i(implementations)e(of)i(these)h
(transformations)c(in)m(v)n(olv)o(e)i(signi\002cant)523
2234 y(heuristics,)21 b(for)g(instance,)f(to)i(determine)e(whether)g
(to)h(apply)g(the)g(transformations)e(in)j(a)f(speci\002c)523
2334 y(case,)h(ho)n(w)f(man)o(y)f(iterations)h(of)g(the)h(loop)e
(should)h(be)g(pipelined,)f(etc.)i(Ho)n(we)n(v)o(er)m(,)d(from)h(the)i
(per)n(-)523 2434 y(specti)n(v)o(e)e(of)h(correctness,)f(the)h(only)f
(rele)n(v)n(ant)f(conditions)h(about)g(the)h(tw)o(o)g(transformations)d
(are:)523 2533 y(\(1\))23 b(if)g(a)h(v)n(ariable)e Ff(v)27
b FA(is)d(assigned)e(a)i(constant)e Ff(c)p FA(,)i(then)e
Ff(v)27 b FA(can)c(be)g(eliminated)f(by)h(replacing)f(each)523
2633 y(occurrence)16 b(with)j Ff(c)p FA(;)g(and)g(\(2\))f(a)h
(microstep)e Ff(m)1882 2645 y Fm(i)1929 2633 y FA(can)i(be)f(o)o(v)o
(erlapped)e(with)j(microstep)e Ff(m)3133 2645 y Fm(j)3187
2633 y FA(from)h(a)523 2733 y(subsequent)i(iteration)h(if)h(for)f(each)
g Fe(op)1669 2753 y Fm(i)1723 2733 y Fg(2)26 b Ff(m)1877
2745 y Fm(i)1927 2733 y FA(and)21 b Fe(op)2159 2753 y
Fm(j)2220 2733 y Fg(2)26 b Ff(m)2374 2745 y Fm(j)2409
2733 y FA(,)c Fe(op)2542 2753 y Fm(j)2602 2733 y Fg(6\036)k
Fe(op)2783 2753 y Fm(i)2833 2733 y FA(in)21 b Ff(G)p
FA(.)i(Since)e(these)523 2832 y(conditions)26 b(are)i(independent)d(of)
j(a)g(speci\002c)g(design)g(\()p Ft(e)o(.g)o(.)p FA(,)e(TEA\))h(to)h
(which)g(the)g(transforma-)523 2932 y(tion)22 b(is)g(applied,)f(the)h
(same)g(certi\002cation)f(can)h(be)g(used)f(to)h(justify)g(its)h
(applicability)d(for)h(di)n(v)o(erse)523 3031 y(designs.)26
b(The)g(approach)f(is)i(viable)g(because)f(we)h(emplo)o(y)e(theorem)g
(pro)o(ving)f(which)j(supports)523 3131 y(an)g(e)o(xpressi)n(v)o(e)e
(logic,)h(thereby)f(permitting)g(stipulation)h(of)g(the)h(general)f
(conditions)f(abo)o(v)o(e)g(as)523 3231 y(formal)20 b(predicates)h(in)g
(the)g(logic.)g(F)o(or)g(e)o(xample,)f(as)i(we)f(sho)n(w)g(in)h(pre)n
(vious)d(w)o(ork)i([16],)f(we)i(can)523 3330 y(mak)o(e)j(use)g(of)g
(\002rst-order)f(quanti\002cation)g(to)h(formalize)f(a)i(generic)e
(re\002nement)g(proof)f(of)i(arbi-)523 3430 y(trary)18
b(pipelines,)g(which)h(is)h(directly)e(reusable)g(for)h(v)o
(eri\002cation)e(of)i(the)g(pipeline)f(transformation)523
3530 y(in)27 b(our)e(frame)n(w)o(ork.)g(Another)g(generic)g
(transformation)f(that)j(is)g(widely)f(emplo)o(yed)f(in)i(beha)n(v-)523
3629 y(ioral)21 b(synthesis)h(is)g Ft(oper)o(ation)e(balancing)p
FA(;)f(its)k(correctness)d(depends)h(only)f(on)i(the)f(f)o(act)h(that)f
(the)523 3729 y(operations)j(in)m(v)n(olv)o(ed)g(are)i(associati)n(v)o
(e)g(and)f(commutati)n(v)o(e)f(and)h(can)h(be)g(pro)o(v)o(en)e(for)h
(CCDFGs)523 3828 y(containing)18 b(arbitrary)h(associati)n(v)o
(e-commutati)n(v)o(e)d(operations.)648 3928 y(W)-7 b(e)18
b(end)e(the)h(discussion)f(of)h(the)f Fk(v)o(eri\002ed)h
FA(frame)n(w)o(ork)e(with)i(another)e(observ)n(ation.)g(Since)h(the)523
4028 y(logic)23 b(of)h(A)m(CL2)f(is)i(e)o(x)o(ecutable,)c
Ft(pr)m(e)j FA(and)f Ft(post)i FA(can)f(be)f(ef)n(\002ciently)g(e)o(x)o
(ecuted)f(for)h(a)h(gi)n(v)o(en)e(con-)523 4127 y(crete)28
b(transformation.)c(Thus,)j(a)h(transformation)d Ff(\034)47
b Fd(,)36 b Fg(h)p Fe(pr)l(e)7 b Ff(;)14 b Fg(T)21 b
Ff(;)14 b Fe(p)l(ost)8 b Fg(i)29 b FA(can)e(be)g(applied)g
Ft(e)o(ven)523 4227 y(befor)m(e)h(veri\002cation)g FA(by)g(using)g
Ft(pr)m(e)h FA(and)f Ft(post)i FA(for)e(runtime)g(checks:)g(if)h(a)g
(CCDFG)h Ff(G)g FA(indeed)523 4327 y(satis\002es)23 b
Ft(pr)m(e)f FA(and)f(the)h(application)e(of)h Ff(\034)32
b FA(on)22 b Ff(G)g FA(results)g(in)g(a)g(CCDFG)h(satisfying)e
Ft(post)i FA(then)e(the)523 4426 y Ft(instance)15 b FA(of)h
(application)f(of)h Ff(\034)26 b FA(on)15 b Ff(G)i FA(can)f(be)g
(composed)e(with)j(other)e(compiler)g(transformations;)523
4526 y(furthermore,)j(the)k(e)o(xpense)e(of)i(the)f(runtime)g
(assertion)g(checking)f(can)h(be)h(alle)n(viated)e(by)i(gener)n(-)523
4625 y(ating)d(a)h Ft(pr)l(oof)g(obligation)d(for)j(a)g(speci\002c)f
(instance)p FA(,)g(which)g(is)h(normally)e(more)h(tractable)g(than)g(a)
523 4725 y(monolithic)h(generic)g(proof)f(of)i(the)g(correctness)g(of)f
Ff(\034)9 b FA(.)23 b(This)e(pro)o(vides)e(a)j(trade-of)n(f)d(between)h
(the)523 4825 y(computational)h(e)o(xpense)g(of)i(runtime)f(checks)g
(and)g(v)o(eri\002cation)g(of)g(indi)n(vidual)f(instances)i(with)523
4924 y(a)e(\(perhaps)d(deep\))h(one-time)g(proof)g(of)h(the)g
(correctness)f(of)h(a)h(transformation.)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 523 448 a Fu(4)99 b(Equi)o(v)o(alence)27
b(Checking)523 654 y FA(W)-7 b(e)25 b(no)n(w)d(discuss)i(ho)n(w)f(to)h
(check)e(equi)n(v)n(alence)g(between)g(a)i(CCDFG)h(and)e(its)h
(synthesized)e(cir)n(-)523 754 y(cuit.)f(The)f Fk(v)o(eri\002ed)h
FA(component)e(f)o(acilitates)i(close)g(correspondence)d(between)i(the)
h(transformed)523 853 y(CCDFG)h(and)d(the)h(synthesized)g(circuit,)f
(critical)h(to)h(the)f(scalability)g(of)g(equi)n(v)n(alence)e
(checking.)523 1109 y Fr(4.1)82 b(Cir)o(cuit)20 b(Model)523
1281 y FA(W)-7 b(e)23 b(represent)d(a)h(circuit)g(as)h(a)g(Mealy)f
(machine)f(specifying)g(the)h(updates)g(to)g(the)h(state)g(elements)523
1381 y(\(latches\))c(in)h(each)g(clock)f(c)o(ycle.)g(Our)h
(formalization)d(of)j(circuits)g(is)h(typical)e(in)h(traditional)f
(hard-)523 1480 y(w)o(are)h(v)o(eri\002cation,)f(b)n(ut)h(we)g(mak)o(e)
g(combinational)d(nodes)j(e)o(xplicit)f(to)i(f)o(acilitate)f(the)g
(correspon-)523 1580 y(dence)g(with)i(CCDFGs.)523 1743
y Fr(De\002nition)f(9)41 b(\(Cir)o(cuit\).)32 b Ft(A)g(cir)m(cuit)h(is)
h(a)e(tuple)g Ff(M)55 b Fc(=)45 b Fg(h)p Ff(I)7 b(;)14
b(N)t(;)g(F)e Fg(i)34 b Ft(wher)m(e)f Ff(I)40 b Ft(is)33
b(a)g(vector)f(of)523 1842 y(inputs;)20 b Ff(N)31 b Ft(is)22
b(a)f(pair)g Fg(h)p Ff(N)1272 1854 y Fm(c)1306 1842 y
Ff(;)14 b(N)1410 1854 y Fm(d)1448 1842 y Fg(i)22 b Ft(wher)m(e)g
Ff(N)1791 1854 y Fm(c)1846 1842 y Ft(is)g(a)g(set)g(of)f
FA(combinational)e(nodes)h Ft(and)g Ff(N)3112 1854 y
Fm(d)3172 1842 y Ft(is)i(a)g(set)523 1942 y(of)i FA(latches)p
Ft(;)g(and)f Ff(F)36 b Ft(is)25 b(a)f(pair)g Fg(h)p Ff(F)1527
1954 y Fm(c)1562 1942 y Ff(;)14 b(F)1652 1954 y Fm(d)1691
1942 y Fg(i)24 b Ft(wher)m(e)h Ff(F)2025 1954 y Fm(c)2083
1942 y Ft(maps)f(eac)o(h)f(combinational)e(node)i Ff(c)30
b Fg(2)g Ff(N)3371 1954 y Fm(c)523 2041 y Ft(to)20 b(an)f(e)n(xpr)m
(ession)h(o)o(ver)g Ff(N)1316 2053 y Fm(c)1366 2041 y
Fg([)d Ff(N)1505 2053 y Fm(d)1559 2041 y Fg([)g Ff(I)28
b Ft(and)18 b(for)i(eac)o(h)f(latc)o(h)g Ff(d)k Fg(2)h
Ff(N)2529 2053 y Fm(d)2567 2041 y Ft(,)c Ff(F)2661 2053
y Fm(d)2721 2041 y Ft(maps)f(eac)o(h)g(latc)o(h)g Ff(d)h
Ft(to)523 2141 y Ff(n)j Fg(2)g Ff(N)741 2153 y Fm(c)793
2141 y Fg([)c Ff(N)934 2153 y Fm(d)990 2141 y Fg([)g
Ff(I)28 b Ft(wher)m(e)20 b Ff(F)1401 2153 y Fm(d)1461
2141 y Ft(is)h(a)f(delay)g(function)f(whic)o(h)g(tak)o(es)i(the)f(curr)
m(ent)g(value)f(of)i Ff(n)f Ft(to)h(be)523 2241 y(the)f(ne)n(xt-state)g
(value)g(of)g Ff(d)p Ft(.)523 2402 y FA(A)27 b Ft(cir)m(cuit)g(state)g
FA(is)h(an)e(assignment)g(to)h(the)f(latches)h(in)g Ff(N)2261
2414 y Fm(d)2299 2402 y FA(.)g(Gi)n(v)o(en)f(a)h(sequence)e(of)i(v)n
(aluations)523 2502 y(to)c(the)g(inputs)f Ff(i)991 2514
y Fz(0)1028 2502 y Ff(;)14 b(i)1094 2514 y Fz(1)1131
2502 y Ff(;)g(:)g(:)g(:)o FA(,)23 b(a)h Ft(cir)m(cuit)f(tr)o(ace)f
FA(of)h Ff(M)32 b FA(is)23 b(the)g(sequence)f(of)g(states)i
Ff(s)2874 2514 y Fz(0)2911 2502 y Ff(;)14 b(s)2987 2514
y Fz(1)3024 2502 y Ff(;)g(:)g(:)g(:)p FA(,)23 b(where)523
2602 y(\(1\))d Ff(s)680 2614 y Fz(0)739 2602 y FA(is)h(the)g(initial)g
(state)g(and)g(\(2\))f(for)g(each)g Ff(j)29 b(>)24 b
Fc(0)p FA(,)c(the)h(state)g Ff(s)2447 2614 y Fm(j)2503
2602 y FA(is)h(obtained)d(by)i(updating)d(the)523 2701
y(elements)h(in)g Ff(N)989 2713 y Fm(d)1047 2701 y FA(gi)n(v)o(en)f
(the)h(state)h(v)n(aluation)e Ff(s)1907 2713 y Fm(j)s
Fo(\000)p Fz(1)2046 2701 y FA(and)h(input)f(v)n(aluation)g
Ff(i)2732 2713 y Fm(j)s Fo(\000)p Fz(1)2851 2701 y FA(.)i(The)f
Ft(observable)523 2801 y(behavior)k FA(of)h(the)g(circuit)g(is)h(the)f
(sequence)f(of)h(v)n(aluations)f(of)h(the)g Ft(outputs)f
FA(which)h(are)g(a)g(subset)523 2900 y(of)c(latches)g(and)g
(combinational)e(nodes.)523 3156 y Fr(4.2)82 b(Corr)o(espondence)19
b(between)h(CCDFGs)h(and)f(Cir)o(cuits)523 3328 y FA(Gi)n(v)o(en)27
b(a)h(CCDFG)h Ff(G)g FA(and)e(a)i(synthesized)d(circuit)i
Ff(M)9 b FA(,)28 b(it)g(is)h(tempting)e(to)h(de\002ne)f(a)h(notion)f
(of)523 3428 y(correspondence)c(as)28 b(follo)n(ws:)e(\(1\))g
(Establish)h(a)g(\002x)o(ed)f(mapping)f(between)h(the)h(state)g(v)n
(ariables)523 3527 y(of)k Ff(G)h FA(and)f(the)g(latches)g(in)h
Ff(M)9 b FA(,)31 b(and)f(\(2\))h(stipulate)g(an)g(e)o(x)o(ecution)e(of)
i Ff(G)h FA(to)g(be)f(equi)n(v)n(alent)e(to)523 3627
y(an)24 b(e)o(x)o(ecution)f(of)h Ff(M)33 b FA(if)25 b(the)o(y)e(ha)n(v)
o(e)h(the)h(same)f(observ)n(able)f(beha)n(vior)-5 b(.)23
b(Ho)n(we)n(v)o(er)m(,)f(this)j(does)f(not)523 3727 y(w)o(ork)e(in)h
(general)e(since)i(the)g(mappings)e(between)h(state)h(v)n(ariables)f
(and)g(latches)h(may)f(be)h(dif)n(fer)n(-)523 3826 y(ent)j(in)g(each)f
(clock)g(c)o(ycle.)g(T)-7 b(o)26 b(address)g(this,)g(we)g(introduce)e
Ff(E)5 b(M)k(ap)32 b Fc(:)i Ff(ops)f Fg(!)h Ff(N)3034
3838 y Fm(c)3067 3826 y FA(,)26 b(mapping)523 3926 y(CCDFG)20
b Ft(oper)o(ations)d FA(to)i(the)g(combinational)d(nodes)i(in)h(the)g
(circuit:)f(each)h(operation)d(is)k(mapped)523 4026 y(to)25
b(the)f(combinational)e(node)i(that)h(implements)e(the)i(operation;)d
(the)j(mapping)e(is)i(independent)523 4125 y(of)h(clock)f(c)o(ycles.)h
(Fig.)g(4)h(sho)n(ws)f(the)g(mapping)e(for)i(the)g(synthesized)f
(circuit)h(of)g(TEA.)g(Recall)523 4225 y(from)f(Section)g(1.1)h(that)g
(the)g(FSM)g(decides)g(the)g Ft(contr)l(ol)f(signals)h
FA(for)f(the)h(circuit;)g(the)g(FSM)h(is)523 4324 y(thus)20
b(e)o(xcluded)e(from)i(the)g(mapping.)e(W)-7 b(e)21 b(no)n(w)f
(de\002ne)g(the)g(equi)n(v)n(alence)e(between)h Ff(G)i
FA(and)f Ff(M)9 b FA(.)523 4505 y Fr(De\002nition)20
b(10.)41 b Ft(A)32 b(CCDFG)g(state)h Ff(x)f Ft(of)g Ff(G)h
Ft(is)g(equivalent)d(to)i(a)g(cir)m(cuit)g(state)g Ff(s)g
Ft(of)g Ff(M)41 b Ft(with)523 4605 y(r)m(espect)19 b(to)g(an)f(input)g
Ff(i)h Ft(and)e(a)i(micr)l(ostep)g(partition)f Ff(t)p
Ft(,)h(if)g(for)g(eac)o(h)f(oper)o(ation)e Ff(op)k Ft(in)e
Ff(t)p Ft(,)h(the)g(inputs)523 4704 y(to)e Ff(op)h Ft(accor)m(ding)d
(to)i Ff(x)h Ft(and)f Ff(i)g Ft(ar)m(e)g(equivalent)f(to)h(the)g
(inputs)g(to)g Ff(E)5 b(M)k(ap)p Fc(\()p Ff(op)p Fc(\))17
b Ft(accor)m(ding)f(to)h Ff(s)g Ft(and)523 4804 y Ff(E)5
b(M)k(ap)p Fc(\()p Ff(i)p Fc(\))p Ft(,)15 b(i.e)o(.,)g(the)h(values)f
(of)h(eac)o(h)e(input)h(to)g Ff(op)h Ft(and)f(the)g(corr)m(esponding)f
(input)g(to)i Ff(E)5 b(M)k(ap)p Fc(\()p Ff(op)p Fc(\))523
4904 y Ft(ar)m(e)20 b(equivalent,)f(and)g(the)h(outputs)g(of)g
Ff(op)h Ft(ar)m(e)f(equivalent)f(to)h(the)g(outputs)f(of)i
Ff(E)5 b(M)k(ap)p Fc(\()p Ff(op)p Fc(\))p Ft(.)p eop
end
%%Page: 11 11
TeXDict begin 11 10 bop 523 1973 a @beginspecial 27 @llx
534 @lly 450 @urx 770 @ury 3458 @rwi @setspecial
%%BeginDocument: figures/nmap-tea.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: Visio-nmap-tea.vsd
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 5/8/2009 16:2:51
%%BoundingBox: 27 534 450 770
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (HP LaserJet 4250) (3010.107) 0
%%LanguageLevel: 3
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 12 12 599 779
%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
currentpagedevice /MediaProcessing known {<</MediaProcessingDetails << /Type 8 /ImageOrientation 0>> >> setpagedevice}{<< /StapleDetails<< /Type 8 /Portrait true>> >> setpagedevice} ifelse
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *HPManualDuplexDialogItems InstructionID_01_FACEDOWN-NOROTATE

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPManualFeedOrientation FACEDOWN

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPOutputBinOrientation FACEDOWN

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PageSize LETTER

  <</DeferredMediaSelection true /PageSize [612 792] /ImagingBBox null /MediaClass null>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PrintQualityGroup PQGroup_2

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *MediaType AUTO

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Collate False
<</Collate false>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *StapleLocation None

<<      /MediaProcessing (STAPLING)
        /MediaProcessingDetails <<
        /MediaProcessingOption (NONE)
        /MediaProcessingBoundary 0
        /Type 8 >> >> setpagedevice 
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *OutputBin Auto

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Duplex None

  <</Duplex false>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPOrientRotate180 False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PostScriptCustomPageSize False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPOrientation HPOrientationPortrait

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPConsumerCustomPaper PSCustom

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *ESPRITSupported True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *AlternateLetterHead False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPaperSizeALMConstraints ENV_10

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPDocPropResourceData HPCabFileName

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPColorMode MONOCHROME_MODE

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPJLEncoding UTF8

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPJobAccounting HPJOBACCT_JOBACNT

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPJobByJobOverride JBJO

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPXMLFileUsed hpc4250s.xml

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPCustomDUplexableRange 5.83x8.27_8.5x14

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPEnableRAWSpooling True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *TextAsBlack False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPManualDuplexDialogModel Modeless

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPManualDuplexPageOrder EvenPagesFirst

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPMapManualFeedToTray1 False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPManualDuplexPageRotate DriverRotate

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPStraightPaperPath False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPSendPJLUsageCmd CURI

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *JRConstraints JRCHDPartial

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *JRHDInstalled JRHDOff

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *JRHDNotInstalled JRHDOff

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPNUseDiffFirstPageChoice True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPageExceptionsFile HPCPE5r1

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPageExceptionsInterface ShowPageExceptions

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPageExceptionsLowEnd HPPageExceptionsLowEndVer

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPageExceptions CoverInsertion

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPaperSizeDuplexConstraints A5

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPMediaTypeDuplexConstraints EXTRA_HEAVY

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPDuplicateJobNameOverride SWFW

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PSAlignmentFile HPCLS5r1

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PSServices_DeviceandSuppliesStatus TRUE

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPSmartHub_Onlinediagnostictools TRUE

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPSmartHub_Supportandtroubleshooting TRUE

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPSmartHub_Productmanuals TRUE

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPSmartHub_Checkfordriverupdates TRUE

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PSServicesOption PrnStat_SID_242_BID_270_HID_15521

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPSmartHub Inet_SID_263_BID_276_HID_265

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPBornOnDate HPBOD

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *AutoConfiguration NotInstalled

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *EnvelopeFeeder NotInstalled

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Tray3 None

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Tray4 None

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Tray5 None

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *DuplexUnit Installed

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *ManualDuplex True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *AccessoryOutputBins None

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPassthrough True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PrinterHardDisk NotInstalled

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *JobRetention Installed

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *DeviceIsMopier Installed

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *InstalledMemory 288-319MB

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPDLType PDL_PS

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *ScaleFromLargePaper Installed

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *ActualCustomRange 215900_355600

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *CombineMediaTypesAndInputBins Installed

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPJobAccWoPin True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPInstallableTrayFeatureName EnvelopeFeeder

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPInstallableTraySize EnvelopeFeeder-75-ENVELOPE_FEEDER

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPInstallableHCO 500Stapler-Q2443

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPMediaPMLRange 15-19

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPOutputBinPMLRange 1-8

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPDocUISUI True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPDisplayDocUITab True

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *HPPrnPropResourceData HPCabFileName

%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 11.99905 779.0003 ] def 
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1
%%PageBoundingBox: 12 12 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0.8588 0.8901 0.9490 SC
NP 701 87 m 1451 87 l 1451 278 l 701 278 l CP 
eofill
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[8 4] 0 setdash
0 0 0 SC
NP 701 278 m 1451 278 l 1451 87 l 701 87 l 701 278 l CP 
stroke
GSE
GpPBeg1
0.8588 0.8901 0.9490 SC
NP 181 1094 m 630 1094 l 630 1384 l 181 1384 l CP 
eofill
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[8 4] 0 setdash
0 0 0 SC
NP 181 1384 m 630 1384 l 630 1094 l 181 1094 l 181 1384 l CP 
stroke
GSE
GpPBeg1
0.8588 0.8901 0.9490 SC
NP 701 1742 m 1451 1742 l 1451 1998 l 701 1998 l CP 
eofill
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[8 4] 0 setdash
0 0 0 SC
NP 701 1998 m 1451 1998 l 1451 1742 l 701 1742 l 701 1998 l CP 
stroke
GSE
GpPBeg1
0.8588 0.8901 0.9490 SC
NP 701 1380 m 1451 1380 l 1451 1720 l 701 1720 l CP 
eofill
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[8 4] 0 setdash
0 0 0 SC
NP 701 1720 m 1451 1720 l 1451 1380 l 701 1380 l 701 1720 l CP 
stroke
GSE
GpPBeg1
0.8588 0.8901 0.9490 SC
NP 701 317 m 1451 317 l 1451 1361 l 701 1361 l CP 
eofill
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[8 4] 0 setdash
0 0 0 SC
NP 701 1361 m 1451 1361 l 1451 317 l 701 317 l 701 1361 l CP 
stroke
GSE
GpPBeg1
1 1 1 SC
NP 744 197 m 1409 197 l 1409 261 l 744 261 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 744 261 m 1409 261 l 1409 197 l 744 197 l 744 261 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 45104 VM?
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_T42Hdr 5.0 0
/asc42 0.0 d/sF42{/asc42 ~ d Ji}bind d/bS42{0 asc42 -M}bind d/eS42{0 asc42 neg
-M}b/Is2015?{version cvi 2015 ge}bind d/AllocGlyphStorage{Is2015?{!}{{string}
forall}?}bind d/Type42DictBegin{25 dict `/FontName ~ d/Encoding ~ d 4 array
astore cvx/FontBBox ~ d/PaintType 0 d/FontType 42 d/FontMatrix[1 0 0 1 0 0]d
/CharStrings 256 dict `/.notdef 0 d & E d/sfnts}bind d/Type42DictEnd{& @
/FontName get ~ definefont ! E}bind d/RDS{string currentfile ~ readstring !}
executeonly d/PrepFor2015{Is2015?{/GlyphDirectory 16 dict d sfnts 0 get @ 2 ^
(glyx)putinterval 2 ^(locx)putinterval ! !}{! !}?}bind d/AddT42Char{Is2015?
{findfont/GlyphDirectory get ` d E ! !}{findfont/sfnts get 4 ^ get 3 ^ 2 ^
putinterval ! ! ! !}?}bind d/IDStrNull{1 add 2 mul @ string 0 1 3 ^ 1 sub{1 ^ ~
0 put}for ~ !}bind d/IDStr{@ 1 add 2 mul string 0 1 3 ^{1 ^ ~ @ 2 mul ~ 3 copy
256 idiv put ~ 1 add ~ 256 mod put}for ~ !}bind d/IDStr2{~ @ 1 add 2 mul string
0 1 3 ^{1 ^ ~ @ 2 mul ~ 5 ^ add 3 copy 256 idiv put ~ 1 add ~ 256 mod put}for ~
! ~ !}bind d/CIDT42Begin{25 dict `/CDevProc ~ d/CIDMap ~ d/CIDCount ~ d
/CIDSystemInfo 3 dict @ ` 3 -1 $/Supplement ~ d 3 -1 $/Ordering ~ d 3 -1 $
/Registry ~ d E d/CIDFontName ~ d/Encoding ~ d 4 array astore cvx/FontBBox ~ d
/CharStrings 2 dict @ `/.notdef 0 d E d/GDBytes 2 d/CIDFontType 2 d/FontType 42
d/PaintType 0 d/FontMatrix[1 0 0 1 0 0]d/Metrics2 16 dict d/sfnts}bind d
/CIDT42End{CIDFontName & E/CIDFont defineresource !}bind d/T42CIDCP32K{/CIDFont
findresource @ length dict copy @/FID undef `/CIDFontName ~ d/CIDMap ~ d
/CIDCount ~ d/Metrics2 8 dict d CIDFontName & E/CIDFont defineresource !}bind d
/T42CIDCPR{/CIDFont findresource @ length dict copy @/FID undef `/CIDFontName ~
d &/CDevProc known{[/CDevProc , @ type/operatortype ne{/exec cvx}if/! cvx/! cvx
/! cvx/! cvx 5/^ cvx 5/^ cvx 0.0 0.0]cvx}{{! ! ! ! ! 5 ^ 5 ^ 0.0 0.0}}? bind
readonly/CDevProc ~ d CIDFontName & E/CIDFont defineresource !}bind d
/T0AddT42Char{/CIDFont findresource/GlyphDirectory get ` d E ! !}bind d
/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get ` d E}bind d/UpdateCIDMap{
/CIDFont findresource/CIDMap get 3 1 $ putinterval}d/AddXUID{version cvi 3011
ge{/XUID ~ d}{!}?}bind d/hfDef42CID{/CIDFont findresource @ length dict copy @
/FID undef `/CIDFontName 2 ^ d @ type @/booleantype ne{/arraytype eq{/CDevProc
~ d}{matrix @ 4 4 -1 $ put/FontMatrix ~ d}?}{! !}? & E/CIDFont defineresource
!}bind d/hfDefRT42CID{/CIDFont findresource @ length dict copy @/FID undef `
/CIDFontName 1 ^ d &/CDevProc known{[/CDevProc , @ type/operatortype ne{/exec
cvx}if/! cvx/! cvx/! cvx/! cvx 5/^ cvx 5/^ cvx 0.0 0.0]cvx}{{! ! ! ! ! 5 ^ 5 ^
0.0 0.0}}? bind readonly/CDevProc ~ d & E/CIDFont defineresource !}bind d
%%EndResource
end reinitialize
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /TTE1AB1D78t00
Type42DictBegin
[<00010000000a000a000a000a63767420962ad276000000ac000006306670
676dcc79599a000006dc0000066e676c79660ef78fec00004d1c0003e762
68656164ce98269200000d4c0000003668686561123312ff00000d840000
0024686d74780e34584000000da800001a286c6f63610e616932000027d0
00001a2c6d6178700b470ca8000041fc000000207072657052fec4e90000
421c00000aff6764697200000000000000000000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d00000001000000030000e6e8baea5f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
0009000100010000000000010000073efe4e00431000faaffe2610000001
0000000000000000000000000000068a0600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b5002406000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6ffdc01a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a004004ce0049045a0026
04ce0039045a005304ce004a045a005304ce004a0600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce01a8000f01a8fff502aa00a402aa00a401a8000e01a8005601a8
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046067f0014077600140327ffba041effba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f000000000000002a
0000002a0000002a0000002a000000d60000017e00000320000005a60000
074e000009380000097e000009fe00000aa400000b8400000bec00000c64
00000caa00000ce600000d5600000f1200000fee00001218000013f20000
15520000170c000018e20000198e00001c2200001e5600001eb200001f70
00001ff200002062000020e8000021da000023da000025840000271c0000
28560000299e00002a6200002b1800002ca800002dae00002e9200002f7a
000031b00000323a000035640000370e000038420000394800003b3c0000
3da800004052000041000000422400004398000045d6000048e200004a88
00004bc800004c3200004c9c00004d0000004d8800004dbc00004e380000
510a000052e80000549c000056500000580e0000596200005b5200005cf6
00005dea00005f020000619a00006296000064c60000668c0000684e0000
6a1200006ba800006cae000070560000717a0000731800007536000079a0
00007bc400007e1c00008004000081020000814e00008250000082f00000
833c00008370000083ac000083ee000084540000849a000084ce00008504
0000853a0000858a000085cc0000861e00008656000086a8000086de0000
871e000087600000879e000087e800008828000088560000888e000088de
00008914000089540000898e000089d200008a1c00008a5800008a880000
8acc00008b0400008b9400008c1a00008e2800008fbc0000916c000091b8
0000924c00009470000096c4000098b4000099a000009a2200009a8c0000
9baa00009d0600009f4e0000a0b00000a13e0000a1e80000a2ac0000a3f4
0000a59e0000a68c0000a7520000a7b60000a8240000a94e0000aa720000
ab020000ace40000af3e0000b2900000b3860000b42c0000b47c0000b532
0000b6520000b7f00000b88a0000b94e0000ba0e0000ba760000bab20000
bb0a0000bb580000bd700000bfb60000bfee0000c0200000c14a0000c276
0000c3240000c3c80000c46a0000c53c0000c5900000c5c60000c61e0000
c7700000c7e20000c83c0000c9b40000cb200000cc000000cc320000ccce
0000cdf20000d0680000d0a20000d0e60000d1220000d1840000d1c60000
d20c0000d2580000d28a0000d2de0000d31c0000d34c0000d38a0000d3d0
0000d4120000d4500000d4d20000d5400000d6260000d6620000d6e20000
d7160000d7b80000d8400000d8ac0000d9380000d9a40000da900000db82
0000dbb60000dbea0000dc1a0000dc5e0000dcd60000de500000e06a0000
e09c0000e0d60000e1d00000e35e0000e3940000e4f80000e5740000e654
0000e74a0000e8da0000ea440000ec320000ed2e0000ed740000eda80000
edea0000ee240000ee780000eec00000ef0a0000ef3a0000ef6a0000f152
0000f1900000f1ca0000f1fa0000f22e0000f25e0000f28a0000f2d20000
f4880000f6020000f62e0000f6700000f6b40000f6e40000f7140000f76a
0000f8480000f95a0000f99e0000f9d40000fa2e0000fa6c0000faa00000
fad00000fb0c0000fb4c0000fb8a0000fbc60000fc080000fc3e0000fc7a
0000fcba0000fdc80000ff340000ff84000100e0000101360001016a0001
01b800010204000102460001027e000102b4000102fc0001039e0001053a
000107020001088400010a7600010bc800010d4c00010e2e00010fc80001
10320001105a000110f80001137a000113ba000113fa0001143a00011478
000114d600011534000115a2000115c2000116ac0001174c000117820001
17d00001181a00011864000118800001189c000118bc000118dc000118fc
0001191c00011942000119680001198e000119b4000119e400011a0c0001
1a3400011a6000011a8c00011ac000011aea00011b1600011b4c00011b76
00011ba200011bd800011c0200011c2c00011c6000011c9000011cc40001
1d0800011d3800011d6c00011dae00011de200011e1400011e5600011e8a
00011eba00011efc00011f4000011f8600011fe200011ffe0001201a0001
2036000120520001206e000121dc000124ac0001271c0001273800012752
0001276e0001278a000127a6000127c20001281e00012858000128c20001
298c00012a2c00012b0200012b8200012c0a00012c7a00012d1000012d6e
00012db400012e1200012e7400012f2c00012fea00013016000130720001
30b60001322200013316000133400001335c00013388000133c00001340c
0001344c00013480000134b0000134e00001351000013554000135840001
35b4000135f4000136240001365400013684000136c4000136f400013724
000137540001378200013986000139b6000139e600013b3600013cec0001
3d1c00013d4a00013d7a00013da800013dd800013e0600013f3400014062
00014092000142020001423a0001426a000143fc0001442a000144580001
4486000144ae0001460c000147a4000147dc0001481c0001485800014888
000148b6000148d2000149020001493200014a2200014b8a00014bba0001
4bf400014c3400014c6400014c9400014cd600014e760001505600015096
000150d6000151060001514600015230000152b000015394000153c40001
53f4000154240001545400015490000154c2000154f40001552400015554
0001559a000155cc000155fc00015632000156a4000156d8000158a60001
59a800015b3800015d6800015fb80001614a000161ae0001623800016248
000162d6000164d4000166000001676c0001685c000169e000016bfa0001
6e2600016f1800016f2800016f3800017050000170600001707000017080
00017090000170a0000171be000171ce000171de00017252000172620001
73320001734200017454000174640001747400017484000175e2000177c0
00017802000178380001786e0001789e000178ce000179220001794a0001
7ad400017c1c00017d7000017ed80001805c000180c0000182520001836e
0001837e0001838e00018514000185240001868a000187e4000189180001
8a7600018be400018daa00018dea00018e2200018e5800018e7e00018eae
00018ed40001904a0001907a000191b0000191c0000191d0000192120001
9222000193b600019562000196ec0001971400019744000198a0000198b0
000199e8000199f800019a9200019bf200019c0200019e6800019ff20001
a15a0001a18a0001a3000001a4320001a4420001a4520001a4620001a53c
0001a54c0001a55c0001a56c0001a6640001a7de0001a7ee0001a9160001
aa4a0001ab9c0001ad300001ae4e0001afda0001b0ec0001b1220001b358
0001b3f80001b4080001b59e0001b7400001b7c40001b9460001b9560001
bbbe0001bd3e0001bebe0001beee0001c08e0001c2140001c3d80001c504
0001c5140001c6440001c6540001c6640001c7240001c7340001c91a0001
c92a0001ca600001cb6e0001cd1a0001ced00001d0120001d1820001d2ca
0001d31c0001d4fe0001d67a0001d6b80001d85e0001d8820001d9c20001
d9d20001d9e20001da1a0001da2a0001dbb60001dd240001de980001debc
0001deec0001e05a0001e10c0001e1ca0001e1f80001e3ae0001e4a60001
e5340001e6600001e7140001e7ee0001e8380001e8b60001e97c0001e9a4
0001e9ee0001ea440001eb300001eb7a0001ebae0001ebd60001ebfe0001
ec320001ec760001ecba0001ecf80001ee360001eeee0001f00e0001f084
0001f1520001f1a40001f2360001f2e60001f3da0001f42e0001f4c40001
f5820001f66c0001f71e0001f83e0001f8900001f93a0001fa700001fb48
0001fc2e0001fd340001fe1a0001fefc0001fff00002008e000201940002
028e000203060002037e000203f40002042a000204860002054e000205da
000206120002065800020688000206f2000207b2000207e6000208160002
084a0002087a000208aa000208da00020a7a00020ab200020af200020b2a
00020b6200020bfe00020cf800020d2800020dcc00020dfa00020e3a0002
0e8a00020eba00020f060002109e0002120400021364000213aa000213fe
00021436000215a8000215de00021670000216ae000216dc0002171a0002
184a00021872000219ae00021a3e00021ae800021b6a00021c2600021d3e
00021e4c00021e8000021f0600022062000220e40002212e000222380002
2280000223840002240000022458000224dc000225c6000226dc000227d8
000228820002297200022a4400022b2e00022c1600022cc600022d480002
2fa600022fd000022ffa000230b2000230dc0002321e000233240002340e
00023438000234620002348c000234b6000234e0000236600002368a0002
36b4000236de00023708000237320002375c00023786000237b0000237e4
0002380e0002383800023862000239dc000239ec00023b0600023b160002
3b4000023b6a00023b9400023bbe00023d6800023f84000240b2000240c2
0002423e0002424e000243940002456000024666000247e6000249860002
4baa00024d0400024ee60002502a0002515800025182000251ac000251d6
000252000002522a000252540002527e000252a8000252d2000252fc0002
5326000253500002537a000253a4000253ce000253f800025634000257b0
000258f400025adc00025c2400025c4e00025c7800025ca800025cd80002
5d2800025d7800025db800025e2a00025e7e00025edc00025f3200025f68
00025faa00025ff00002603a0002606a000260a2000260d20002620a0002
65500002657a000265a4000265ce000265f8000266220002664c00026676
000266a0000266ca000266f40002671e00026748000267720002679c0002
67c6000267f00002681a000268440002686e00026898000268c2000268ec
00026916000269400002696a00026994000269be000269e800026a860002
6a9c00026ac600026da600026db600026ed000026ff20002713000027272
00027418000274280002756a000276ba000278aa00027a7e00027b960002
7ba600027c2800027cb600027db600027dc600027e6600027e7600027f8c
000280de0002820e0002821e000282ec000282fc00028472000284820002
8596000285a6000286da000288700002892c0002893c00028a3a00028b94
00028c2000028c3000028d5a00028ee600028fa200028fb20002904e0002
905e0002912c0002913c00029214000292240002932c0002933c00029502
000295120002966a0002967a000298e4000298f400029aee00029afe0002
9c6800029c7800029d6800029d7800029f1000029f200002a03e0002a04e
0002a18e0002a19e0002a1ae0002a1be0002a3360002a3460002a3560002
a3660002a4b80002a6060002a6d40002a7b80002a9380002aaba0002abba
0002acce0002ae120002ae220002af100002afea0002b1860002b1960002
b2b40002b3ba0002b5b80002b5c80002b5d80002b5e80002b7320002b742
0002b7fa0002b80a0002b9180002b9280002ba140002ba240002bb420002
bb520002bbf00002bc000002bc100002bcfe0002be720002bf9e0002c098
0002c0a80002c0b80002c0c80002c2660002c4200002c4ee0002c4fe0002
c75e0002c9a40002cc2a0002ce8e0002d1120002d3840002d5540002d70a
0002d7340002d75e0002d76e0002d77e0002d7a80002d7d20002d7fc0002
d80c0002d81c0002d8460002d8700002d8800002d8900002d8ba0002d8e4
0002d90e0002d91e0002d92e0002d93e0002d94e0002d95e0002d96e0002
d9980002d9a80002d9b80002d9e20002da0c0002da360002da600002da8a
0002dab40002dade0002db080002db320002db5c0002db860002dbb00002
dbda0002dc040002dc2e0002dc580002dc820002dcac0002dcd60002dd00
0002dd2a0002dd540002dd7e0002dda80002ddd20002ddfc0002de260002
de500002de7a0002dea40002dece0002def80002df220002df4c0002df76
0002dfa00002dfca0002dff40002e01e0002e0480002e0720002e09c0002
e0c60002e0f00002e11a0002e1440002e16e0002e1980002e1c20002e1ec
0002e2160002e2400002e26a0002e2940002e3340002e3780002e3ee0002
e4180002e4420002e46c0002e4960002e4c00002e4ea0002e5140002e53e
0002e5680002e5920002e5bc0002e5e60002e6100002e63a0002e6640002
e68e0002e6b80002e6e20002e70c0002e7360002e7600002e78a0002e7b4
0002e7de0002e8120002e8460002e87a0002ea0c0002eba80002ed440002
eed00002ef160002ef5c0002efca0002f0260002f0780002f0e80002f1c0
0002f28c0002f3640002f4300002f4d00002f5ea0002f69e0002f7200002
f77a0002f7ba0002f8d80002fa220002fbba0002fc160002fc740002fcd0
0002fd2c0002fde00002fe960002ff420002ffee0003009a000301520003
020a000302c2000302d4000302e6000302f80003030a0003031c0003038a
000303f8000304b0000304c2000304d4000304e6000304f6000305080003
051a0003052c0003053e000305500003056200030610000306bc0003076a
00030816000308ae000308e8000309120003093c00030990000309e20003
0a5e00030aa800030b2400030b7800030bfc00030c4e00030cc400030d1c
00030d8200030dd800030e3200030eb000030efc00030f5a00030fbe0003
100c0003105a000310b2000310fa000311240003115200031178000311ac
000311dc0003120c0003125e000312cc0003132200031396000313ea0003
145e000314a40003150c00031552000315ae000315de000316180003163e
0003166e00031694000316ba000316ec0003171c0003176e000317d40003
182a00031890000318e40003195200031994000319f400031a3600031a82
00031abc00031af800031b3200031b6e00031ba200031bd400031c040003
1c3400031c5e00031c8400031cae00031cdc00031d0600031d5200031d96
00031dcc00031e0800031e3c00031e6a00031ea800031ed800031f120003
1f3c00031f6a00031f9000031fb600031fe20003203e0003206e0003209e
000320ce000321060003213a0003216800032198000321c8000321f80003
22280003225c000322b2000322e6000323460003237a000323d200032406
0003246200032500000325ce000326ee000327b600032846000328dc0003
2ac800032cc400032e3c00032fb80003316200033314000333fc00033532
0003362a0003373c0003385a0003399000033afa00033c6800033dfe0003
3f7a0003408a0003409a000341c60003430200034444000345c8000346a2
00034718000347ce00034874000349e400034a1c00034a9600034b580003
4c1200034c7a00034d8000034eb600034f84000350e20003515c000351d6
0003529e000353580003540c00035468000354c20003550a0003557a0003
55f6000356400003567a000356c00003570400035756000357a80003582a
000358ac000358ee0003592e000359640003599a000359c8000359f60003
5a2a00035a5e00035aa000035ae200035b1e00035b5a00035b9400035bce
00035c0000035c3200035c6400035c9600035cd000035d0a00035d4c0003
5d8e00035dd000035e1200035e6000035eae00035ef000035f3200035f72
00035fb200035fec0003602600036072000360be000360fc0003613c0003
6182000361c8000362040003625a00036296000362d20003631200036352
0003638e000363ca0003640a0003644a0003648e000364d2000365260003
65b4000365f600036638000366a0000367080003673a0003676c000367a4
000367dc0003687200036908000369520003699c000369d800036a140003
6a6a00036ac000036b0a00036b5400036bac00036c0400036c4400036c84
00036cbc00036cf400036d3e00036d8800036dc600036e0400036e460003
6e8800036edc00036f3000036f7600036fbc00037002000370480003709e
000370f40003714a000371a0000371ec0003723800037284000372d00003
7344000373b80003742c000374a0000374de0003751c0003755a00037598
000375d600037614000376580003769c000376e800037734000377940003
77e00003781e0003786c0003797c000379cc00037a1c00037a5400037a8c
00037ae200037b3800037bac00037c1000037c5200037c9400037cea0003
7d3800037d8400037dd000037e1000037e5000037e9800037ee000037f4c
00037fa600037fde000380160003805600038096000381b0000382f60003
83e6000384f60003854c000385a2000385f400038648000386ac00038710
00038766000387bc00038832000388a8000388ea0003892c0003896e0003
89b0000389f200038a3400038a8a00038ae000038b3200038b8600038c0e
00038c9000038d3000038dd200038e1000038e4e00038e8c00038ec80003
8f0600038f4400038f8200038fbe000390a20003918e000392a4000393c0
0003948a000395540003964e00039748000398460003994400039a620003
9b8000039ca600039dcc00039ece00039fd00003a0620003a0f40003a132
0003a1700003a1ca0003a2240003a25c0003a2940003a3a40003a3b40003
a3fc0003a4440003a49c0003a4f40003a5260003a5580003a59a0003a5dc
0003a6160003a6500003a6940003a6d80003a7500003a7ca0003a85a0003
a89e0003a8de0003a9600003a9e20003ab3a0003ab4a0003ab980003abe6
0003ac220003ac5e0003aca40003acea0003ad380003ad860003add60003
ae260003ae820003aede0003b0540003b1bc0003b1f40003b22e0003b27a
0003b2c60003b3180003b36a0003b3bc0003b4120003b44e0003b48a0003
b4e00003b5340003b66c0003b70c0003b75a0003b79a0003b7d40003b96a
0003bbd20003bc960003be2c0003bf8a0003c0580003c1fe0003c4520003
c68a0003c6d00003c7020003c7ac0003c8d00003c8f40003c98e0003ca9a
0003cbaa0003ccba0003cdc80003cf4e0003cf800003d0220003d04a0003
d0ac0003d10e0003d1700003d1d20003d2100003d24e0003d2880003d2c2
0003d2ee0003d33a0003d3740003d3ae0003d50a0003d65e0003d66e0003
d72c0003d8620003d8c00003d9d80003db660003dc0c0003dd520003dd90
0003ddce0003de0c0003de600003de880003dee20003df460003df8e0003
dff00003e0500003e0c20003e13e0003e1ba0003e23c0003e2c80003e354
0003e3de0003e45e0003e4980003e4d40003e6380003e7020003e7320003
e76200010000068a0100003f0076000700020010002f00560000040dffff
00030002b1540f4122031700ef031700ff03170003001f0317002f031700
4f0317005f0317008f0317009f03170006000f0317005f0317006f031700
7f031700bf031700f00317000600400317b2923340b80317b28b3340b803
17b36a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b8
0317b34d513240b80317b344493240b80317b23a3340b80317b331343240
b80317b32e423240b80317b3272c3240b80317b312253280b80317b30a0d
32c04116031600d00316000200700316000102c4000f0101001f00a00315
00b0031500020306000f0101001f00400312b32426329fbf030400010302
03010064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064
001fffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202
e102e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000
ef02e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd00
5f02dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002
dc0001001002dc003f02dc000202dc02dc001002db000102db02db000f02
da000102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b2
1f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802
e3b3202b1fa0413002d400b002d40002000002d4001002d4002002d40050
02d4006002d4007002d40006006002d6007002d6008002d6009002d600a0
02d600b002d60006000002d6001002d6002002ca002002cc002002d60030
02d6004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02
c70017001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02
c902c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002
c7002f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f
02bf004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca
0800001f02b200e90800001f02a600a20800406a1f402643493240204349
3240263a3d3240203a3d329f209f26024026969932402096993240268e92
3240208e92324026848c324020848c3240267a813240207a813240266c76
3240206c76324026646a324020646a3240265a5f3240205a5f3240264f54
3240204f5432b8029eb724271f374f6b0120410f02770030027700400277
00500277000402770277027700f90400001f029bb22a2a1fb8029a402b29
2a1f80ba0180bc0180520180a201806501807e01808101803c01805e0180
2b01801c01801e0180400180bb0138000100800140b40180400180bb0138
00010080013940180180ca0180ad01807301802601802501802401802001
3740b80221b2493340b80221b2453340b80221b341423240b80221b33d3e
320f410f0221003f0221007f0221000300bf022100cf022100ff02210003
00400221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e
3a326f414802c3007f02c3008f02c300df02c30004002f02c3006002c300
cf02c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c300
0600df02220001008f02220001000f0222002f0222003f0222005f022200
7f022200ef0222000600bf022100ef02210002006f0221007f022100af02
210003002f0221003f0221004f0221000302c302c3022202220221022140
1d101c102b1048038f1c010f1e014f1eff1e023700161600000012110811
b8010db6f70df8f70d00094109028e028f001d001f0290028f001d001f02
8fb2f91d1fb80198b226bb1f41150197001e0401001f013900260125001f
013800730401001f0135001c0801001f0134001c02ab001f0132b21c561f
b8010fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb
1fd720b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b801
01b21fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26
b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f
1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab2
1f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f
231eb80401b21f5537b80168402c07960758074f07360732072c0721071f
071d071b071408120810080e080c080a080808060804080208000814b8ff
e0402b000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a00b013034b024b5342014bb0c06300
4b6220b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807
ff52b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ff
b101018e851bb0124358b900010111858d1bb900010128858d5959001816
763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b
182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901
f201f04544b901f101f045445958b9033e01f2455258b901f2033e445959
4bb8015653205c58b9002001f14544b9002601f145445958b9081e002045
5258b90020081e4459594bb8019a53205c58b9002501f24544b9002401f2
45445958b909090025455258b9002509094459594bb8040153205c58b173
244544b1242445445958b917200073455258b9007317204459594bb80401
53205c58b1ca254544b1252545445958b9168000ca455258b900ca168044
59594bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9
001c011a4459594bb05653205c58b11c1c4544b12f1c45445958b9018900
1c455258b9001c01894459594bb8030153205c58b11c1c4544b11c1c4544
5958b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65
422b2b01b33b59635c456523456023456560234560b08b766818b0806220
20b163594565234520b003266062636820b003266165b059236544b06323
4420b13b5c4565234520b003266062636820b003266165b05c236544b03b
2344b1005c455458b15c406544b23b403b4523614459b347503437456523
456023456560234560b089766818b080622020b134504565234520b00326
6062636820b003266165b050236544b034234420b147374565234520b003
266062636820b003266165b037236544b0472344b10037455458b1374065
44b24740474523614459004b5342014b5058b108004259435c58b1080042
59b3020b0a124358601b2159421610703eb0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b0112342002b7475737500184569444569444569447373737374
757374752b2b2b2b74752b2b2b2b2b737373737373737373737373737373
737373737373737373732b2b2b45b0406144737400004bb02a534bb03f51
5a58b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc060
4459004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c
515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b
5402b0124b545ab012435c5a58ba009f02220001007359002b7473012b01
732b2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b004569447345694473
456944737475456944734569444569444569447374456944456944732b2b
2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b00
00>
[15785 15901 16277 16373 15369 15665 16261 15773 16185 15861 14953 15997 15693
15621 16237 17907 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
AddFontInfoBegin
AddFontInfo
/OrigFontType /TrueType def 
/OrigFontName <417269616C> def
/OrigFontStyle () def
/FSType 0 def
AddFontInfoEnd
[16#2c 16#1a3d3d1a ] AddXUID
Type42DictEnd
2 10918 83 <00020087fe690421043e0012001e0162408e0c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e1924d00a01100a400a600a800a0420400b
0b025520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab4
0c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840230c0c
06550a74011333023312250000c001019001a001b001f001041f013f014f
010301b8fffc401d0e0e025501100d0d025501100c0c025501100b0b0255
010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c06
5501120d0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d7172
3c4d10fdf4e410fd2b2b2b2b2b2b2b2b5d71ed003f3fed3f3fed11391239
3130005d015d717200711311331536363332161615140206232226271103
141633323635342623220687a43a926888d06a75df7b5a8f2e11a67678ab
a77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700>/TTE1AB1D78t00 AddT42Char 
2 9202 79 <000100830000013705ba000300e3b605360b0b025505b8ffc0b337383405
b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ffc0402515
17340f051f059f05df05044f05df05f005031f0570058005ff0504010000
0a0203250100b8ffc0b337383400b8ffc040153335349f0001c000f00002
00002000d000e0000400b8fff8b41010025500b8fffa401d0e0e02550004
0c0c0255000a0b0b025500140b0b065500081010065500b8fffeb40d0d06
5500b8ffffb40c0c065500b8fffc400a0c0c0655004e044750182b10f62b
2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b2b2b2b2b
2b3311331183b405bafa4600>/TTE1AB1D78t00 AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/p 83 def
/l 79 def
/.notdef 0 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 1 /p put
dup 2 /l put
pop
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
F /F0 0 /0 F /TTE1AB1D78t00 mF 
/F0S32 F0 [50 0 0 -50 0 0 ] mFS
F0S32 Ji 
952 243 M <0102>[27  0]xS 
344 VM?
2 4064 66 <0001ffe1fe69048afeeb0003001a400c013f00021a050019044341182b4e
10e410e6002f4ded3130033521151f04a9fe69828200>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/underscore 66 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 3 /underscore put
pop
991 243 M <03>S 
1721 VM?
2 12038 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>/TTE1AB1D78t00 AddT42Char 
2 12974 87 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>/TTE1AB1D78t00 AddT42Char 
2 4240 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>/TTE1AB1D78t00 AddT42Char 
2 11776 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>/TTE1AB1D78t00 AddT42Char 

1 0 3 <> /TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/s 86 def
/t 87 def
/a 68 def
/r 85 def
/space 3 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 4 /s put
dup 5 /t put
dup 6 /a put
dup 7 /r put
dup 8 /space put
pop
1018 243 M <040506070508>[25 14 28 17 14  0]xS 
344 VM?
1 8178 32 <0002007201a1043a04060003000700474027050601040709002503012503
020725040406253002019f02cf020202bf05001a09011908575a182b4e10
e410e6002f4ded5d71ed3c10ed103ced10ed011139391139393130012135
2111213521043afc3803c8fc3803c8035ea8fd9ba800>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/equal 32 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 9 /equal put
pop
1129 243 M <0908>[30  0]xS 
344 VM?
1 3414 19 <00020055ffe7041105c00010001d0155b10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb4062019101c
b8fff0b202200bbeffe00016ffe00012ffe0000fffe0406204068702880b
880fc90e0509070b180245134c154a19431b54135c155c19521b6b076b0b
63136c156b19601b79027706760b7a0f870698079610c918da02d606d60b
db0f1a1a1e0405141e0d0d17730940212334300901000910090209901f11
7300b8ffc0400e212334200040000200901ec78b182b10f65d2bed10f65d
712bed003fed3fed3130015d71005d003838383838013838385959131012
363332161612151002062322272613101633323611102623220706556bd3
a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d30104013dac5fb3
feffdafefefec3ad98b7019dfe97eff00168016aee698600>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/zero 19 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 10 /zero put
pop
1173 243 M <0A>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 454 m 1409 454 l 1409 576 l 743 576 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 576 m 1409 576 l 1409 454 l 743 454 l 743 576 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 344 VM?
2 9454 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/m 80 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 11 /m put
pop
761 499 M <050B01>[13 42  0]xS 
689 VM?
1 5458 24 <00010055ffe7042105a6001e0156b10202435458b90001ffc0400d0d0d02
55011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab4
0f0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffd
c410c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a7
13c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe0401013
0a15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e
0e0f40150115151c12b802bbb70f0401d340000100b801184020041e1c0d
115f106f107f108f1004108007731840212334301801001810180218b8ff
f4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000
ffc0400b212334200040000200901fb80192b18b182b10f65d2bedf4edf4
ed10f62b5d712bedf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b5913371616
33323635342623220607271321152103363332001514070623222655bd15
996c82b4ad8c578c28a98e02d9fdb74f8491c00108748df4c8fd0180108a
8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e000>/TTE1AB1D78t00 AddT42Char 
1 5106 23 <0002001a0000041005ba000a000d0126403612580c680c9a0ca90cc90c05
4c034c0d94040312010208000c060307050a0b0307000c0c0d0dca030414
030304030d00020c0d040703bb02bb0008000201a0400a000404000c0c00
ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d0d
02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02
b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ffe4b60d
0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b2b3c10
e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c40f0f0f
313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d
3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c39
0c402d392b2b2b2b2b5921112135013311331523110311010296fd84029d
93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/five 24 def
/four 23 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 12 /five put
dup 13 /four put
pop
844 499 M <0C0D08>[28 28  0]xS 
344 VM?
1 2430 11 <0001007cfe51026005d30010003d400a270f0100101207081010b80133b3
009f0e08b801334011079f0e5e0003100320030303ac119d8c182b10f65d
fdf6ed10f6ed003f3c3f3c3130015d012602113437363733060706070615
100101df95ce4d5abc8179273d232b012bfe51bc01f8010eeedafdfbd059
8a96bbbdfe1ffe20>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/parenleft 11 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 14 /parenleft put
pop
913 499 M <09080E>[30 14  0]xS 
973 499 M <050B01>[14 42  0]xS 
344 VM?
1 3858 20 <000100df000002fb05c0000a00af402003400d11346b047f028f02990804
ac04010900060502030905010c0201ca0a00b8ffc0400a21233430000120
000100b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d
0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c0540
0d0f3405b8ffc0400e212334300501200540050205190bba013c01850018
2b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f173901
11393130015d005d2b212311060607353636373302fbb441d35497e22f74
047b3e7c1fae47ca5f00>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/one 20 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 15 /one put
pop
1057 499 M <0D0F08>[27 28  0]xS 
344 VM?
1 8048 31 <0001007000e2043b04c30006005a400c8f0380050203050603080205bb02
5a00060003025ab2024006ba015000020150401500ab01ab2004021a0804
3c01200001007507575a182b10f65d3ced4e10f600192f1a4dedededed18
1a10ed10ed01111217393130005d133501150101157003cbfcfe03020281
a8019ab3fec4fec1b300>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/less 31 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 16 /less put
pop
1126 499 M <101008>[29 29  0]xS 
1198 499 M <0D08>[28  0]xS 
344 VM?
1 2948 14 <0001007200ed043a04b6000b0038401f006e0902f908036e050706096e0a
040af905016e3f024f020202190c575a182b4e10f45d4df43ced3c10e43c
3c002ff43cfd3cf431302511213521113311211521110201fe71018faa01
8ffe71ed0192a8018ffe71a8fe6e>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/plus 14 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 17 /plus put
pop
1240 499 M <1108>[29  0]xS 
344 VM?
2 8538 78 <00010088000003f805ba000b0261401b060c0d0d0655070656065a09030f
0df305f60603090c1010025506b8fff4b40c0c02550ab8fff4b40c0c0255
09b8fff4b40c0c025503b8ffe840100d0d06555503770a02120620132134
08b8fff0b312273409b8fff0b41227341205b8fff0b312213409b8fff040
84122734060404050406370947040525062d0a580a7703750ada03e30607
a60601230626072508390638093f0d4f0d59045906580759097d04790599
09c606d204d606e406e907f706f90815120a0a0503030402060607090908
0a0a050908082507061407070603040425050a1405050a0a090603040801
02000405060708080b0b000a04b8010f400905040c0c0655052208b8010f
402120073f070207100c0c0655071a900d010d0b2500022501019000013f
004f000200b8fffe40310e0e025500100d0d025500100c0c0255000a0b0b
025500120b0b065500120c0c065500080d0d065500190c0de1214766182b
2b4ef42b2b2b2b2b2b2b5d713c4d10ed10ed4e1071f62b5d4dedf42bed00
3f3c103c103c3f3c3f3c11173987052e2b047d10c487052e182b0e7d10c4
0710083c083c0310083c083cb10602435458400d4b09011f098403020918
0d1134002b5d7159313001435c58400a092c1d3909081d1d3c06b8ffdeb2
1d3906b8ffd4b2203906b8ffd4b121392b2b2b2b2b595d00715d0171002b
2b435c58b90006ffc0b2213903b8ffc0b2163903b8ffdeb2103906b8ffde
b2103903b8ffdeb20c3903b8ffdeb10b392b2b2b2b2b2b59012b2b2b435c
584012dd040108141639090814143c090814143c06b8fff6b2183906b8ff
ecb11b392b2b2b2b2b015d59005d2b2b2b2b2b015d712b33113311013301
012301071188b401aae9fe6a01bfdefea17f05bafcbc01b0fe76fd64021f
7afe5b00>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/k 78 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 18 /k put
pop
1283 499 M <12>S 
344 VM?
1 4078 21 <0001003c0000040705c0001e01c7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40363b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a
1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb400f0102
0c0a7317d30000014021233401bb0281002000100138400c11b53f025f02
6f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed00
3f3cfd3c3fedfd5de4111217390111121739870e2e2b0e7d10c401111239
313000383838380138383838005d015d7259592515212637363637363635
34262322060727363633321615140606070606070407fc37021725a39aef
a8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c07ec4e5666b93
9c8a13cfd9eaad58aabca4886131>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/two 21 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 19 /two put
pop
1308 499 M <13>S 
344 VM?
1 2558 12 <0001007cfe51026005d300100065400c2802281002090a1001001209b801
33b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8fff8b40f0f
02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e020eac129d
8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1323001134
272627262733161716151002fd81012b2b223d277a81bc5a4dcffe5101e0
01e1bcb9968a5ad2fbfddaeefef2fe08>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/parenright 12 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 20 /parenright put
pop
1336 499 M <1408>[17  0]xS 
344 VM?
2 3928 65 <0001003602b2038b05d300060061b90000ffc04015143900401439260229
030206020903020501063c01b80165401702053c04003c01060603020838
04dc036c02dc01690708bc0132002101bf018100182b2bf6f4f6f4e41112
3d392f1810ed10ed002feded103c31300171712b2b13230133012303efb9
0161910163b5f702b20321fcdf025500>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/asciicircum 65 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 21 /asciicircum put
pop
1366 499 M <1508>[24  0]xS 
1006 559 M <050B01>[14 41  0]xS 
344 VM?
1 7202 28 <00020055ffe7041905c0001e002a01aeb10602435458b70b1f1801002511
18b8fff6b40f0f065518b8fff4b40d0d065518b8fff040280c0c06551811
0c0d0d065511100c0c06551118112c2b0b281e0f0e1f0e4f0e030e0e1400
50010101b8ffc0400d1011065501041e1c0d221e1405003fed3fedc42b5d
3212392f5ded3201111239392f2b2b2f2b2b2b10cdd4cd10ddc531301bb1
0202435458b70b1f180100251118b8ffeab40f0f025518b8ffea402a0d0d
025518110c0c0c02551118112c2b0b281e0f0e1f0e4f0e030e0e14005001
0101041e1c0d221e1405003fed3fedc45d3212392f5ded3201111239392f
2b2f2b2b10cdd4cd10ddc531301b40343a1a4c1640235b16572366036c16
6d1a67237a1a7d1e8c1a8b1e9a16a91abc1aea16e620f620133d169e16ad
16033a2964060227baffe00023ffe0401821200620281e4f0e5f0e020e0e
1c221e140501d350000100b80268b4041e1c0d1fba0139000b0138401118
40212334301801001810180218902c01b80138b400b5257311b8ffc0400e
212334201140110211902bc78b182b10f65d2bedf4ed10f65d712beded00
3fedfd5de43fed12392f5ded31300138383838005d71015d595913371616
33323e023534270606232202353400333216121110020623222601342623
220615141633323670ad167c61537d50360136bb6db6fc0107c68fed7b7a
f1a2acda02cba57478b2a97c7da10153107a6e4c7fd8700c18566b0108d8
df01109afee3fef2fee7feb3aebf03349bb6c49c8cafaf00>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/nine 28 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 22 /nine put
pop
1089 559 M <0D1608>[28 28  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 609 m 1409 609 l 1409 673 l 743 673 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 673 m 1409 673 l 1409 609 l 743 609 l 743 673 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 825 655 M <050B01>[14 42  0]xS 
344 VM?
1 5900 25 <0002004dffe7041505c0001d002a014fb10202435458401f0f011f015f01
03011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff44019
0d0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd
2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31301b402d6b19014407
4015441944205a1254206b03640764086a1264207408751c8508861cd608
d4161107200d0d065527b8ffe0b40d0d065523b8ffe0400b0d0d06552120
0d0d065507b8ffe0b42720232021b8ffe04011281e400d500d020d0d141b
01d35f000100b802684009051e1b05221e140d01b80138401200b5257310
40212334301001001010100210b8fff0b70c0c065510902c0aba0138001e
013940163f175f176f177f170417160c0c065517160d0d065517b80224b3
2bc78b182b10f62b2b5deded10f62b5d712bedf4ed003fed3fedfd5de411
12392f5ded313001383838382b2b2b2b015d005d59010726272623220706
060736363332121514060623220011103736333216011416163332363534
2623220603fbb3182c496b564155620241bc67b4fd77d084e1fee49d89e8
adddfd374f8e4e72a4a27b7aaa04530e6a304d303eeedc6360fef7d28aed
7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/six 25 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 23 /six put
pop
908 655 M <0C1708>[28 28  0]xS 
978 655 M <0908>[29  0]xS 
1021 655 M <050B01>[14 42  0]xS 
1104 655 M <0C0D08>[28 28  0]xS 
1174 655 M <1108>[29  0]xS 
344 VM?
2 13680 89 <0001001a000003e80426000a01eab1020243545840170508000a08060106
0a0005090805010205240f0f0255052f2bddcd10ddcd113333003f3f3f12
3931301bb7350501002211390ab8ffde400d11390916121c340816121c34
02b8ffeab3121c3401b8ffeab3121c340ab8ffd840091e213400281e2134
0ab8ffe8400922253400162225340ab8ffda407e282e340020282e340f0c
29002809260a3900350a4800470a56015602590858096601660269086909
78007701770279087809770a870187028603890788088a099d009809910a
ac00a20abd00b707b10ac900c50ada00d50aec00e30afb00f40a2c0a0005
0a1800160a2800260a370a4f00400a09054012163405400b0d34b1060243
5458400905010008060106000ab8fff4400f0d0d06550a000c0d0d065500
050908b8fff440120d0d0655080501020c0d0d06550205050c0b1112392f
dd2bcd10dd2bcd10cd2bcd2b002f3f3f11123931301b40370a0708082509
0a1409090a0003020225010014010100050a0a000a09080802020106070a
09030001052f0c010c22084040400980090209b8011bb5400580050205b8
011b400920024001220bead2182b10f6ed1a19fd5dfd5d1a18ede45d1112
3939123939003f3c103c103c3f3c113987052e2b877dc4872e182b877dc4
593130002b2b01715d2b2b2b2b2b2b2b2b2b2b2b2b005d59210133131617
363713330101aefe6cbee4251f182becb9fe6e0426fd84676f54760288fb
da00>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/v 89 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 24 /v put
pop
1217 655 M <18>S 
1242 655 M <0F>S 
1270 655 M <03>S 
1298 655 M <0A>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 732 m 1409 732 l 1409 935 l 743 935 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 935 m 1409 935 l 1409 732 l 743 732 l 743 935 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 2066 VM?
2 10014 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>/TTE1AB1D78t00 AddT42Char 
2 6312 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>/TTE1AB1D78t00 AddT42Char 
2 14222 90 <00010006000005b704260012041db10202435458b90012fff440110d0d02
5507060d0d025500060d0d02550ab8ffd4b40c0d025504b8ffe8400b0c0d
025511200c0d02550ab8ffc0b40e10025504b8ffc0402f0e10025511400e
100255040a110301000c06070601060f0a000a0d0c060c0c02550c110102
040a04110a0c0c025511b8fff8b40d0d0255112f2b2bcdcd10d6cd10d42b
cd003f3f3f3f3f111217393130002b2b2b2b2b2b012b2b2b1b40160f1401
2a04290a024a115b118e110311200d0d06550ab8ffe0b40d0d065504b8ff
e0b40d0d065511b8fff040091f2134101c1d273409b8fff040b71f243404
060c0913061b09191205040004060b090b0e08121000130314071c081b0b
1d0e240025072a082b0e340035073a083b0e4403470640074d084b0b430f
47114a125b0f52126b076408671279067a077408b906ba0fb612f506fb09
280b112800280d270e280f27122f1438003712770886089803970ca701a8
02a80ba60cb500b606ba0ec804d606d909e804e80fe712f406fa091c0b06
0d0d06550c060d0d065510060d0d06550e060d0d06550f060d0d065512b1
0602435458401b0a0e0f0412001108070825070f250e122500000e07030d
010c250db8ffd640370b0b06550d0225012a0b0b0655010d011413060a0b
11260a2b115404520a5c116c117c118a110a110a040300010f0a000a0c06
07060106003f3f3f3f3f111217395d01111239392f2bf42f2bf411121739
10e410e410e41112391112391112391b40140305050206070705090a0a08
0b0c0c0a1011110fb8ff4bb305001220b8ff4940660a0f0e20c311070820
071112122b0507140505070e0a0c0c250d0e140d0d0e08110f0f2b0a0814
0a0a080005020225010014010100000201071204080f110c0e0d0a110a04
03120d0c0c0808070702020106120f0f0e0e000a14f6100d01600d700d80
0d030db801a7400a204f0a016f0a7f0a020ab8025540094f11016f117f11
0211b80255400b1005016005700580050305b801a7b501f613f666182b4e
10f4194df45d5d18fd5d71fd5d711a19fd5d5d18e6003f3c103c103c3f3c
103c103c103c103c1217390111123939123939113939123939874d2e2b87
7dc4872e182b877dc4872e182b877dc4872e182b877dc42b2b2b870e10c4
070e103c070e103c870e10c4870e10c44bb01f5358b40d200c2002bcffe0
0001ffe0000effd0b400300f2012b8ffe0013838383838383838594bb034
5358b90008ffd0b10730013838594bb021534bb033515a58b90008ffe0b1
0720013838594bb012534bb01e515a58b9000effd0b60f200d200c2008b8
ffd0b2073012b8ffe0b2003802baffe00001ffe001383838383838383838
38594bb012534bb017515a58b90011ffe0b30a2004200038383859593130
01435c58b9000effd4b61239002c123900b8ffd4b113392b2b2b592b2b2b
2b2b5d71722b2b2b002b2b2b715d015d5921013313173637133313173713
330123032703014bfebbbaa93f0433a9b99f353db6affeb4bba929d70426
fd9be411ca026efd98cbcd0266fbda027cb5fccf>/TTE1AB1D78t00 AddT42Char 
1 14402 51 <0002009e000004fd05ba000d001800b2402c65116b14024b104b145b105b
14040b0c1e0f0e0e0017181e02010200081226080a0d0d025508100b0b06
5508b8fff4401b0c0c0655081a201a01201a011a180d2001200001002010
10025500b8fff6b40f0f025500b8fff6b40d0d025500b8fffa400b0c0c02
55000c0b0b065500b8fffab40c0c065500b8fff0400a0d0d0655005d193b
5c182b10f62b2b2b2b2b2b2b5d3cfd3c4e10715df62b2b2b4ded003f3f3c
fd3c12392f3cfd3c3130015d005d33112132171e02151402212111112132
36353426272623219e0229924d6c9259eefec9fe88017bbc9e5d4c3184fe
8905ba0e1265b66dbbfefdfdac03018c7f5c83150d00>/TTE1AB1D78t00 AddT42Char 
2 7594 75 <00010087000003e805ba00140161b90016ffc0b315173403b8ffe0400e0d
0d0655250435034503ba0d0403b8ffe0403a1719341708110c1114030501
000f1c0507140b0a0c250940333634ff0901c0090116400b0b0255164010
10025509281010025509140e0e025509b8ffec40110d0d025509040c0c02
55091a0b0b025509b8fff6400b0b0b065509141010065509b8fff8400b0d
0d0655090a0f0f065509b8fff6b60c0c0655094e16b8ffc04017343634b0
16f016027016a016b016ff1604160214250100b8ffc04010333634f00001
00002000d000e0000400b8fffab41010025500b8fffa40170e0e02550004
0c0c025500080b0b025500040b0b065500b8fffa40160f0f065500020c0c
065500020d0d0655004e154750182b10f62b2b2b2b2b2b2b2b5d712b3cfd
3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b5d712bed003f3c3fed3f1139
113901123931304379400e060e07250e060c1b010d080f1b01002b012b2b
81002b5d2b012b33113311363332161615112311342623220606151187b4
7ec076ae4bb4756b508d3c05bafdf2925da49cfd5f02a1877b538e7dfdbb
>/TTE1AB1D78t00 AddT42Char 
2 8014 76 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/n 81 def
/e 72 def
/w 90 def
/P 51 def
/h 75 def
/i 76 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 25 /n put
dup 26 /e put
dup 27 /w put
dup 28 /P put
dup 29 /h put
dup 30 /i put
pop
794 788 M <191A1B1C1D1E08>[28 27 37 33 28 11  0]xS 
972 788 M <0908>[29  0]xS 
1015 788 M <011D1E08>[28 27 12  0]xS 
1095 788 M <0E>S 
1112 788 M <0A>S 
344 VM?
1 3052 15 <000100aafede018300cd000a004eb50a030007ab06b80150402601033c02
02010a013c000a020301033c000638073a4f005f006f007f00a0000500a0
0ba198182b10f45df4e410ed3c103c003fed3c103c10ed10fded01111239
31303335331514060727363637b6cd505732393603cdcd718b264d19615b
>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/comma 15 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 31 /comma put
pop
1140 788 M <1F08>[14  0]xS 
344 VM?
2 4962 69 <00020086ffe8041f05ba0010001d0180409b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b1824d00b01100b400b60
0b800b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6b40c0c02
550bb8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8
fff4402f0d0d06550b7401113300040c0c025500040d0d06550033032502
02c001019001a001b001f001041f013f014f010301b8fffeb41010025501
b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b0255010c0b
0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c06550114
0d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71723c4d10
fdf42b2be410fd2b2b2b2b2b2b2b2b5d71ed003fed3f3fed3f1139111239
3130005d015d7172007121231133113633321e0215100023222703141716
333236353426232206012da7b472b162af7140fef2bdbc6b0234559176ac
a57576ac05bafdf58f4f8fca73feeffed69d0196bf558bcdcbd0c6cd>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/b 69 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 32 /b put
pop
1168 788 M <191A1B201E19>[27 28 36 28 11  0]xS 
1326 788 M <14>S 
344 VM?
1 7858 30 <000200aafede018304260003000e0085402f730b830b930ba30bf00b0500
0b01260a370a460a560a650ab50ae20a070b0a0e0704033c01073c060605
0e040bab0ab801504023053c040106040a028100000506073c040a380b3a
052f043f040220040104a10fa198182b10f45d713cf4e410fd3c103c10ed
003f3f10fdfded103c103c10ed10ed011112390010c93130017100727113
3533150335331514060727363637b6cdcdcd5057323936030359cdcdfca7
cdcd718b264d19615b00>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/semicolon 30 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 33 /semicolon put
pop
1343 788 M (!)S 
812 848 M <18>S 
837 848 M <0F>S 
865 848 M <03>S 
893 848 M <0A08>[27  0]xS 
934 848 M <0908>[29  0]xS 
977 848 M <011D1E08>[28 28 11  0]xS 
1058 848 M <0E>S 
1075 848 M <18>S 
344 VM?
2 3616 62 <0001008bfe69021805ba00070046402b04032b01021005062b0007120302
020706ae0405250100060c0c025500080909025520000100ac089d68182b
10f65d2b2b3cfd3cf43c3c103c003f3cfd3c3f3cfd3c3130131121152311
33158b018dd9d9fe69075195f9d99500>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/bracketleft 62 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 34 /bracketleft put
pop
1100 848 M (")S 
1113 848 M <0F>S 
344 VM?
2 3828 64 <00010027fe6901b405ba0007003f401704052b07061003022b0001120605
050102ae0403250700b8ffec400a0c0c025500ac099b5a182b10f42b3cfd
3cf43c3c103c003f3cfd3c3f3cfd3c3130012135331123352101b4fe73d9
d9018dfe699506279500>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/bracketright 64 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 35 /bracketright put
pop
1141 848 M (#)S 
1155 848 M <1F>S 
1169 848 M <050B01>[14 42  0]xS 
1252 848 M <0C17>[28  0]xS 
1308 848 M <14>S 
1325 848 M (!)S 
812 908 M <18>S 
837 908 M <0A>S 
865 908 M <03>S 
893 908 M <0A08>[27  0]xS 
934 908 M <0908>[29  0]xS 
977 908 M <011D1E08>[28 28 11  0]xS 
1058 908 M <0E>S 
1075 908 M <18>S 
1100 908 M (")S 
1113 908 M <0A>S 
1141 908 M (#)S 
1155 908 M <1F08>[14  0]xS 
1183 908 M <050B01>[14 42  0]xS 
1266 908 M <0D0F>[28  0]xS 
1322 908 M <14>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 801 1026 m 1076 982 l 1350 1026 l 1076 1069 l 801 1026 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 801 1026 m 1076 982 l 1350 1026 l 1076 1069 l 801 1026 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 922 1040 M <191A1B1C1D1E08>[28 28 36 33 28 11  0]xS 
1100 1040 M <090908>[29 30  0]xS 
344 VM?
1 4632 22 <00010056ffe6041605c0002b0159b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4028050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d
0e040701230d0c01b802a4b340000100bb01180029000d0135b40c0c1504
18ba02a4001902684027151e1c05041e290d12735f206f200220180d0d06
55208007732640212334302601002610260226b8fff4b70d0d065526902d
18b80138b219d301ba01380000ffc0400b212334200040000200902cb801
92b18b182b10f65d2bedf4ed10f62b5d712bedf42b5ded003fed3fedfde4
1112392fed10fd5de411123901111217393130013838015d005d01715913
371616333236353426232207371633323635342623220607273636333216
1615140607161615140023222656b41f956b7fafa27d334c14120b73b886
6a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca114
9e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/three 22 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 36 /three put
pop
1173 1040 M <2413>[27  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 1100 m 1409 1100 l 1409 1164 l 743 1164 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 1164 m 1409 1164 l 1409 1100 l 743 1100 l 743 1164 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 843 1147 M <191A1B201E1908>[28 28 36 28 11 28  0]xS 
1015 1147 M <0908>[30  0]xS 
1059 1147 M <191A1B1C1D1E08>[27 28 36 34 27 12  0]xS 
1236 1147 M <1108>[30  0]xS 
1280 1147 M <0F>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 1194 m 1409 1194 l 1409 1258 l 743 1258 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 1258 m 1409 1258 l 1409 1194 l 743 1194 l 743 1258 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 344 VM?
2 13266 88 <00010083ffe803e004260018014fb9001affc0400915173402201316340f
b8fff040331214342b1301240813160c0113160b06000a111c030b003316
251817403336341a401010025517281010025517120e0e025517b8ffec40
0b0d0d025517040c0c025517b8fff4400b0b0b065517141010065517b8ff
f8400b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c0170117
4e1ab8ffc04015343634b01af01a02701aa01ab01aff1a041a0c2509b8ff
c04010333634f0090100092009d009e0090409b8fff8b41010025509b8ff
f840110e0e025509040c0c0255090a0b0b065509b8fff640160f0f065509
020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b2b2b5d712b
ed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfde4003fed3f3f3c3939
0111123931304379401a04100e0d0f0d0206070806080508030610040c1b
000d08111b00002b012b2a2a81005d012b2b2b2135062322262627263511
3311141716163332363635113311033f7cd55ea34f100bb40b116e51518e
3bb49cb4486d4f35730292fdb38d314751538f880239fbda>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/u 88 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 37 /u put
pop
756 1240 M <04250B>[25 28  0]xS 
851 1240 M <0A08>[28  0]xS 
892 1240 M <0908>[30  0]xS 
936 1240 M <191A1B1C1D1E>[27 28 36 34 27  0]xS 
344 VM?
1 2724 13 <00010040036302d505d300180086404a0b010b0a1b011b0a040a090c0e0f
101107060b01021816151413070004030817120d07070605181716151312
11100f0d0c0b1404070308010a06050b00001020140114bf0605000ba506
b80195400d05a50040111334001919708c182b4e10f42b4df4fde4003f3c
fd5d3c392f3c1217391217390111121739121739111217393130005d1337
1617262733060736371706071617072627060727363726402e9f48130191
031467852e7f7a3d6f783a4f4a387674328104ad8e3829b5446395342c8e
2a0e3588554f888d4a558f2e1900>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/asterisk 13 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 38 /asterisk put
pop
1100 1240 M (&)S 
1119 1240 M <0A>S 
344 VM?
2 15352 91 <0001000f000003f10426001001dcb1020243545840150f010b0604020906
02060d0a000a0f180f0f02550f2f2b003f3f3f3f11173931301bb70f1201
0f22193906b8ffde405019395a0f96049608990e9a0fc005c006c007cb0f
090f4016391a031309150d1a1035013a0b81018e0b082f1257045907590b
580e9701980a980bb702b80cc80bca0ecc10da03d509d10ddb10e50a1212
b10602435458400b0c0012110f180d10065506b8ffe8400e0d1006550f06
00020d000a0a0206003f3c3f3c111239392b2b01111239391b4066060603
0708090901060609050403030b0f0f100e0d0d010f0f0d100b010009020d
0b030c100a060f020f0a10c600c60902102500091400000903020dc60d01
0d250c03140c0c030a090903030206100d0d0c0c000a4f120112490d7e0c
220a0f6106097e400ab8011bb74006500680060306b80243400e20037e02
224f00010049117cc4182b10f65df4ed1a19fd5dfd1a18ed10e510f4ede6
5d003f3c103c103c3f3c103c103c87052e2b5d877dc4872e182b5d7d10c4
00111239390f0f8708c4870e10c408c4870e10c4c408c4070e103c3c083c
59313001435c58b40e181d390bb8ffde400b1d390c221739032217390bb8
ffdeb2213910b8ffc0400a15390122213909401c392b2b2b2b2b2b2b2b59
5d71002b5d2b2b015d5933010133171617363737330101230327010f0184
fe99e1a32e1c2c25b3d7fe91018bddda3afee9022801fef947304233fbfe
0cfdce014a59fe5d>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/x 91 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 39 /x put
pop
1147 1240 M (')S 
1172 1240 M <16>S 
1200 1240 M <1A>S 
344 VM?
1 6370 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/seven 26 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 40 /seven put
pop
1227 1240 M ($\(\(\026)[28 28 28  0]xS 
1339 1240 M ( )S 
1366 1240 M <16>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 1283 m 1409 1283 l 1409 1347 l 743 1347 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 1347 m 1409 1347 l 1409 1283 l 743 1283 l 743 1347 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 951 1330 M <0102>[28  0]xS 
990 1330 M <03>S 
1018 1330 M <040506070508>[25 13 28 17 14  0]xS 
1129 1330 M <0908>[29  0]xS 
1172 1330 M <0F>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 1407 m 1409 1407 l 1409 1471 l 743 1471 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 1471 m 1409 1471 l 1409 1407 l 743 1407 l 743 1471 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 764 1454 M <050B01>[14 41  0]xS 
847 1454 M <131708>[28 28  0]xS 
917 1454 M <0908>[29  0]xS 
960 1454 M <04250B>[25 28  0]xS 
1054 1454 M <0A>S 
1082 1454 M <11>S 
1111 1454 M <0A>S 
1139 1454 M (')S 
1164 1454 M <16>S 
1192 1454 M <1A>S 
1220 1454 M ($\(\(\026)[28 27 28  0]xS 
1331 1454 M ( )S 
1359 1454 M <16>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 1509 m 1409 1509 l 1409 1705 l 743 1705 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 1705 m 1409 1705 l 1409 1509 l 743 1509 l 743 1705 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 752 1561 M <050B01>[14 42  0]xS 
836 1561 M <241608>[27 28  0]xS 
905 1561 M <09080E080E>[29 14 17 14  0]xS 
995 1561 M <18>S 
1020 1561 M <0F>S 
1048 1561 M <03>S 
1076 1561 M <0A08>[28  0]xS 
1118 1561 M <101008>[29 29  0]xS 
1190 1561 M <0D>S 
1218 1561 M <14081108>[16 14 30  0]xS 
1291 1561 M <12>S 
1316 1561 M <0A>S 
1344 1561 M <1408>[17  0]xS 
1375 1561 M <1508>[23  0]xS 
759 1621 M <0E>S 
775 1621 M <050B01>[14 42  0]xS 
859 1621 M <131708>[27 28  0]xS 
928 1621 M <1108>[29  0]xS 
971 1621 M <18>S 
996 1621 M <0F>S 
1024 1621 M <03>S 
1052 1621 M <0A>S 
1080 1621 M <1408>[16  0]xS 
1110 1621 M <1508>[24  0]xS 
1147 1621 M <0E0E>[17  0]xS 
1181 1621 M <18>S 
1206 1621 M <0F>S 
1234 1621 M <03>S 
1261 1621 M <0A>S 
344 VM?
1 8290 33 <0001007000e2043b04c30006005a400c80028f040204020103070502bb02
5a00010004025ab2054001ba015000050150401500ab06ab2003033c0600
1a08200501057507575a182b10e65d4e10f63c4ded00192f1aedededed18
1a10ed10ed01111217393130005d01013501013501043bfc350301fcff03
cb0281fe61b3013f013cb3fe6600>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/greater 33 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 41 /greater put
pop
1289 1621 M (\)\))[29  0]xS 
1348 1621 M <0C>S 
1375 1621 M <1408>[17  0]xS 
1011 1681 M <1108>[29  0]xS 
1054 1681 M <12>S 
1079 1681 M <0F>S 
1107 1681 M <1414>[16  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 1767 m 1409 1767 l 1409 1831 l 743 1831 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 1831 m 1409 1831 l 1409 1767 l 743 1767 l 743 1831 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 825 1813 M <050B01>[14 42  0]xS 
908 1813 M <0D0F08>[28 28  0]xS 
978 1813 M <0908>[29  0]xS 
1021 1813 M <050B01>[14 42  0]xS 
1104 1813 M <241608>[28 28  0]xS 
1174 1813 M <1108>[29  0]xS 
1217 1813 M <18>S 
1242 1813 M <0A>S 
1270 1813 M <03>S 
1298 1813 M <0A>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 743 1861 m 1409 1861 l 1409 1984 l 743 1984 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 743 1984 m 1409 1984 l 1409 1861 l 743 1861 l 743 1984 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 774 1907 M <050B01>[14 42  0]xS 
858 1907 M <0D1608>[28 27  0]xS 
927 1907 M <09080E>[30 13  0]xS 
987 1907 M <050B01>[14 42  0]xS 
1070 1907 M <0D0F08>[28 28  0]xS 
1140 1907 M <1108>[29  0]xS 
1183 1907 M <050B01>[14 42  0]xS 
1266 1907 M <1317>[28  0]xS 
1322 1907 M <1408>[17  0]xS 
1353 1907 M <1508>[23  0]xS 
861 1967 M <0E0E>[16  0]xS 
894 1967 M <050B01>[14 41  0]xS 
977 1967 M <0D0F08>[28 28  0]xS 
1047 1967 M (\)\)\010)[29 29  0]xS 
1119 1967 M <0C>S 
1147 1967 M <14081108>[16 14 30  0]xS 
1220 1967 M <12>S 
1245 1967 M ($)S 
1273 1967 M <14>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 208 1130 m 603 1130 l 603 1252 l 208 1252 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 208 1252 m 603 1252 l 603 1130 l 208 1130 l 208 1252 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 275 1175 M <18>S 
300 1175 M (")S 
314 1175 M <0A>S 
342 1175 M <23080908>[14 14 29  0]xS 
413 1175 M <18>S 
438 1175 M <0A>S 
465 1175 M <03>S 
493 1175 M <0A>S 
521 1175 M (!)S 
282 1235 M <18>S 
307 1235 M (")S 
321 1235 M <0F>S 
349 1235 M <23080908>[14 13 30  0]xS 
420 1235 M <18>S 
445 1235 M <0F>S 
472 1235 M <03>S 
500 1235 M <0A>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 208 1288 m 603 1288 l 603 1361 l 208 1361 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 208 1361 m 603 1361 l 603 1288 l 208 1288 l 208 1361 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 340 1339 M <071A05250719>[16 28 14 28 16  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 576 m 1076 596 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 593 m 1076 609 l 1060 593 l 1091 593 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 673 m 1076 720 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 717 m 1076 732 l 1060 717 l 1091 717 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 935 m 1076 970 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 967 m 1076 982 l 1060 967 l 1091 967 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 1069 m 1076 1088 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 1085 m 1076 1100 l 1060 1085 l 1091 1085 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 1164 m 1076 1181 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 1178 m 1076 1194 l 1060 1178 l 1091 1178 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 1258 m 1076 1271 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 1268 m 1076 1283 l 1060 1268 l 1091 1268 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 1347 m 1076 1395 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 1392 m 1076 1407 l 1060 1392 l 1091 1392 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 1471 m 1076 1497 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 1494 m 1076 1509 l 1060 1494 l 1091 1494 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 1705 m 1076 1754 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 1751 m 1076 1767 l 1060 1751 l 1091 1751 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 1831 m 1076 1849 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 1846 m 1076 1861 l 1060 1846 l 1091 1846 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 801 1026 m 405 1026 l 405 1117 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 421 1114 m 405 1130 l 390 1114 l 421 1114 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 405 1252 m 405 1277 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 419 1275 m 405 1288 l 392 1275 l 419 1275 l CP 
eofill
GSE
GpPBeg1
0 0 0 SC
NP 1408 513 m 1429 509 l 1431 510 l 1430 512 l 1409 516 l 1407 515 l 1408 513 l CP 
1444 506 m 1462 502 l 1464 501 l 1466 503 l 1465 504 l 1463 505 l 1444 509 l 1442 507 l 1444 506 l CP 
1479 498 m 1487 497 l 1499 494 l 1501 495 l 1500 497 l 1488 500 l 1479 501 l 1478 500 l 1479 498 l CP 
1514 491 m 1534 488 l 1535 488 l 1537 489 l 1535 490 l 1535 491 l 1515 494 l 1513 493 l 1514 491 l CP 
1550 485 m 1556 484 l 1570 481 l 1572 483 l 1571 484 l 1557 487 l 1550 488 l 1548 487 l 1550 485 l CP 
1585 479 m 1597 477 l 1606 476 l 1608 477 l 1606 479 l 1598 480 l 1586 482 l 1584 481 l 1585 479 l CP 
1621 473 m 1635 471 l 1642 471 l 1643 472 l 1642 474 l 1636 474 l 1621 476 l 1619 475 l 1621 473 l CP 
1656 469 m 1670 467 l 1677 466 l 1679 468 l 1678 469 l 1671 470 l 1657 472 l 1655 470 l 1656 469 l CP 
1692 465 m 1703 464 l 1713 463 l 1715 464 l 1713 466 l 1703 467 l 1693 468 l 1691 467 l 1692 465 l CP 
1728 462 m 1733 461 l 1748 461 l 1749 461 l 1751 462 l 1749 464 l 1748 464 l 1734 464 l 1728 465 l 1727 463 l 1728 462 l CP 
1764 460 m 1785 459 l 1787 461 l 1785 462 l 1764 463 l 1763 461 l 1764 460 l CP 
1800 459 m 1816 458 l 1821 458 l 1823 460 l 1821 461 l 1817 461 l 1800 462 l 1799 460 l 1800 459 l CP 
1836 458 m 1843 458 l 1857 458 l 1859 460 l 1857 461 l 1843 461 l 1836 461 l 1835 460 l 1836 458 l CP 
1872 459 m 1893 459 l 1895 460 l 1893 462 l 1872 462 l 1871 460 l 1872 459 l CP 
1908 459 m 1923 459 l 1929 459 l 1931 460 l 1929 462 l 1923 462 l 1908 462 l 1907 460 l 1908 459 l CP 
1944 459 m 1952 459 l 1953 460 l 1952 462 l 1944 462 l 1943 460 l 1944 459 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1979 460 m 1952 447 l 1952 474 l 1979 460 l CP 
stroke
2006 459 m 1979 446 l 1979 473 l 2006 459 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1408 639 m 1429 637 l 1431 638 l 1430 640 l 1409 642 l 1407 641 l 1408 639 l CP 
1444 635 m 1454 634 l 1465 632 l 1467 634 l 1465 635 l 1454 637 l 1445 638 l 1443 636 l 1444 635 l CP 
1480 631 m 1498 629 l 1501 628 l 1503 630 l 1501 631 l 1498 631 l 1480 634 l 1479 632 l 1480 631 l CP 
1516 627 m 1537 625 l 1538 626 l 1537 628 l 1516 630 l 1514 628 l 1516 627 l CP 
1552 623 m 1573 622 l 1574 623 l 1573 625 l 1552 626 l 1550 625 l 1552 623 l CP 
1588 620 m 1609 619 l 1610 621 l 1609 622 l 1588 623 l 1586 622 l 1588 620 l CP 
1624 618 m 1627 618 l 1645 617 l 1646 619 l 1645 620 l 1627 621 l 1624 621 l 1622 620 l 1624 618 l CP 
1660 617 m 1669 617 l 1681 617 l 1682 618 l 1681 620 l 1669 620 l 1660 620 l 1658 619 l 1660 617 l CP 
1696 617 m 1710 617 l 1717 617 l 1718 618 l 1717 620 l 1710 620 l 1696 620 l 1694 618 l 1696 617 l CP 
1732 617 m 1752 618 l 1753 618 l 1754 619 l 1752 621 l 1751 621 l 1731 620 l 1730 618 l 1732 617 l CP 
1768 619 m 1772 619 l 1789 620 l 1790 622 l 1788 623 l 1772 622 l 1767 622 l 1766 620 l 1768 619 l CP 
1804 622 m 1813 623 l 1824 624 l 1826 626 l 1824 627 l 1813 626 l 1803 625 l 1802 623 l 1804 622 l CP 
1839 626 m 1854 628 l 1860 629 l 1861 631 l 1860 632 l 1853 631 l 1839 629 l 1838 627 l 1839 626 l CP 
1875 632 m 1894 635 l 1896 635 l 1897 637 l 1895 638 l 1894 638 l 1874 634 l 1873 633 l 1875 632 l CP 
1910 639 m 1915 640 l 1931 643 l 1932 645 l 1930 646 l 1914 642 l 1910 642 l 1909 640 l 1910 639 l CP 
1945 647 m 1955 650 l 1966 653 l 1967 655 l 1965 656 l 1955 653 l 1945 650 l 1944 648 l 1945 647 l CP 
1980 657 m 1996 662 l 2000 663 l 2001 665 l 1999 666 l 1996 665 l 1979 660 l 1978 658 l 1980 657 l CP 
2014 668 m 2017 669 l 2034 676 l 2035 678 l 2033 678 l 2016 672 l 2013 671 l 2012 669 l 2014 668 l CP 
2048 681 m 2058 685 l 2067 689 l 2068 691 l 2066 692 l 2057 688 l 2047 684 l 2046 682 l 2048 681 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2103 707 m 2084 683 l 2073 708 l 2103 707 l CP 
stroke
2127 719 m 2109 695 l 2097 719 l 2127 719 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1362 771 m 1381 762 l 1383 762 l 1382 764 l 1363 773 l 1361 773 l 1362 771 l CP 
1394 755 m 1413 746 l 1415 747 l 1414 749 l 1395 758 l 1393 757 l 1394 755 l CP 
1427 740 m 1446 732 l 1448 732 l 1447 734 l 1428 743 l 1426 742 l 1427 740 l CP 
1460 726 m 1467 722 l 1479 717 l 1481 718 l 1480 720 l 1468 725 l 1461 728 l 1459 728 l 1460 726 l CP 
1493 712 m 1512 703 l 1514 704 l 1513 706 l 1494 714 l 1492 713 l 1493 712 l CP 
1526 698 m 1546 690 l 1548 691 l 1547 693 l 1527 701 l 1525 700 l 1526 698 l CP 
1560 685 m 1568 682 l 1580 678 l 1581 678 l 1581 680 l 1569 685 l 1561 688 l 1559 687 l 1560 685 l CP 
1594 672 m 1613 665 l 1615 666 l 1614 668 l 1595 675 l 1593 674 l 1594 672 l CP 
1628 661 m 1648 654 l 1650 655 l 1649 657 l 1629 663 l 1627 662 l 1628 661 l CP 
1662 649 m 1665 648 l 1682 643 l 1684 644 l 1683 646 l 1666 651 l 1663 652 l 1661 651 l 1662 649 l CP 
1696 639 m 1712 634 l 1717 633 l 1718 634 l 1717 636 l 1713 637 l 1697 642 l 1695 641 l 1696 639 l CP 
1731 629 m 1751 623 l 1753 625 l 1752 626 l 1732 632 l 1730 631 l 1731 629 l CP 
1766 620 m 1786 615 l 1788 616 l 1787 618 l 1767 623 l 1765 622 l 1766 620 l CP 
1801 611 m 1805 610 l 1821 607 l 1823 608 l 1822 610 l 1806 613 l 1802 614 l 1800 613 l 1801 611 l CP 
1836 604 m 1851 601 l 1857 599 l 1858 601 l 1857 602 l 1852 603 l 1837 607 l 1835 605 l 1836 604 l CP 
1871 597 m 1892 593 l 1894 594 l 1893 596 l 1872 600 l 1870 599 l 1871 597 l CP 
1907 591 m 1928 587 l 1929 589 l 1928 590 l 1907 594 l 1906 592 l 1907 591 l CP 
1943 585 m 1963 582 l 1965 584 l 1964 585 l 1943 588 l 1941 587 l 1943 585 l CP 
1978 581 m 1986 580 l 1999 578 l 2001 580 l 1999 581 l 1986 583 l 1979 584 l 1977 582 l 1978 581 l CP 
2014 577 m 2030 575 l 2035 575 l 2037 576 l 2035 578 l 2031 578 l 2014 580 l 2013 578 l 2014 577 l CP 
2050 574 m 2071 572 l 2073 573 l 2071 575 l 2050 577 l 2049 575 l 2050 574 l CP 
2086 571 m 2107 570 l 2109 572 l 2107 573 l 2086 574 l 2085 573 l 2086 571 l CP 
2122 569 m 2143 569 l 2144 570 l 2143 572 l 2122 572 l 2120 571 l 2122 569 l CP 
2158 568 m 2164 568 l 2179 568 l 2180 570 l 2179 571 l 2164 571 l 2158 571 l 2156 570 l 2158 568 l CP 
2194 568 m 2209 568 l 2215 568 l 2216 570 l 2215 571 l 2209 571 l 2194 571 l 2192 570 l 2194 568 l CP 
2230 568 m 2251 569 l 2252 570 l 2251 572 l 2230 571 l 2228 570 l 2230 568 l CP 
2266 569 m 2287 570 l 2288 571 l 2287 573 l 2266 572 l 2264 571 l 2266 569 l CP 
2302 570 m 2323 571 l 2324 573 l 2323 574 l 2302 573 l 2300 572 l 2302 570 l CP 
2338 572 m 2359 573 l 2360 575 l 2359 576 l 2338 575 l 2336 573 l 2338 572 l CP 
2374 574 m 2391 575 l 2395 575 l 2396 577 l 2395 578 l 2391 578 l 2374 577 l 2372 575 l 2374 574 l CP 
2410 577 m 2431 578 l 2432 580 l 2431 581 l 2410 580 l 2408 578 l 2410 577 l CP 
2446 579 m 2467 581 l 2468 583 l 2466 584 l 2446 582 l 2444 581 l 2446 579 l CP 
2482 582 m 2485 583 l 2503 584 l 2504 586 l 2502 587 l 2485 586 l 2481 585 l 2480 584 l 2482 582 l CP 
2517 586 m 2538 588 l 2540 589 l 2538 591 l 2517 589 l 2516 587 l 2517 586 l CP 
2553 589 m 2574 591 l 2576 593 l 2574 594 l 2553 592 l 2552 591 l 2553 589 l CP 
2589 593 m 2610 595 l 2611 597 l 2610 598 l 2589 596 l 2588 594 l 2589 593 l CP 
2625 597 m 2633 598 l 2646 599 l 2647 601 l 2646 602 l 2633 600 l 2625 600 l 2623 598 l 2625 597 l CP 
2661 601 m 2682 603 l 2683 605 l 2681 606 l 2660 604 l 2659 602 l 2661 601 l CP 
2697 605 m 2717 607 l 2719 609 l 2717 610 l 2696 608 l 2695 606 l 2697 605 l CP 
2732 609 m 2736 609 l 2753 611 l 2754 613 l 2753 614 l 2736 612 l 2732 612 l 2731 610 l 2732 609 l CP 
2768 613 m 2789 615 l 2790 617 l 2789 618 l 2768 616 l 2766 614 l 2768 613 l CP 
2804 617 m 2825 619 l 2826 621 l 2824 622 l 2803 620 l 2802 618 l 2804 617 l CP 
2840 621 m 2844 622 l 2860 623 l 2862 625 l 2860 626 l 2844 625 l 2839 624 l 2838 622 l 2840 621 l CP 
2875 625 m 2896 627 l 2898 629 l 2896 630 l 2875 628 l 2874 626 l 2875 625 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2927 632 m 2901 616 l 2899 643 l 2927 632 l CP 
stroke
2954 635 m 2928 619 l 2925 646 l 2954 635 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1338 830 m 1358 823 l 1360 824 l 1359 826 l 1339 832 l 1337 832 l 1338 830 l CP 
1372 818 m 1384 814 l 1392 811 l 1394 812 l 1393 814 l 1385 816 l 1373 821 l 1371 820 l 1372 818 l CP 
1406 806 m 1406 806 l 1426 799 l 1428 800 l 1427 802 l 1407 809 l 1407 809 l 1405 808 l 1406 806 l CP 
1440 794 m 1448 792 l 1460 788 l 1462 789 l 1461 790 l 1449 794 l 1441 797 l 1439 796 l 1440 794 l CP 
1474 783 m 1488 778 l 1494 776 l 1496 777 l 1495 779 l 1489 781 l 1475 786 l 1473 785 l 1474 783 l CP 
1508 771 m 1525 766 l 1528 765 l 1530 766 l 1529 767 l 1526 769 l 1509 774 l 1507 773 l 1508 771 l CP 
1543 760 m 1543 760 l 1560 754 l 1562 753 l 1564 754 l 1563 756 l 1561 757 l 1544 763 l 1543 763 l 1542 762 l 1543 760 l CP 
1577 749 m 1592 744 l 1597 742 l 1599 743 l 1598 745 l 1593 747 l 1578 752 l 1576 751 l 1577 749 l CP 
1611 738 m 1622 734 l 1631 731 l 1633 732 l 1632 734 l 1623 737 l 1612 740 l 1610 739 l 1611 738 l CP 
1645 727 m 1650 725 l 1664 721 l 1665 720 l 1667 721 l 1666 723 l 1665 724 l 1651 728 l 1646 730 l 1644 729 l 1645 727 l CP 
1680 716 m 1689 713 l 1700 710 l 1702 711 l 1701 713 l 1690 716 l 1681 719 l 1679 718 l 1680 716 l CP 
1714 706 m 1723 703 l 1734 700 l 1734 700 l 1736 701 l 1735 703 l 1735 703 l 1724 706 l 1715 709 l 1713 707 l 1714 706 l CP 
1749 696 m 1754 694 l 1763 692 l 1769 690 l 1771 691 l 1770 693 l 1764 694 l 1755 697 l 1750 698 l 1748 697 l 1749 696 l CP 
1784 686 m 1789 684 l 1804 681 l 1806 682 l 1805 684 l 1790 687 l 1784 689 l 1782 688 l 1784 686 l CP 
1818 677 m 1820 677 l 1833 674 l 1839 672 l 1841 674 l 1840 675 l 1834 677 l 1820 680 l 1819 680 l 1817 679 l 1818 677 l CP 
1854 669 m 1857 668 l 1868 666 l 1874 665 l 1876 666 l 1875 668 l 1868 669 l 1858 671 l 1854 672 l 1852 671 l 1854 669 l CP 
1889 662 m 1896 661 l 1905 660 l 1910 659 l 1911 660 l 1910 662 l 1905 663 l 1897 664 l 1890 665 l 1888 664 l 1889 662 l CP 
1925 657 m 1929 656 l 1945 654 l 1947 655 l 1946 657 l 1930 659 l 1925 660 l 1923 659 l 1925 657 l CP 
1960 651 m 1963 651 l 1971 649 l 1979 648 l 1981 647 l 1982 648 l 1981 650 l 1979 651 l 1971 652 l 1963 654 l 1961 654 l 1959 653 l 1960 651 l CP 
1995 644 m 1996 644 l 2005 642 l 2015 640 l 2016 639 l 2018 640 l 2016 642 l 2016 642 l 2006 645 l 1996 647 l 1996 647 l 1994 646 l 1995 644 l CP 
2030 636 m 2036 634 l 2047 631 l 2051 630 l 2052 631 l 2051 633 l 2048 634 l 2037 637 l 2031 639 l 2029 637 l 2030 636 l CP 
2065 626 m 2072 624 l 2085 620 l 2085 620 l 2085 620 l 2087 621 l 2086 623 l 2086 623 l 2073 627 l 2066 629 l 2064 628 l 2065 626 l CP 
2100 616 m 2114 612 l 2120 610 l 2121 611 l 2120 613 l 2115 615 l 2100 619 l 2099 618 l 2100 616 l CP 
2134 606 m 2146 602 l 2154 600 l 2156 601 l 2155 602 l 2147 605 l 2135 609 l 2133 608 l 2134 606 l CP 
2168 595 m 2181 591 l 2188 589 l 2190 590 l 2189 591 l 2182 594 l 2169 598 l 2167 597 l 2168 595 l CP 
2203 584 m 2220 578 l 2223 578 l 2224 579 l 2223 580 l 2221 581 l 2203 587 l 2202 586 l 2203 584 l CP 
2237 573 m 2241 572 l 2257 566 l 2259 567 l 2258 569 l 2242 574 l 2238 576 l 2236 575 l 2237 573 l CP 
2271 562 m 2286 557 l 2291 555 l 2293 556 l 2292 558 l 2287 559 l 2272 564 l 2270 563 l 2271 562 l CP 
2305 550 m 2310 548 l 2325 543 l 2327 544 l 2326 546 l 2311 551 l 2306 553 l 2304 552 l 2305 550 l CP 
2339 539 m 2359 532 l 2361 533 l 2360 535 l 2340 541 l 2338 540 l 2339 539 l CP 
2373 527 m 2389 522 l 2393 520 l 2395 521 l 2394 523 l 2390 524 l 2374 530 l 2372 529 l 2373 527 l CP 
2407 515 m 2418 512 l 2427 508 l 2429 509 l 2428 511 l 2418 514 l 2408 518 l 2406 517 l 2407 515 l CP 
2441 503 m 2447 501 l 2461 496 l 2463 497 l 2462 499 l 2448 504 l 2442 506 l 2440 505 l 2441 503 l CP 
2475 492 m 2479 490 l 2495 485 l 2497 486 l 2496 487 l 2480 493 l 2476 494 l 2474 493 l 2475 492 l CP 
2509 480 m 2511 479 l 2529 473 l 2531 474 l 2530 475 l 2512 482 l 2510 482 l 2508 482 l 2509 480 l CP 
2543 468 m 2545 467 l 2547 468 l 2546 470 l 2544 470 l 2542 470 l 2543 468 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2571 459 m 2541 456 l 2550 481 l 2571 459 l CP 
stroke
2596 450 m 2566 447 l 2575 472 l 2596 450 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1339 889 m 1359 888 l 1361 889 l 1360 891 l 1339 892 l 1337 890 l 1339 889 l CP 
1374 887 m 1395 887 l 1397 888 l 1396 890 l 1375 890 l 1373 889 l 1374 887 l CP 
1410 886 m 1426 886 l 1431 886 l 1433 887 l 1432 889 l 1426 889 l 1411 889 l 1409 888 l 1410 886 l CP 
1446 885 m 1453 885 l 1467 885 l 1469 886 l 1468 888 l 1453 888 l 1447 888 l 1445 887 l 1446 885 l CP 
1482 884 m 1503 884 l 1505 885 l 1504 887 l 1483 887 l 1481 886 l 1482 884 l CP 
1518 884 m 1531 884 l 1539 883 l 1541 885 l 1540 886 l 1531 887 l 1519 887 l 1517 885 l 1518 884 l CP 
1554 883 m 1556 883 l 1575 883 l 1577 885 l 1575 886 l 1556 886 l 1555 886 l 1553 885 l 1554 883 l CP 
1590 883 m 1603 883 l 1611 883 l 1613 884 l 1611 886 l 1603 886 l 1590 886 l 1589 885 l 1590 883 l CP 
1626 883 m 1647 883 l 1649 885 l 1647 886 l 1626 886 l 1625 884 l 1626 883 l CP 
1662 883 m 1669 883 l 1684 883 l 1685 885 l 1683 886 l 1669 886 l 1662 886 l 1661 885 l 1662 883 l CP 
1699 884 m 1710 884 l 1720 884 l 1721 886 l 1719 887 l 1710 887 l 1698 887 l 1697 885 l 1699 884 l CP 
1735 885 m 1748 885 l 1756 885 l 1757 887 l 1755 888 l 1748 888 l 1734 888 l 1733 886 l 1735 885 l CP 
1771 886 m 1784 886 l 1792 886 l 1793 888 l 1791 889 l 1784 889 l 1770 889 l 1769 887 l 1771 886 l CP 
1806 887 m 1818 888 l 1827 888 l 1829 890 l 1827 891 l 1818 891 l 1806 890 l 1805 889 l 1806 887 l CP 
1842 889 m 1850 890 l 1863 891 l 1865 892 l 1863 894 l 1849 893 l 1842 892 l 1841 891 l 1842 889 l CP 
1878 892 m 1879 892 l 1893 893 l 1899 893 l 1901 895 l 1899 896 l 1893 896 l 1879 895 l 1878 895 l 1877 893 l 1878 892 l CP 
1914 895 m 1920 895 l 1932 897 l 1935 897 l 1937 899 l 1935 900 l 1932 900 l 1919 898 l 1914 898 l 1913 896 l 1914 895 l CP 
1950 899 m 1956 900 l 1967 901 l 1971 902 l 1972 903 l 1971 905 l 1967 904 l 1956 903 l 1950 902 l 1948 900 l 1950 899 l CP 
1986 904 m 1988 904 l 1999 906 l 2007 907 l 2008 909 l 2006 910 l 1998 909 l 1988 907 l 1985 907 l 1984 905 l 1986 904 l CP 
2021 910 m 2026 911 l 2042 914 l 2043 916 l 2041 917 l 2026 914 l 2021 913 l 2020 911 l 2021 910 l CP 
2057 918 m 2059 918 l 2073 922 l 2077 923 l 2078 925 l 2076 926 l 2072 925 l 2058 921 l 2056 920 l 2055 919 l 2057 918 l CP 
2091 927 m 2098 930 l 2110 934 l 2111 934 l 2112 936 l 2110 937 l 2109 936 l 2098 933 l 2090 930 l 2089 928 l 2091 927 l CP 
2125 940 m 2130 942 l 2139 946 l 2144 948 l 2145 950 l 2143 951 l 2137 948 l 2129 944 l 2124 943 l 2123 941 l 2125 940 l CP 
2158 955 m 2162 957 l 2169 961 l 2176 965 l 2177 967 l 2175 968 l 2168 964 l 2161 960 l 2157 958 l 2156 956 l 2158 955 l CP 
2190 972 m 2195 975 l 2208 983 l 2208 985 l 2206 986 l 2193 978 l 2188 975 l 2187 973 l 2190 972 l CP 
2220 992 m 2221 992 l 2229 998 l 2237 1003 l 2237 1004 l 2238 1006 l 2236 1006 l 2235 1006 l 2227 1000 l 2220 995 l 2218 994 l 2218 992 l 2220 992 l CP 
2249 1013 m 2254 1016 l 2263 1024 l 2266 1026 l 2266 1028 l 2264 1028 l 2261 1026 l 2252 1019 l 2247 1015 l 2247 1013 l 2249 1013 l CP 
2277 1036 m 2285 1042 l 2293 1049 l 2293 1051 l 2291 1052 l 2283 1044 l 2275 1038 l 2275 1036 l 2277 1036 l CP 
2305 1059 m 2309 1063 l 2320 1073 l 2320 1075 l 2318 1075 l 2307 1065 l 2303 1061 l 2302 1059 l 2305 1059 l CP 
2331 1083 m 2337 1088 l 2347 1097 l 2347 1099 l 2345 1099 l 2335 1091 l 2329 1085 l 2329 1083 l 2331 1083 l CP 
2358 1107 m 2370 1119 l 2373 1122 l 2374 1124 l 2371 1124 l 2368 1121 l 2356 1110 l 2356 1108 l 2358 1107 l CP 
2384 1132 m 2388 1136 l 2400 1146 l 2400 1148 l 2398 1148 l 2386 1138 l 2382 1134 l 2382 1132 l 2384 1132 l CP 
2411 1157 m 2426 1171 l 2426 1173 l 2424 1173 l 2409 1159 l 2409 1157 l 2411 1157 l CP 
2437 1181 m 2440 1184 l 2451 1195 l 2452 1196 l 2452 1198 l 2450 1198 l 2449 1197 l 2438 1186 l 2435 1183 l 2435 1181 l 2437 1181 l CP 
2463 1206 m 2475 1218 l 2478 1221 l 2478 1223 l 2476 1223 l 2473 1220 l 2461 1208 l 2461 1206 l 2463 1206 l CP 
2489 1231 m 2500 1242 l 2504 1246 l 2504 1248 l 2502 1248 l 2498 1244 l 2487 1233 l 2487 1231 l 2489 1231 l CP 
2515 1256 m 2527 1268 l 2530 1271 l 2530 1273 l 2528 1273 l 2525 1271 l 2513 1258 l 2513 1256 l 2515 1256 l CP 
2541 1281 m 2542 1282 l 2556 1296 l 2556 1298 l 2554 1298 l 2539 1284 l 2539 1283 l 2538 1281 l 2541 1281 l CP 
2566 1306 m 2571 1311 l 2581 1321 l 2581 1323 l 2579 1323 l 2569 1313 l 2564 1308 l 2564 1306 l 2566 1306 l CP 
2592 1331 m 2603 1342 l 2607 1346 l 2607 1348 l 2605 1348 l 2601 1344 l 2590 1334 l 2590 1331 l 2592 1331 l CP 
2618 1357 m 2619 1358 l 2633 1371 l 2633 1373 l 2631 1373 l 2617 1360 l 2616 1359 l 2616 1357 l 2618 1357 l CP 
2644 1382 m 2653 1391 l 2653 1393 l 2651 1393 l 2642 1384 l 2642 1382 l 2644 1382 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2672 1411 m 2662 1383 l 2643 1402 l 2672 1411 l CP 
stroke
2691 1430 m 2681 1402 l 2662 1421 l 2691 1430 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1350 1024 m 1371 1022 l 1373 1024 l 1371 1025 l 1350 1027 l 1349 1026 l 1350 1024 l CP 
1386 1021 m 1398 1020 l 1407 1020 l 1409 1021 l 1407 1023 l 1398 1023 l 1386 1024 l 1385 1023 l 1386 1021 l CP 
1422 1018 m 1443 1016 l 1445 1018 l 1443 1019 l 1422 1021 l 1421 1020 l 1422 1018 l CP 
1458 1015 m 1467 1014 l 1479 1013 l 1480 1015 l 1479 1016 l 1467 1017 l 1458 1018 l 1457 1017 l 1458 1015 l CP 
1494 1012 m 1515 1010 l 1516 1011 l 1515 1013 l 1494 1015 l 1492 1014 l 1494 1012 l CP 
1530 1009 m 1533 1008 l 1550 1007 l 1552 1008 l 1551 1010 l 1533 1011 l 1530 1012 l 1528 1010 l 1530 1009 l CP 
1565 1005 m 1575 1004 l 1586 1003 l 1588 1005 l 1587 1006 l 1575 1007 l 1566 1008 l 1564 1007 l 1565 1005 l CP 
1601 1002 m 1615 1000 l 1622 1000 l 1624 1001 l 1622 1003 l 1615 1003 l 1602 1005 l 1600 1003 l 1601 1002 l CP 
1637 998 m 1654 996 l 1658 996 l 1660 997 l 1658 999 l 1654 999 l 1637 1001 l 1636 1000 l 1637 998 l CP 
1673 994 m 1692 992 l 1694 992 l 1695 993 l 1694 995 l 1692 995 l 1673 997 l 1671 996 l 1673 994 l CP 
1709 990 m 1728 988 l 1729 988 l 1731 989 l 1730 991 l 1728 991 l 1709 993 l 1707 992 l 1709 990 l CP 
1744 986 m 1763 984 l 1765 984 l 1767 985 l 1766 987 l 1763 987 l 1745 989 l 1743 988 l 1744 986 l CP 
1780 982 m 1797 980 l 1801 980 l 1803 981 l 1801 983 l 1797 983 l 1780 985 l 1779 984 l 1780 982 l CP 
1816 978 m 1829 976 l 1837 975 l 1838 977 l 1837 978 l 1829 979 l 1816 981 l 1815 980 l 1816 978 l CP 
1852 973 m 1860 972 l 1872 971 l 1874 972 l 1873 974 l 1861 975 l 1852 976 l 1850 975 l 1852 973 l CP 
1887 969 m 1890 968 l 1908 966 l 1910 967 l 1908 969 l 1891 971 l 1888 972 l 1886 970 l 1887 969 l CP 
1923 964 m 1944 961 l 1945 962 l 1944 964 l 1923 967 l 1922 966 l 1923 964 l CP 
1959 959 m 1973 957 l 1979 956 l 1981 957 l 1980 959 l 1974 960 l 1959 962 l 1957 961 l 1959 959 l CP 
1994 954 m 1998 954 l 2015 951 l 2017 952 l 2015 954 l 1999 956 l 1995 957 l 1993 956 l 1994 954 l CP 
2030 949 m 2046 947 l 2051 946 l 2052 947 l 2051 949 l 2047 949 l 2030 952 l 2029 951 l 2030 949 l CP 
2065 944 m 2068 943 l 2086 940 l 2088 942 l 2087 943 l 2069 946 l 2066 947 l 2064 945 l 2065 944 l CP 
2101 938 m 2110 937 l 2122 935 l 2124 936 l 2122 938 l 2110 940 l 2102 941 l 2100 940 l 2101 938 l CP 
2137 933 m 2148 931 l 2157 929 l 2159 931 l 2158 932 l 2148 934 l 2137 936 l 2135 934 l 2137 933 l CP 
2172 927 m 2182 926 l 2193 924 l 2195 925 l 2193 927 l 2183 929 l 2173 930 l 2171 929 l 2172 927 l CP 
2208 922 m 2213 921 l 2228 919 l 2229 919 l 2230 920 l 2229 922 l 2228 922 l 2214 924 l 2208 925 l 2207 924 l 2208 922 l CP 
2243 917 m 2254 915 l 2264 914 l 2266 916 l 2265 917 l 2255 918 l 2244 920 l 2242 918 l 2243 917 l CP 
2279 913 m 2283 912 l 2296 911 l 2300 911 l 2302 912 l 2300 914 l 2297 914 l 2283 915 l 2280 916 l 2278 914 l 2279 913 l CP 
2315 910 m 2334 909 l 2336 909 l 2338 911 l 2336 912 l 2334 912 l 2315 913 l 2314 912 l 2315 910 l CP 
2351 909 m 2359 909 l 2372 910 l 2372 910 l 2374 912 l 2372 913 l 2371 913 l 2359 912 l 2351 912 l 2350 911 l 2351 909 l CP 
2387 911 m 2399 912 l 2408 913 l 2410 915 l 2408 916 l 2398 915 l 2387 914 l 2386 912 l 2387 911 l CP 
2423 915 m 2429 915 l 2444 917 l 2445 919 l 2444 920 l 2429 918 l 2423 918 l 2422 916 l 2423 915 l CP 
2459 919 m 2464 920 l 2474 921 l 2480 922 l 2481 924 l 2479 925 l 2473 924 l 2464 923 l 2459 922 l 2457 920 l 2459 919 l CP 
2495 924 m 2505 925 l 2515 927 l 2517 929 l 2515 930 l 2504 928 l 2494 927 l 2493 925 l 2495 924 l CP 
2530 929 m 2540 931 l 2551 932 l 2552 934 l 2551 935 l 2539 933 l 2530 932 l 2529 930 l 2530 929 l CP 
2566 934 m 2579 936 l 2587 937 l 2588 939 l 2586 940 l 2579 939 l 2565 937 l 2564 936 l 2566 934 l CP 
2602 940 m 2608 941 l 2622 943 l 2624 944 l 2622 946 l 2608 944 l 2601 943 l 2600 941 l 2602 940 l CP 
2637 945 m 2640 945 l 2657 948 l 2658 948 l 2659 950 l 2658 951 l 2656 951 l 2639 948 l 2637 948 l 2635 946 l 2637 945 l CP 
2673 950 m 2674 950 l 2692 953 l 2694 953 l 2695 955 l 2693 956 l 2692 956 l 2674 953 l 2672 953 l 2671 951 l 2673 950 l CP 
2708 955 m 2711 956 l 2729 958 l 2730 960 l 2729 961 l 2710 959 l 2708 958 l 2707 956 l 2708 955 l CP 
2744 960 m 2751 961 l 2765 963 l 2766 965 l 2764 966 l 2750 964 l 2744 963 l 2742 962 l 2744 960 l CP 
2780 965 m 2793 967 l 2801 968 l 2802 970 l 2800 971 l 2793 970 l 2779 968 l 2778 966 l 2780 965 l CP 
2815 970 m 2816 970 l 2836 973 l 2837 975 l 2836 976 l 2816 973 l 2815 973 l 2814 971 l 2815 970 l CP 
2851 975 m 2864 977 l 2872 978 l 2873 979 l 2871 981 l 2863 980 l 2851 978 l 2849 976 l 2851 975 l CP 
2887 980 m 2889 980 l 2908 983 l 2909 984 l 2907 986 l 2888 983 l 2886 983 l 2885 981 l 2887 980 l CP 
2922 985 m 2942 987 l 2943 987 l 2945 989 l 2943 990 l 2941 990 l 2922 987 l 2921 986 l 2922 985 l CP 
2958 989 m 2969 991 l 2979 992 l 2980 994 l 2979 995 l 2969 994 l 2958 992 l 2956 990 l 2958 989 l CP 
2994 994 m 2998 994 l 3015 996 l 3016 998 l 3014 999 l 2998 997 l 2993 997 l 2992 995 l 2994 994 l CP 
3030 998 m 3050 1001 l 3052 1003 l 3050 1004 l 3029 1001 l 3028 1000 l 3030 998 l CP 
3065 1003 m 3086 1005 l 3087 1007 l 3086 1008 l 3065 1006 l 3064 1004 l 3065 1003 l CP 
3101 1007 m 3122 1010 l 3123 1012 l 3121 1013 l 3101 1010 l 3099 1009 l 3101 1007 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3150 1015 m 3124 998 l 3121 1025 l 3150 1015 l CP 
stroke
3176 1018 m 3151 1001 l 3148 1028 l 3176 1018 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1408 1131 m 1429 1126 l 1430 1127 l 1429 1128 l 1409 1134 l 1407 1133 l 1408 1131 l CP 
1443 1122 m 1464 1117 l 1465 1118 l 1464 1120 l 1444 1125 l 1442 1124 l 1443 1122 l CP 
1478 1113 m 1499 1108 l 1500 1109 l 1499 1111 l 1479 1116 l 1477 1115 l 1478 1113 l CP 
1513 1105 m 1521 1103 l 1534 1100 l 1535 1101 l 1534 1103 l 1522 1106 l 1514 1108 l 1512 1107 l 1513 1105 l CP 
1548 1097 m 1569 1092 l 1571 1094 l 1569 1095 l 1549 1100 l 1547 1099 l 1548 1097 l CP 
1584 1089 m 1604 1085 l 1606 1086 l 1605 1088 l 1584 1092 l 1582 1091 l 1584 1089 l CP 
1619 1082 m 1620 1082 l 1639 1078 l 1641 1080 l 1640 1081 l 1620 1085 l 1619 1085 l 1618 1084 l 1619 1082 l CP 
1654 1076 m 1665 1074 l 1675 1072 l 1677 1073 l 1675 1075 l 1665 1077 l 1655 1079 l 1653 1077 l 1654 1076 l CP 
1690 1070 m 1707 1067 l 1710 1066 l 1712 1067 l 1711 1069 l 1708 1070 l 1690 1072 l 1688 1071 l 1690 1070 l CP 
1725 1064 m 1746 1061 l 1748 1062 l 1747 1064 l 1726 1067 l 1724 1066 l 1725 1064 l CP 
1761 1059 m 1782 1056 l 1784 1058 l 1782 1059 l 1761 1062 l 1760 1061 l 1761 1059 l CP 
1797 1055 m 1818 1052 l 1819 1053 l 1818 1055 l 1797 1058 l 1795 1056 l 1797 1055 l CP 
1833 1051 m 1853 1049 l 1855 1050 l 1854 1052 l 1833 1054 l 1831 1052 l 1833 1051 l CP 
1868 1047 m 1889 1045 l 1891 1047 l 1890 1048 l 1869 1050 l 1867 1049 l 1868 1047 l CP 
1904 1044 m 1925 1043 l 1927 1044 l 1925 1046 l 1905 1047 l 1903 1046 l 1904 1044 l CP 
1940 1041 m 1961 1040 l 1963 1041 l 1961 1043 l 1940 1044 l 1939 1043 l 1940 1041 l CP 
1976 1039 m 1997 1037 l 1999 1039 l 1997 1040 l 1976 1042 l 1975 1040 l 1976 1039 l CP 
2012 1036 m 2033 1035 l 2035 1036 l 2033 1038 l 2012 1039 l 2011 1038 l 2012 1036 l CP 
2048 1033 m 2069 1032 l 2070 1033 l 2069 1035 l 2048 1036 l 2047 1035 l 2048 1033 l CP 
2084 1031 m 2105 1029 l 2106 1030 l 2105 1032 l 2084 1033 l 2082 1032 l 2084 1031 l CP 
2120 1027 m 2140 1025 l 2142 1027 l 2141 1028 l 2120 1030 l 2118 1029 l 2120 1027 l CP 
2155 1024 m 2176 1021 l 2178 1023 l 2177 1024 l 2156 1027 l 2154 1025 l 2155 1024 l CP 
2191 1020 m 2198 1019 l 2212 1017 l 2214 1019 l 2212 1020 l 2198 1022 l 2192 1023 l 2190 1021 l 2191 1020 l CP 
2227 1015 m 2243 1014 l 2248 1013 l 2249 1014 l 2248 1016 l 2243 1016 l 2227 1018 l 2226 1017 l 2227 1015 l CP 
2263 1011 m 2283 1008 l 2285 1009 l 2284 1011 l 2263 1014 l 2261 1012 l 2263 1011 l CP 
2298 1006 m 2319 1002 l 2321 1004 l 2319 1005 l 2299 1009 l 2297 1007 l 2298 1006 l CP 
2334 1000 m 2341 999 l 2354 997 l 2356 998 l 2355 1000 l 2342 1002 l 2334 1003 l 2333 1002 l 2334 1000 l CP 
2369 994 m 2390 991 l 2392 992 l 2390 994 l 2370 997 l 2368 996 l 2369 994 l CP 
2405 988 m 2424 985 l 2425 984 l 2427 986 l 2426 987 l 2425 988 l 2405 991 l 2404 990 l 2405 988 l CP 
2440 982 m 2454 979 l 2461 978 l 2462 979 l 2461 981 l 2454 982 l 2441 985 l 2439 983 l 2440 982 l CP 
2475 975 m 2484 973 l 2496 971 l 2498 972 l 2497 974 l 2485 976 l 2476 978 l 2474 977 l 2475 975 l CP 
2511 968 m 2516 967 l 2531 964 l 2533 965 l 2532 966 l 2516 970 l 2511 971 l 2510 970 l 2511 968 l CP 
2546 961 m 2549 960 l 2567 956 l 2568 957 l 2567 959 l 2549 963 l 2547 963 l 2545 962 l 2546 961 l CP 
2581 953 m 2582 953 l 2602 948 l 2603 950 l 2602 951 l 2583 956 l 2582 956 l 2580 955 l 2581 953 l CP 
2616 945 m 2618 945 l 2637 940 l 2639 942 l 2637 943 l 2618 948 l 2617 948 l 2615 947 l 2616 945 l CP 
2651 937 m 2654 937 l 2672 932 l 2674 933 l 2673 935 l 2655 939 l 2652 940 l 2650 939 l 2651 937 l CP 
2686 929 m 2692 928 l 2707 924 l 2709 925 l 2708 927 l 2692 931 l 2687 932 l 2685 931 l 2686 929 l CP 
2721 921 m 2731 918 l 2742 916 l 2744 917 l 2743 918 l 2731 921 l 2722 923 l 2720 922 l 2721 921 l CP 
2756 912 m 2771 908 l 2777 907 l 2779 908 l 2778 910 l 2772 911 l 2757 915 l 2755 914 l 2756 912 l CP 
2791 903 m 2812 898 l 2813 899 l 2812 901 l 2792 906 l 2790 905 l 2791 903 l CP 
2826 894 m 2847 889 l 2848 890 l 2847 892 l 2827 897 l 2825 896 l 2826 894 l CP 
2861 885 m 2881 880 l 2883 881 l 2882 883 l 2862 888 l 2860 887 l 2861 885 l CP 
2896 876 m 2901 875 l 2916 871 l 2918 872 l 2917 874 l 2902 878 l 2897 879 l 2895 878 l 2896 876 l CP 
2931 867 m 2947 862 l 2951 862 l 2953 863 l 2952 864 l 2948 865 l 2931 870 l 2930 869 l 2931 867 l CP 
2965 858 m 2986 852 l 2987 853 l 2986 855 l 2966 860 l 2964 859 l 2965 858 l CP 
3000 848 m 3020 842 l 3022 844 l 3021 845 l 3001 851 l 2999 850 l 3000 848 l CP 
3035 838 m 3045 836 l 3055 833 l 3057 834 l 3056 836 l 3046 839 l 3036 841 l 3034 840 l 3035 838 l CP 
3069 829 m 3090 823 l 3092 824 l 3090 826 l 3070 832 l 3068 831 l 3069 829 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3122 815 m 3093 810 l 3100 836 l 3122 815 l CP 
stroke
3148 808 m 3119 802 l 3126 828 l 3148 808 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1408 1224 m 1428 1218 l 1430 1219 l 1429 1221 l 1409 1227 l 1407 1226 l 1408 1224 l CP 
1443 1214 m 1452 1212 l 1463 1209 l 1465 1210 l 1464 1212 l 1453 1214 l 1444 1217 l 1442 1216 l 1443 1214 l CP 
1478 1205 m 1494 1200 l 1498 1199 l 1500 1200 l 1499 1202 l 1495 1203 l 1478 1208 l 1477 1207 l 1478 1205 l CP 
1512 1196 m 1533 1190 l 1533 1190 l 1535 1192 l 1534 1193 l 1533 1193 l 1513 1198 l 1511 1197 l 1512 1196 l CP 
1547 1187 m 1568 1182 l 1570 1183 l 1569 1185 l 1548 1190 l 1546 1189 l 1547 1187 l CP 
1582 1179 m 1603 1174 l 1605 1175 l 1604 1177 l 1583 1182 l 1581 1181 l 1582 1179 l CP 
1618 1171 m 1637 1167 l 1638 1167 l 1640 1168 l 1639 1170 l 1637 1170 l 1618 1174 l 1617 1173 l 1618 1171 l CP 
1653 1164 m 1668 1161 l 1674 1160 l 1675 1161 l 1674 1163 l 1668 1164 l 1654 1167 l 1652 1166 l 1653 1164 l CP 
1688 1158 m 1698 1156 l 1709 1154 l 1711 1155 l 1710 1157 l 1698 1159 l 1689 1160 l 1687 1159 l 1688 1158 l CP 
1724 1151 m 1726 1151 l 1745 1148 l 1746 1149 l 1745 1151 l 1727 1154 l 1724 1154 l 1723 1153 l 1724 1151 l CP 
1759 1146 m 1780 1142 l 1782 1143 l 1781 1145 l 1760 1148 l 1758 1147 l 1759 1146 l CP 
1795 1140 m 1809 1137 l 1816 1136 l 1817 1138 l 1816 1139 l 1810 1140 l 1795 1143 l 1794 1141 l 1795 1140 l CP 
1830 1134 m 1851 1130 l 1853 1131 l 1852 1133 l 1831 1137 l 1829 1135 l 1830 1134 l CP 
1866 1128 m 1887 1124 l 1888 1125 l 1887 1127 l 1866 1131 l 1865 1129 l 1866 1128 l CP 
1901 1121 m 1920 1117 l 1922 1117 l 1924 1118 l 1922 1120 l 1921 1120 l 1902 1124 l 1900 1123 l 1901 1121 l CP 
1936 1113 m 1950 1110 l 1957 1109 l 1959 1110 l 1958 1112 l 1951 1113 l 1937 1116 l 1935 1115 l 1936 1113 l CP 
1972 1105 m 1981 1103 l 1992 1100 l 1994 1101 l 1993 1103 l 1982 1106 l 1972 1108 l 1970 1107 l 1972 1105 l CP 
2006 1097 m 2013 1095 l 2027 1091 l 2028 1092 l 2027 1094 l 2014 1098 l 2007 1099 l 2005 1098 l 2006 1097 l CP 
2041 1087 m 2048 1085 l 2061 1081 l 2063 1082 l 2062 1084 l 2049 1088 l 2042 1090 l 2040 1089 l 2041 1087 l CP 
2076 1077 m 2084 1074 l 2096 1071 l 2097 1072 l 2097 1074 l 2085 1077 l 2076 1080 l 2075 1079 l 2076 1077 l CP 
2110 1066 m 2122 1062 l 2130 1060 l 2132 1061 l 2131 1062 l 2123 1065 l 2111 1069 l 2109 1068 l 2110 1066 l CP 
2144 1055 m 2164 1048 l 2164 1048 l 2166 1049 l 2165 1051 l 2164 1051 l 2145 1058 l 2143 1057 l 2144 1055 l CP 
2178 1043 m 2198 1036 l 2200 1037 l 2199 1039 l 2179 1046 l 2177 1045 l 2178 1043 l CP 
2212 1031 m 2232 1024 l 2234 1025 l 2233 1027 l 2213 1034 l 2211 1033 l 2212 1031 l CP 
2246 1018 m 2254 1015 l 2265 1011 l 2267 1012 l 2266 1014 l 2255 1018 l 2247 1021 l 2245 1020 l 2246 1018 l CP 
2279 1006 m 2299 998 l 2301 999 l 2300 1001 l 2280 1008 l 2278 1008 l 2279 1006 l CP 
2313 992 m 2332 985 l 2334 985 l 2333 987 l 2314 995 l 2312 994 l 2313 992 l CP 
2346 979 m 2358 974 l 2366 971 l 2368 972 l 2367 974 l 2359 977 l 2347 982 l 2345 981 l 2346 979 l CP 
2379 965 m 2386 963 l 2399 957 l 2401 958 l 2400 960 l 2387 965 l 2381 968 l 2379 967 l 2379 965 l CP 
2413 951 m 2416 950 l 2432 943 l 2434 944 l 2433 946 l 2417 953 l 2414 954 l 2412 953 l 2413 951 l CP 
2446 937 m 2465 929 l 2467 930 l 2466 932 l 2447 940 l 2445 939 l 2446 937 l CP 
2479 923 m 2498 915 l 2500 915 l 2499 917 l 2480 926 l 2478 925 l 2479 923 l CP 
2512 909 m 2531 900 l 2533 901 l 2532 903 l 2513 911 l 2511 911 l 2512 909 l CP 
2545 894 m 2564 885 l 2566 886 l 2565 888 l 2546 897 l 2544 896 l 2545 894 l CP 
2578 879 m 2578 879 l 2597 871 l 2599 871 l 2598 873 l 2579 882 l 2579 882 l 2577 881 l 2578 879 l CP 
2610 865 m 2613 863 l 2629 856 l 2631 857 l 2631 858 l 2615 866 l 2612 867 l 2610 867 l 2610 865 l CP 
2643 850 m 2650 846 l 2662 841 l 2664 841 l 2663 843 l 2652 849 l 2644 852 l 2642 851 l 2643 850 l CP 
2676 834 m 2689 828 l 2691 829 l 2690 831 l 2677 837 l 2675 836 l 2676 834 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2714 818 m 2684 818 l 2695 842 l 2714 818 l CP 
stroke
2738 807 m 2708 806 l 2719 831 l 2738 807 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1408 1438 m 1429 1432 l 1430 1434 l 1429 1435 l 1409 1441 l 1407 1440 l 1408 1438 l CP 
1443 1429 m 1464 1424 l 1465 1425 l 1464 1427 l 1444 1432 l 1442 1431 l 1443 1429 l CP 
1478 1421 m 1499 1417 l 1501 1418 l 1500 1420 l 1479 1424 l 1477 1423 l 1478 1421 l CP 
1514 1414 m 1518 1414 l 1535 1411 l 1536 1412 l 1535 1414 l 1518 1417 l 1514 1417 l 1513 1416 l 1514 1414 l CP 
1549 1409 m 1570 1406 l 1570 1406 l 1572 1407 l 1571 1409 l 1570 1409 l 1550 1412 l 1548 1411 l 1549 1409 l CP 
1585 1404 m 1606 1402 l 1608 1403 l 1606 1405 l 1586 1407 l 1584 1406 l 1585 1404 l CP 
1621 1400 m 1622 1400 l 1642 1398 l 1643 1399 l 1642 1401 l 1622 1403 l 1621 1403 l 1620 1402 l 1621 1400 l CP 
1657 1396 m 1673 1394 l 1678 1394 l 1679 1395 l 1678 1397 l 1674 1397 l 1657 1399 l 1655 1398 l 1657 1396 l CP 
1692 1392 m 1713 1390 l 1715 1391 l 1714 1393 l 1693 1395 l 1691 1394 l 1692 1392 l CP 
1728 1388 m 1749 1385 l 1751 1387 l 1749 1388 l 1729 1391 l 1727 1390 l 1728 1388 l CP 
1764 1383 m 1781 1381 l 1785 1380 l 1786 1382 l 1785 1383 l 1782 1384 l 1764 1386 l 1763 1385 l 1764 1383 l CP 
1799 1378 m 1820 1374 l 1822 1376 l 1821 1377 l 1800 1381 l 1798 1380 l 1799 1378 l CP 
1835 1372 m 1839 1371 l 1856 1368 l 1857 1369 l 1856 1371 l 1840 1374 l 1835 1375 l 1834 1374 l 1835 1372 l CP 
1870 1365 m 1891 1360 l 1892 1362 l 1891 1363 l 1871 1368 l 1869 1367 l 1870 1365 l CP 
1905 1357 m 1926 1352 l 1927 1353 l 1926 1355 l 1906 1360 l 1904 1359 l 1905 1357 l CP 
1940 1348 m 1960 1342 l 1962 1344 l 1961 1345 l 1941 1351 l 1939 1350 l 1940 1348 l CP 
1975 1338 m 1995 1332 l 1997 1333 l 1996 1335 l 1976 1341 l 1974 1340 l 1975 1338 l CP 
2009 1328 m 2029 1321 l 2031 1322 l 2030 1324 l 2010 1330 l 2008 1329 l 2009 1328 l CP 
2043 1316 m 2063 1309 l 2065 1310 l 2064 1312 l 2044 1319 l 2042 1318 l 2043 1316 l CP 
2077 1304 m 2097 1296 l 2098 1297 l 2098 1299 l 2078 1307 l 2076 1306 l 2077 1304 l CP 
2110 1291 m 2116 1289 l 2130 1283 l 2132 1284 l 2131 1286 l 2117 1292 l 2112 1294 l 2110 1293 l 2110 1291 l CP 
2144 1277 m 2157 1272 l 2163 1269 l 2165 1270 l 2164 1272 l 2158 1274 l 2145 1280 l 2143 1279 l 2144 1277 l CP 
2177 1263 m 2196 1254 l 2198 1255 l 2197 1257 l 2178 1266 l 2176 1265 l 2177 1263 l CP 
2210 1248 m 2229 1239 l 2231 1240 l 2230 1242 l 2211 1251 l 2209 1250 l 2210 1248 l CP 
2242 1233 m 2246 1231 l 2261 1224 l 2263 1224 l 2262 1226 l 2247 1234 l 2243 1236 l 2241 1235 l 2242 1233 l CP 
2274 1217 m 2293 1208 l 2295 1208 l 2295 1210 l 2276 1220 l 2274 1219 l 2274 1217 l CP 
2307 1201 m 2325 1191 l 2327 1192 l 2327 1194 l 2308 1203 l 2306 1203 l 2307 1201 l CP 
2338 1184 m 2343 1182 l 2357 1174 l 2359 1175 l 2358 1177 l 2344 1184 l 2340 1187 l 2338 1186 l 2338 1184 l CP 
2370 1167 m 2389 1157 l 2391 1158 l 2390 1160 l 2372 1170 l 2369 1169 l 2370 1167 l CP 
2402 1150 m 2420 1139 l 2422 1140 l 2421 1142 l 2403 1152 l 2401 1152 l 2402 1150 l CP 
2433 1132 m 2449 1123 l 2451 1122 l 2453 1122 l 2453 1124 l 2451 1125 l 2434 1135 l 2432 1134 l 2433 1132 l CP 
2464 1114 m 2482 1103 l 2484 1104 l 2484 1106 l 2466 1117 l 2464 1116 l 2464 1114 l CP 
2495 1096 m 2506 1089 l 2508 1090 l 2508 1092 l 2497 1098 l 2495 1098 l 2495 1096 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2530 1076 m 2500 1079 l 2514 1102 l 2530 1076 l CP 
stroke
2553 1062 m 2523 1065 l 2537 1088 l 2553 1062 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1408 1606 m 1428 1600 l 1430 1601 l 1429 1603 l 1409 1608 l 1407 1607 l 1408 1606 l CP 
1443 1596 m 1463 1590 l 1465 1591 l 1464 1593 l 1444 1599 l 1442 1597 l 1443 1596 l CP 
1478 1586 m 1490 1582 l 1498 1580 l 1500 1581 l 1499 1583 l 1491 1585 l 1478 1589 l 1477 1588 l 1478 1586 l CP 
1512 1576 m 1516 1575 l 1533 1571 l 1534 1572 l 1533 1574 l 1517 1578 l 1513 1579 l 1511 1578 l 1512 1576 l CP 
1547 1567 m 1564 1563 l 1567 1562 l 1569 1563 l 1568 1565 l 1565 1565 l 1548 1570 l 1546 1569 l 1547 1567 l CP 
1582 1558 m 1587 1556 l 1602 1553 l 1604 1554 l 1603 1555 l 1588 1559 l 1583 1561 l 1581 1560 l 1582 1558 l CP 
1617 1549 m 1631 1545 l 1637 1543 l 1639 1544 l 1638 1546 l 1632 1548 l 1617 1552 l 1616 1551 l 1617 1549 l CP 
1651 1540 m 1652 1539 l 1672 1534 l 1674 1535 l 1673 1537 l 1653 1542 l 1652 1542 l 1650 1541 l 1651 1540 l CP 
1686 1530 m 1693 1528 l 1706 1525 l 1708 1526 l 1707 1527 l 1693 1531 l 1687 1533 l 1685 1532 l 1686 1530 l CP 
1721 1520 m 1731 1518 l 1741 1515 l 1743 1516 l 1742 1518 l 1732 1521 l 1722 1523 l 1720 1522 l 1721 1520 l CP 
1755 1510 m 1767 1507 l 1775 1504 l 1777 1505 l 1776 1507 l 1768 1510 l 1756 1513 l 1754 1512 l 1755 1510 l CP 
1790 1500 m 1802 1496 l 1810 1493 l 1811 1494 l 1811 1496 l 1803 1498 l 1791 1502 l 1789 1501 l 1790 1500 l CP 
1824 1488 m 1836 1484 l 1843 1481 l 1845 1481 l 1844 1483 l 1837 1486 l 1825 1491 l 1823 1490 l 1824 1488 l CP 
1857 1475 m 1869 1471 l 1877 1467 l 1879 1468 l 1878 1470 l 1870 1473 l 1858 1478 l 1856 1477 l 1857 1475 l CP 
1890 1461 m 1901 1456 l 1909 1452 l 1912 1453 l 1911 1455 l 1903 1459 l 1892 1464 l 1890 1463 l 1890 1461 l CP 
1923 1446 m 1934 1441 l 1942 1436 l 1944 1437 l 1943 1439 l 1935 1443 l 1924 1449 l 1922 1448 l 1923 1446 l CP 
1955 1429 m 1966 1423 l 1973 1419 l 1975 1419 l 1975 1421 l 1968 1425 l 1956 1432 l 1954 1431 l 1955 1429 l CP 
1986 1411 m 1999 1403 l 2004 1400 l 2006 1401 l 2005 1403 l 2001 1406 l 1987 1414 l 1985 1413 l 1986 1411 l CP 
2016 1392 m 2033 1381 l 2035 1381 l 2035 1383 l 2018 1395 l 2016 1394 l 2016 1392 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2056 1366 m 2026 1371 l 2042 1393 l 2056 1366 l CP 
stroke
2078 1351 m 2048 1355 l 2064 1377 l 2078 1351 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1409 1797 m 1418 1797 l 1427 1795 l 1429 1795 l 1431 1796 l 1430 1798 l 1427 1798 l 1418 1800 l 1409 1800 l 1407 1799 l 1409 1797 l CP 
1443 1791 m 1446 1790 l 1456 1786 l 1463 1783 l 1465 1784 l 1464 1786 l 1457 1789 l 1447 1793 l 1444 1794 l 1442 1793 l 1443 1791 l CP 
1476 1777 m 1478 1776 l 1490 1770 l 1495 1767 l 1497 1768 l 1496 1770 l 1491 1773 l 1479 1779 l 1478 1780 l 1476 1779 l 1476 1777 l CP 
1508 1760 m 1515 1757 l 1527 1751 l 1529 1751 l 1528 1753 l 1517 1759 l 1510 1763 l 1508 1762 l 1508 1760 l CP 
1540 1744 m 1545 1741 l 1559 1734 l 1561 1735 l 1560 1737 l 1546 1744 l 1542 1746 l 1540 1746 l 1540 1744 l CP 
1572 1727 m 1579 1724 l 1591 1718 l 1593 1719 l 1592 1721 l 1581 1727 l 1574 1730 l 1572 1729 l 1572 1727 l CP 
1605 1712 m 1618 1705 l 1624 1703 l 1626 1704 l 1625 1706 l 1620 1708 l 1606 1714 l 1604 1714 l 1605 1712 l CP 
1638 1697 m 1640 1696 l 1652 1691 l 1657 1689 l 1659 1690 l 1658 1692 l 1653 1694 l 1642 1699 l 1639 1700 l 1637 1699 l 1638 1697 l CP 
1671 1683 m 1676 1681 l 1689 1676 l 1691 1676 l 1693 1677 l 1692 1679 l 1690 1679 l 1677 1684 l 1672 1686 l 1670 1685 l 1671 1683 l CP 
1705 1670 m 1716 1667 l 1725 1663 l 1726 1664 l 1726 1666 l 1717 1669 l 1706 1673 l 1704 1672 l 1705 1670 l CP 
1739 1659 m 1744 1657 l 1759 1652 l 1761 1653 l 1760 1655 l 1745 1660 l 1740 1661 l 1738 1660 l 1739 1659 l CP 
1773 1648 m 1775 1647 l 1791 1642 l 1793 1641 l 1795 1642 l 1794 1644 l 1792 1645 l 1776 1650 l 1774 1650 l 1772 1649 l 1773 1648 l CP 
1808 1637 m 1808 1637 l 1825 1632 l 1828 1632 l 1830 1633 l 1829 1634 l 1826 1635 l 1809 1640 l 1808 1640 l 1807 1639 l 1808 1637 l CP 
1842 1628 m 1843 1627 l 1861 1623 l 1863 1622 l 1864 1623 l 1863 1625 l 1862 1626 l 1843 1630 l 1843 1630 l 1841 1629 l 1842 1628 l CP 
1877 1619 m 1880 1618 l 1898 1614 l 1899 1615 l 1898 1617 l 1880 1621 l 1878 1622 l 1876 1621 l 1877 1619 l CP 
1912 1610 m 1919 1609 l 1933 1606 l 1935 1607 l 1933 1609 l 1920 1612 l 1913 1613 l 1911 1612 l 1912 1610 l CP 
1947 1603 m 1961 1600 l 1968 1599 l 1970 1600 l 1969 1601 l 1961 1603 l 1948 1606 l 1946 1605 l 1947 1603 l CP 
1983 1596 m 2003 1592 l 2005 1593 l 2004 1595 l 1983 1599 l 1982 1597 l 1983 1596 l CP 
2018 1589 m 2028 1587 l 2039 1585 l 2041 1587 l 2039 1588 l 2029 1590 l 2019 1592 l 2017 1591 l 2018 1589 l CP 
2054 1583 m 2074 1580 l 2076 1581 l 2075 1583 l 2054 1586 l 2052 1585 l 2054 1583 l CP 
2089 1577 m 2102 1575 l 2110 1574 l 2112 1575 l 2110 1577 l 2102 1578 l 2090 1580 l 2088 1579 l 2089 1577 l CP 
2125 1572 m 2127 1572 l 2146 1569 l 2147 1571 l 2146 1572 l 2128 1575 l 2125 1575 l 2124 1574 l 2125 1572 l CP 
2161 1567 m 2181 1565 l 2181 1565 l 2183 1566 l 2182 1568 l 2182 1568 l 2161 1570 l 2159 1569 l 2161 1567 l CP 
2196 1563 m 2209 1561 l 2211 1563 l 2210 1564 l 2197 1566 l 2195 1565 l 2196 1563 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2236 1560 m 2208 1549 l 2211 1576 l 2236 1560 l CP 
stroke
2263 1557 m 2235 1547 l 2238 1573 l 2263 1557 l CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 1408 1921 m 1428 1915 l 1428 1915 l 1430 1916 l 1429 1917 l 1429 1918 l 1409 1924 l 1407 1923 l 1408 1921 l CP 
1443 1910 m 1447 1909 l 1463 1904 l 1464 1905 l 1463 1907 l 1448 1911 l 1443 1913 l 1442 1912 l 1443 1910 l CP 
1477 1899 m 1485 1897 l 1497 1893 l 1499 1894 l 1498 1896 l 1485 1900 l 1478 1902 l 1476 1901 l 1477 1899 l CP 
1511 1888 m 1520 1885 l 1531 1882 l 1533 1883 l 1532 1885 l 1521 1888 l 1512 1891 l 1510 1890 l 1511 1888 l CP 
1545 1877 m 1554 1875 l 1565 1871 l 1567 1872 l 1566 1874 l 1555 1877 l 1546 1880 l 1544 1879 l 1545 1877 l CP 
1580 1866 m 1586 1864 l 1600 1860 l 1602 1861 l 1601 1863 l 1587 1867 l 1581 1869 l 1579 1868 l 1580 1866 l CP 
1614 1856 m 1617 1855 l 1634 1849 l 1636 1850 l 1635 1852 l 1618 1857 l 1615 1858 l 1613 1857 l 1614 1856 l CP 
1648 1845 m 1668 1838 l 1670 1839 l 1669 1841 l 1649 1848 l 1647 1847 l 1648 1845 l CP 
1683 1834 m 1701 1828 l 1703 1828 l 1705 1829 l 1704 1831 l 1702 1831 l 1684 1837 l 1682 1836 l 1683 1834 l CP 
1717 1823 m 1726 1820 l 1737 1817 l 1739 1818 l 1738 1820 l 1727 1823 l 1718 1826 l 1716 1825 l 1717 1823 l CP 
1752 1813 m 1772 1806 l 1773 1807 l 1772 1809 l 1752 1815 l 1751 1814 l 1752 1813 l CP 
1786 1802 m 1794 1799 l 1806 1796 l 1808 1797 l 1807 1799 l 1795 1802 l 1787 1805 l 1785 1804 l 1786 1802 l CP 
1820 1792 m 1834 1787 l 1841 1786 l 1842 1787 l 1841 1789 l 1835 1790 l 1821 1794 l 1819 1793 l 1820 1792 l CP 
1855 1781 m 1870 1777 l 1875 1776 l 1877 1777 l 1876 1779 l 1871 1780 l 1856 1784 l 1854 1783 l 1855 1781 l CP 
1890 1772 m 1903 1768 l 1910 1766 l 1912 1767 l 1911 1769 l 1904 1771 l 1890 1774 l 1889 1773 l 1890 1772 l CP 
1924 1762 m 1932 1760 l 1945 1757 l 1947 1758 l 1945 1760 l 1933 1763 l 1925 1765 l 1923 1764 l 1924 1762 l CP 
1959 1753 m 1971 1750 l 1980 1748 l 1982 1749 l 1980 1751 l 1972 1753 l 1960 1756 l 1958 1755 l 1959 1753 l CP 
1994 1745 m 1995 1745 l 2006 1743 l 2015 1741 l 2017 1742 l 2016 1744 l 2007 1746 l 1996 1748 l 1995 1748 l 1993 1747 l 1994 1745 l CP 
2030 1738 m 2038 1737 l 2051 1735 l 2052 1736 l 2051 1738 l 2038 1740 l 2030 1741 l 2029 1740 l 2030 1738 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2085 1733 m 2057 1722 l 2060 1749 l 2085 1733 l CP 
stroke
2112 1730 m 2084 1720 l 2087 1746 l 2112 1730 l CP 
stroke
GSE
GpPBeg1
1 1 1 SC
NP 802 384 m 1076 341 l 1351 384 l 1076 428 l 802 384 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 802 384 m 1076 341 l 1351 384 l 1076 428 l 802 384 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 937 399 M <0102>[28  0]xS 
976 399 M <03>S 
1004 399 M <040506070508>[25 14 27 17 14  0]xS 
1115 399 M <090908>[29 29  0]xS 
1187 399 M <0F>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 428 m 1076 442 l 1076 442 l 1076 454 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1091 438 m 1076 454 l 1060 438 l 1091 438 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 261 m 1076 306 l 1076 306 l 1076 328 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1092 325 m 1076 341 l 1061 325 l 1092 325 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 802 384 m 642 384 l 642 697 l 1063 697 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1060 681 m 1076 697 l 1060 712 l 1060 681 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2254 548 m 2254 636 l 2032 636 l 2032 734 l 2101 734 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2098 722 m 2121 734 l 2098 745 l 2098 722 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2632 618 m 2797 618 l 2797 702 l 2632 702 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2632 702 m 2797 702 l 2797 618 l 2632 618 l 2632 702 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 344 VM?
2 1148 57 <000100090000054605ba000a013eb1020243545840120501000802010200
080a00050908050102052fddcd10ddcd113333003f3f3f11123931301b40
242f05012a002803250a2f0c300c600c89088909900cc00cf00c0b200c50
0c0204020b0802b10602435458b709010c0b00080102003f3f0111123939
1b40240a0909200805140808050001012002051402020509010205e9200a
000809650801650208b8ffc0400b2839500801800890080208b80101400d
024028395f02018f029f020202b8010140112005500502300560059005c0
05f0050505b80288b30b60a8182b1910f45d71e45d712be45d712b1810ed
10ed003f3c1a19ed183f3c87052e2b7d10c4872e182b7d10c4014bb00b53
4bb014515a58b2000f0ab8fff1b2091201b8fff1b2081402b8ffee383838
38383859014bb028534bb036515a58b90000ffc03859593130015d715d00
5d5921013301161736370133010241fdc8d2017d2e1f222d018cc6fdc205
bafbd7807078780429fa4600>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/V 57 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 42 /V put
pop
2642 675 M (*)S 
2675 675 M <0F>S 
2703 675 M <03>S 
2731 675 M <0A>S 
2759 675 M <01>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2715 702 m 2715 734 l 2309 734 l 2309 723 2300 714 2289 714 c 2278 714 2270 723 2270 734 c 2270 734 2270 734 2270 734 c 2215 734 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2218 745 m 2195 734 l 2218 722 l 2218 745 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2715 524 m 2715 598 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2726 595 m 2715 618 l 2703 595 l 2726 595 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2159 769 m 2159 855 l 2002 855 l 2002 836 1986 820 1967 820 c 1948 820 1933 836 1933 855 c 1933 855 1933 855 1933 855 c 1905 855 l 1905 252 l 2234 252 l 2234 241 2243 233 2254 233 c 2265 233 2274 241 2274 252 c 2274 252 2274 252 2274 252 c 2529 252 l 2529 241 2538 233 2549 233 c 2560 233 2569 241 2569 252 c 2569 252 2569 252 2569 252 c 2632 252 l 2632 241 2641 233 2652 233 c 2662 233 2671 241 2671 252 c 2671 252 2671 252 2671 252 c 2790 252 l 2790 357 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2801 354 m 2790 377 l 2778 354 l 2801 354 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2715 524 m 2715 573 l 2289 573 l 2289 877 l 2060 877 l 2060 1116 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2072 1113 m 2060 1136 l 2049 1113 l 2072 1113 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2139 1385 m 2305 1385 l 2305 1469 l 2139 1469 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2139 1469 m 2305 1469 l 2305 1385 l 2139 1385 l 2139 1469 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 2152 1441 M <050B01>[14 42  0]xS 
2235 1441 M <2416>[28  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2222 1351 m 2222 1365 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2233 1362 m 2222 1385 l 2210 1362 l 2233 1362 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2954 562 m 3190 562 l 3190 709 l 2954 709 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2954 709 m 3190 709 l 3190 562 l 2954 562 l 2954 709 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 3035 620 M <1C1D1E>[34 27  0]xS 
2989 680 M <191A1B1C1D1E>[28 28 36 33 28  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 3078 860 m 3279 860 l 3279 944 l 3078 944 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3078 944 m 3279 944 l 3279 860 l 3078 860 l 3078 944 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 3099 916 M <191A1B201E19>[28 28 36 28 11  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3072 709 m 3072 788 l 3120 788 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3117 777 m 3140 788 l 3117 800 l 3117 777 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3267 788 m 3234 788 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3237 800 m 3214 788 l 3237 777 l 3237 800 l CP 
eofill
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol /F0S21 F0 [33 0 0 -33 0 0 ] mFS
F0S21 Ji 
3288 798 M <0F>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3178 824 m 3178 842 l 3179 842 l 3179 860 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3190 837 m 3179 860 l 3167 837 l 3190 837 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3179 944 m 3179 970 l 3340 970 l 3340 518 l 3147 518 l 3147 542 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3159 539 m 3147 562 l 3136 539 l 3159 539 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2596 377 m 2833 377 l 2833 524 l 2596 524 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2596 524 m 2833 524 l 2833 377 l 2596 377 l 2596 524 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F0S32 Ji 
2678 435 M <1C1D1E>[33 28  0]xS 
2656 495 M (*)S 
2689 495 M <0F>S 
2717 495 M <03>S 
2745 495 M <0A>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 3141 1053 m 3141 1034 3157 1018 3176 1018 c 3196 1018 3212 1034 3212 1053 c 3212 1053 3212 1053 3212 1053 c 3212 1073 3196 1089 3176 1089 c 3157 1089 3141 1073 3141 1053 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3141 1053 m 3141 1034 3157 1018 3176 1018 c 3196 1018 3212 1034 3212 1053 c 3212 1053 3212 1053 3212 1053 c 3212 1073 3196 1089 3176 1089 c 3157 1089 3141 1073 3141 1053 c CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol /F0S3A F0 [58 0 0 -58 0 0 ] mFS
F0S3A Ji 
3142 1074 M <0909>[34  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3072 709 m 3072 787 l 2927 787 l 2927 1057 l 3111 1057 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3108 1045 m 3131 1057 l 3108 1068 l 3108 1045 l CP 
eofill
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F0S21 Ji 
3324 1063 M <2413>[19  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3312 1054 m 3256 1054 l 3256 1053 l 3232 1053 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3235 1065 m 3212 1053 l 3235 1042 l 3235 1065 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2732 787 m 2732 768 2748 752 2768 752 c 2787 752 2803 768 2803 787 c 2803 787 2803 787 2803 787 c 2803 807 2787 823 2768 823 c 2748 823 2732 807 2732 787 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2732 787 m 2732 768 2748 752 2768 752 c 2787 752 2803 768 2803 787 c 2803 787 2803 787 2803 787 c 2803 807 2787 823 2768 823 c 2748 823 2732 807 2732 787 c CP 
stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2790 767 m 2744 812 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2745 768 m 2789 811 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2464 959 m 2502 959 l 2502 787 l 2712 787 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2709 776 m 2732 787 l 2709 799 l 2709 776 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3072 706 m 3072 787 l 2823 787 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2826 799 m 2803 787 l 2826 776 l 2826 799 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2667 942 m 2868 942 l 2868 1026 l 2667 1026 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2667 1026 m 2868 1026 l 2868 942 l 2667 942 l 2667 1026 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F0S32 Ji 
2706 998 M <04250B>[25 28  0]xS 
2801 998 M <0A>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2768 823 m 2768 922 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2779 919 m 2768 942 l 2756 919 l 2779 919 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2768 1026 m 2727 1044 l 2646 1044 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2649 1055 m 2626 1044 l 2649 1032 l 2649 1055 l CP 
eofill
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol /F0S00IFFFFFFD6 F0 [0 -42 -42 0 0 0 ] mFS
F0S00IFFFFFFD6 Ji 
2458 1074 M <0A>S 
2458 1050 M (')S 
2458 1030 M <16>S 
2458 1006 M <1A>S 
2458 983 M ($)S 
2458 960 M (\()S 
2458 937 M (\()S 
2458 914 M <16>S 
2458 891 M ( )S 
2458 867 M <16>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2591 1079 m 2415 1079 l 2415 1068 2406 1059 2396 1059 c 2385 1059 2376 1068 2376 1079 c 2376 1079 2376 1079 2376 1079 c 2327 1079 l 2327 1068 2318 1059 2307 1059 c 2296 1059 2287 1068 2287 1079 c 2287 1079 2287 1079 2287 1079 c 2189 1079 l 2189 1117 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2200 1114 m 2189 1137 l 2177 1114 l 2200 1114 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2691 1357 m 2927 1357 l 2927 1504 l 2691 1504 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2691 1504 m 2927 1504 l 2927 1357 l 2691 1357 l 2691 1504 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F0S32 Ji 
2772 1415 M <1C1D1E>[34 28  0]xS 
2750 1475 M (*)S 
2784 1475 M <0A>S 
2811 1475 M <03>S 
2839 1475 M <0A>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2809 1504 m 2809 1535 l 2610 1535 l 2610 1524 2601 1515 2590 1515 c 2580 1515 2571 1524 2571 1535 c 2571 1535 2571 1535 2571 1535 c 2528 1535 l 2528 1524 2519 1515 2508 1515 c 2497 1515 2488 1524 2488 1535 c 2488 1535 2488 1535 2488 1535 c 2346 1535 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2349 1546 m 2326 1535 l 2349 1523 l 2349 1546 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2255 1535 m 2255 1515 2271 1499 2291 1499 c 2310 1499 2326 1515 2326 1535 c 2326 1535 2326 1535 2326 1535 c 2326 1554 2310 1570 2291 1570 c 2271 1570 2255 1554 2255 1535 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2255 1535 m 2255 1515 2271 1499 2291 1499 c 2310 1499 2326 1515 2326 1535 c 2326 1535 2326 1535 2326 1535 c 2326 1554 2310 1570 2291 1570 c 2271 1570 2255 1554 2255 1535 c CP 
stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2259 1535 m 2323 1535 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2291 1503 m 2291 1567 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2222 1469 m 2222 1535 l 2232 1535 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2229 1523 m 2252 1535 l 2229 1546 l 2229 1523 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2291 1570 m 2291 1601 l 2195 1601 l 2195 1639 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2206 1636 m 2195 1659 l 2183 1636 l 2206 1636 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2490 1179 m 2691 1179 l 2691 1263 l 2490 1263 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2490 1263 m 2691 1263 l 2691 1179 l 2490 1179 l 2490 1263 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 2521 1235 M <050B01>[13 42  0]xS 
2604 1235 M <1317>[28  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2591 1079 m 2591 1159 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2602 1156 m 2590 1179 l 2579 1156 l 2602 1156 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2590 1263 m 2590 1629 l 2528 1629 l 2528 1618 2519 1609 2508 1609 c 2497 1609 2488 1618 2488 1629 c 2488 1629 2488 1629 2488 1629 c 2345 1629 l 2345 1639 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2357 1636 m 2345 1659 l 2334 1636 l 2357 1636 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2245 1862 m 2446 1862 l 2446 1946 l 2245 1946 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2245 1946 m 2446 1946 l 2446 1862 l 2245 1862 l 2245 1946 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 2275 1918 M <050B01>[14 42  0]xS 
2359 1918 M <0D16>[28  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2345 1801 m 2345 1842 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2357 1839 m 2345 1862 l 2334 1839 l 2357 1839 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2667 1698 m 2868 1698 l 2868 1782 l 2667 1782 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2667 1782 m 2868 1782 l 2868 1698 l 2667 1698 l 2667 1782 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 2698 1755 M <050B01>[14 41  0]xS 
2781 1755 M <0D0F>[28  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2291 1570 m 2291 1601 l 2488 1601 l 2488 1590 2497 1581 2508 1581 c 2519 1581 2528 1590 2528 1601 c 2528 1601 2528 1601 2528 1601 c 2571 1601 l 2571 1590 2580 1581 2590 1581 c 2601 1581 2610 1590 2610 1601 c 2610 1601 2610 1601 2610 1601 c 2610 1601 l 2768 1601 l 2768 1678 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2779 1675 m 2768 1698 l 2756 1675 l 2779 1675 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2768 1782 m 2768 1824 l 2365 1824 l 2365 1813 2356 1804 2345 1804 c 2335 1804 2326 1813 2326 1824 c 2326 1824 2326 1824 2326 1824 c 1982 1824 l 1982 323 l 2083 323 l 2083 351 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2094 348 m 2083 371 l 2071 348 l 2094 348 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2006 371 m 2502 371 l 2502 548 l 2006 548 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2006 548 m 2502 548 l 2502 371 l 2006 371 l 2006 548 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 344 VM?
2 10468 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/o 82 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 43 /o put
pop
2022 474 M <2B250508>[28 28 14  0]xS 
2106 474 M <09080E0E>[29 14 16  0]xS 
2182 474 M <1E>S 
2193 474 M <0A>S 
2221 474 M <1010>[29  0]xS 
2279 474 M <0D>S 
2307 474 M <140811>[17 14  0]xS 
2367 474 M <1E>S 
2378 474 M <0F>S 
2406 474 M <14>S 
2422 474 M <15>S 
2446 474 M <1E>S 
2457 474 M <13>S 
2062 416 M <1E>S 
2074 416 M <0A>S 
2229 416 M <1E>S 
2240 416 M <0F>S 
2350 416 M <1E>S 
2362 416 M <13>S 
2207 539 M (+%\005)[28 27  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2345 1946 m 2345 1981 l 1953 1981 l 1953 294 l 2234 294 l 2234 283 2243 274 2254 274 c 2265 274 2274 283 2274 294 c 2274 294 2274 294 2274 294 c 2372 294 l 2372 351 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2383 348 m 2372 371 l 2360 348 l 2383 348 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2254 202 m 2254 351 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2254 202 m 2259 202 2263 198 2263 193 c 2263 189 2259 185 2254 185 c 2254 185 2254 185 2254 185 c 2249 185 2245 189 2245 193 c 2245 198 2249 202 2254 202 c CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 2265 348 m 2254 371 l 2242 348 l 2265 348 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2652 202 m 2651 357 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2652 202 m 2657 202 2661 198 2661 193 c 2661 188 2657 185 2652 185 c 2652 185 2652 185 2652 185 c 2647 185 2643 188 2643 193 c 2643 198 2647 202 2652 202 c CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 2663 354 m 2651 377 l 2640 354 l 2663 354 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2768 1782 m 2768 1823 l 2907 1823 l 2907 1812 2916 1803 2927 1803 c 2938 1803 2947 1812 2947 1823 c 2947 1823 2947 1823 2947 1823 c 2998 1823 l 2998 1327 l 2884 1327 l 2884 1337 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2896 1334 m 2884 1357 l 2873 1334 l 2896 1334 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2555 1044 m 2555 1024 2571 1008 2591 1008 c 2610 1008 2626 1024 2626 1044 c 2626 1044 2626 1044 2626 1044 c 2626 1063 2610 1079 2591 1079 c 2571 1079 2555 1063 2555 1044 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2555 1044 m 2555 1024 2571 1008 2591 1008 c 2610 1008 2626 1024 2626 1044 c 2626 1044 2626 1044 2626 1044 c 2626 1063 2610 1079 2591 1079 c 2571 1079 2555 1063 2555 1044 c CP 
stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2559 1044 m 2623 1044 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2591 1012 m 2591 1075 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2464 959 m 2502 959 l 2502 1044 l 2532 1044 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2529 1032 m 2552 1044 l 2529 1055 l 2529 1032 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2124 734 m 2124 714 2140 698 2159 698 c 2179 698 2195 714 2195 734 c 2195 734 2195 734 2195 734 c 2195 753 2179 769 2159 769 c 2140 769 2124 753 2124 734 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2124 734 m 2124 714 2140 698 2159 698 c 2179 698 2195 714 2195 734 c 2195 734 2195 734 2195 734 c 2195 753 2179 769 2159 769 c 2140 769 2124 753 2124 734 c CP 
stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2128 734 m 2191 734 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2159 702 m 2159 765 l stroke
GSE
GpPBeg1
1 1 1 SC
NP 3143 788 m 3143 769 3159 753 3178 753 c 3198 753 3214 769 3214 788 c 3214 788 3214 788 3214 788 c 3214 808 3198 824 3178 824 c 3159 824 3143 808 3143 788 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3143 788 m 3143 769 3159 753 3178 753 c 3198 753 3214 769 3214 788 c 3214 788 3214 788 3214 788 c 3214 808 3198 824 3178 824 c 3159 824 3143 808 3143 788 c CP 
stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3146 788 m 3210 788 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3178 757 m 3178 820 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2396 958 m 2396 1117 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2396 958 m 2400 958 2404 954 2404 949 c 2404 944 2400 940 2396 940 c 2396 940 2396 940 2396 940 c 2391 940 2387 944 2387 949 c 2387 954 2391 958 2396 958 c CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 2407 1114 m 2396 1137 l 2384 1114 l 2407 1114 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2307 958 m 2307 1117 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2307 958 m 2312 958 2316 954 2316 949 c 2316 944 2312 940 2307 940 c 2307 940 2307 940 2307 940 c 2302 940 2298 944 2298 949 c 2298 954 2302 958 2307 958 c CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 2319 1114 m 2307 1137 l 2296 1114 l 2319 1114 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2715 524 m 2715 573 l 2549 573 l 2549 146 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2549 155 m 2554 155 2558 151 2558 146 c 2558 141 2554 137 2549 137 c 2549 137 2549 137 2549 137 c 2544 137 2541 141 2541 146 c 2541 151 2544 155 2549 155 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2809 1504 m 2809 1534 l 2927 1534 l 2927 1988 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2927 1980 m 2922 1980 2918 1984 2918 1988 c 2918 1993 2922 1997 2927 1997 c 2927 1997 2927 1997 2927 1997 c 2932 1997 2936 1993 2936 1988 c 2936 1984 2932 1980 2927 1980 c CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 3470 170 m 3636 170 l 3636 1941 l 3470 1941 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 1941 m 3636 1941 l 3636 170 l 3470 170 l 3470 1941 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 1032 VM?
1 10850 41 <000100a80000048505ba0009008d402b06051e08088f070107070003041e
0201020008079c2002200b02021a0b0409200120000100201010025500b8
fff6b40f0f025500b8fff6b40d0d025500b8fffa400b0c0c0255000c0b0b
065500b8fffeb40c0c065500b8fff0400a0d0d0655005d0a3b5c182b4e10
f42b2b2b2b2b2b2b5d3c4dfd3c4e10f65d4de4003f3f3cfd3c12392f5d3c
10fd3c313033112115211121152111a803ddfce502b0fd5005baadfe3aad
fd66>/TTE1AB1D78t00 AddT42Char 
2 0 54 <0001005cffe704eb05d30030021540276303630473037404042527350339
1c430349074c1d451f44244627530359075c1d572889130e23b8fff2b410
10025524b8fff2b41010025525b8fff2b41010025526b8fff2b410100255
27b8fff2b41010025523b8fff6b40d10025524b8fff6b40d10025525b8ff
f6b40d10025526b8fff6b40d10025527b8fff640460d100255280d262402
24032725360f34234425452f5a20562355256c0b6a0d6b0e66146518790b
7a0d7a0f7d107524732586038a0b890d8a0f8d1085248325920d960f9615
1eb10602435458402d2126121b261a09262901260000291a120432312600
650002000d2d791b891b021b25160d2d1e27250125051605b8fff4400c0c
0c0655051e2d091e1e1603003fed3fed2b1112395d1112391112395d1112
395d01111217392fed2fed2fed2fed1b402d25240e0d0b05211c1d1e1b08
070604030206012524220e0d0b06051e1b2d1a400c0c02558f1a011aed16
002d01b8ffc040120c0c02551001200150016001700190010601b801b040
132d1e1e1603051e2d091b261a4a092600290129b8ffeab40e0e025529b8
fff4400d0c0c0255291a32212612012612b8ffecb40e0e025512b8fff6b4
0d0d025512b8fff8400f0c0c02551254200001001931635b182b4e10f45d
4de42b2b2bed10ed4e10f62b2b5d4dedf4ed003fed3fed10fd5d2be410fd
5d2bf4111217391117391112393901121739593130005d712b2b2b2b2b2b
2b2b2b2b015d7113371e0233323636353426272624272626353436363332
161617072626232206151417160417161615140606232224265cb70d5fc8
7d6faa53505c3bfe6c5169677ef294a3f98605ba0fada9b0a1393801d958
807a86fb9dc7fef39901d7106e8d5742734445672317612b37a3656fc164
69cc810e8b8e815b4f33336b283bb57675cf7374e900>/TTE1AB1D78t00 AddT42Char 
1 12858 48 <000100980000060f05ba001002e4b10202435458b90008fff6400b0c0c02
55080e0d11025502b8ffeeb40d11025505b8ffee40280d1102550c120c0c
0255050f0c030900010208090b0e000809020a0b06101002550b100d0d02
550bb8fffab60c0c02550b1000b8ffe6b41010025500b8fff8b40f0f0255
00b8fffcb40d0d0255002f2b2b2bcd2f2b2b2bcd003f3fc0c010d0d0c011
1217392b2b3130012b2b2b001bb10602435458401f07200b0b065506200b
0b065503200b0b065504200b0b065505200b0b065508b8fff240230b0b06
55020c0b0b065503060c0c0655020e0c0c0655090c0c0c06550a0c0c0c06
5507b8fff8b40d0d065508b8fff8401f0d0d06552605010c200a12340f20
0a12340f050c0300010e0b00080801020ab8ffeeb40b0b06550ab8ffeeb4
0c0c06550abb0256001200100256400d000c0b0b065500060c0c065500b8
fff8b40d0d065500012f2b2b2bf42ff42b2b003f3c3f3c3c111217392b2b
5d3130012b2b2b2b2b2b2b2b002b2b2b2b2b1b407f00020f0814021b0804
760c860cc80c03090c490c490f032904250d2c0e58035b04760d780e870d
080b020508390d360e4f024b03440740084d0d420e0a9802990396079608
a803a7070612020f0e0e30050214050502080c0d0d300508140505080c52
0f5201400102020808090a0b0b0d0d0e0e1000080902601280120212ba02
a8000d0131b2052008b80131400a0c090a20400c7f0b010bba0256000e01
0bb2052002b8010b40090f0100200f70100110b80256b720056005800503
05b802a8b3113b59182b1910f45df45d3c18fd3c10ed1a1910edf45d3c1a
18fd3c10ed1a1910ede45d00183f3f3c3c103c103c103c103c103c103c1a
10eded87052e2b877dc4872e182b877dc43130004bb00b534bb01e515a58
bd000cfffb0008ffd60002ffd638383859014bb00c534bb028515a58b900
0dfff8b10e0a38385901435c58b9000dffd4b621390e2c21390db8ffd4b6
37390e3237390db8ffd4b52d390e2c2d392b2b2b2b2b2b5972715d00715d
015d59593311210116173637012111231101230111980124015b30161935
015f0105bbfe56affe5805bafbf29148509b03fcfa4604cbfb3504e0fb20
>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/F 41 def
/S 54 def
/M 48 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 44 /F put
dup 45 /S put
dup 46 /M put
pop
3500 1070 M (,-.)[30 34  0]xS 
F0S21 Ji 
2999 517 M <0A>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3008 526 m 3008 542 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3020 539 m 3008 562 l 2997 539 l 3020 539 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3465 607 m 3360 607 l 3360 596 3351 587 3340 587 c 3330 587 3321 596 3321 607 c 3321 607 3321 607 3321 607 c 3210 607 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3213 618 m 3190 607 l 3213 595 l 3213 618 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 672 m 3360 672 l 3360 661 3351 652 3340 652 c 3330 652 3321 661 3321 672 c 3321 672 3321 672 3321 672 c 3210 672 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3213 683 m 3190 672 l 3213 660 l 3213 683 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3465 902 m 3360 902 l 3360 891 3351 882 3340 882 c 3330 882 3321 891 3321 902 c 3321 902 3321 902 3321 902 c 3299 902 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3302 913 m 3279 902 l 3302 890 l 3302 913 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3459 748 m 3360 748 l 3360 737 3351 729 3340 729 c 3330 729 3321 737 3321 748 c 3321 748 3321 748 3321 748 c 3091 748 l 3091 737 3083 729 3072 729 c 3061 729 3052 737 3052 748 c 3052 748 3052 748 3052 748 c 2880 748 l 2880 660 l 2817 660 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2820 672 m 2797 660 l 2820 649 l 2820 672 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 477 m 2853 477 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2856 488 m 2833 477 l 2856 465 l 2856 488 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 429 m 2853 429 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2856 441 m 2833 429 l 2856 418 l 2856 441 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3176 1089 m 3176 1145 l 3444 1145 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3442 1134 m 3465 1145 l 3442 1157 l 3442 1134 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 982 m 2947 982 l 2947 971 2938 962 2927 962 c 2916 962 2907 971 2907 982 c 2907 982 2907 982 2907 982 c 2888 982 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2891 994 m 2868 982 l 2891 971 l 2891 994 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 1222 m 2764 1221 l 2764 1210 2755 1201 2745 1201 c 2734 1201 2725 1210 2725 1221 c 2725 1221 2725 1221 2725 1221 c 2711 1221 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2714 1232 m 2691 1221 l 2714 1209 l 2714 1232 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 1303 m 2765 1303 l 2765 1293 2756 1284 2745 1284 c 2734 1284 2725 1293 2725 1303 c 2725 1303 2725 1303 2725 1303 c 2610 1303 l 2610 1293 2601 1284 2590 1284 c 2580 1284 2571 1293 2571 1303 c 2571 1303 2571 1303 2571 1303 c 2526 1303 l 2526 1427 l 2325 1427 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2328 1438 m 2305 1427 l 2328 1415 l 2328 1438 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 1398 m 3018 1398 l 3018 1387 3009 1378 2998 1378 c 2987 1378 2978 1387 2978 1398 c 2978 1398 2978 1398 2978 1398 c 2947 1398 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2950 1409 m 2927 1398 l 2950 1386 l 2950 1409 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3465 1469 m 3018 1469 l 3018 1458 3009 1449 2998 1449 c 2987 1449 2978 1458 2978 1469 c 2978 1469 2978 1469 2978 1469 c 2947 1469 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2950 1480 m 2927 1469 l 2950 1457 l 2950 1480 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 1740 m 3018 1740 l 3018 1730 3009 1721 2998 1721 c 2987 1721 2978 1730 2978 1740 c 2978 1740 2978 1740 2978 1740 c 2947 1740 l 2947 1730 2938 1721 2927 1721 c 2916 1721 2907 1730 2907 1740 c 2907 1740 2907 1740 2907 1740 c 2888 1740 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 2891 1752 m 2868 1740 l 2891 1729 l 2891 1752 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2744 1170 m 2745 1337 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2744 1170 m 2749 1170 2753 1166 2753 1162 c 2753 1157 2749 1153 2744 1153 c 2744 1153 2744 1153 2744 1153 c 2739 1153 2735 1157 2735 1162 c 2735 1167 2739 1170 2744 1170 c CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 2757 1334 m 2746 1357 l 2734 1334 l 2757 1334 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 2112 1659 m 2579 1659 l 2579 1801 l 2112 1801 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2112 1801 m 2579 1801 l 2579 1659 l 2112 1659 l 2112 1801 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol /F0S2A F0 [42 0 0 -42 0 0 ] mFS
F0S2A Ji 
2121 1742 M <2B250508>[24 23 11  0]xS 
2191 1742 M <090E>[24  0]xS 
2229 1742 M <1E>S 
2238 1742 M <0A>S 
2262 1742 M <11>S 
2286 1742 M <1E>S 
2295 1742 M <0F>S 
2318 1742 M <14>S 
2332 1742 M <15>S 
2352 1742 M <0E0E>[14  0]xS 
2380 1742 M <1E>S 
2389 1742 M <0A>S 
2412 1742 M (\)\))[24  0]xS 
2461 1742 M <0C>S 
2484 1742 M <1411>[14  0]xS 
2522 1742 M <1E>S 
2531 1742 M <13>S 
2554 1742 M <14>S 
2174 1689 M <1E>S 
2184 1689 M <0A>S 
2329 1689 M <1E>S 
2338 1689 M <0F>S 
2496 1689 M <1E>S 
2505 1689 M <13>S 
2309 1796 M (+%\005)[23 23  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2508 1480 m 2508 1639 l stroke
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2508 1480 m 2513 1480 2516 1476 2516 1471 c 2516 1467 2513 1463 2508 1463 c 2508 1463 2508 1463 2508 1463 c 2503 1463 2499 1467 2499 1471 c 2499 1476 2503 1480 2508 1480 c CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 2519 1636 m 2508 1659 l 2496 1636 l 2519 1636 l CP 
eofill
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F0S32 Ji 
2665 208 M (*)S 
2698 208 M (")S 
2712 208 M <0F>S 
2740 208 M (#)S 
2271 208 M <12>S 
2296 208 M <13>S 
2245 964 M <12>S 
2270 964 M <0A>S 
2333 964 M <12>S 
2358 964 M <0F>S 
2443 1486 M <12>S 
2468 1486 M ($)S 
2938 2003 M (*)S 
2972 2003 M (")S 
2986 2003 M <0A>S 
3013 2003 M (#)S 
2560 160 M (*)S 
2594 160 M (")S 
2608 160 M <0F>S 
2635 160 M (#)S 
2761 1176 M (*)S 
2794 1176 M (")S 
2808 1176 M <0A>S 
2836 1176 M (#)S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 744 108 m 1409 108 l 1409 172 l 744 172 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 744 172 m 1409 172 l 1409 108 l 744 108 l 744 172 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 344 VM?
1 11694 44 <000100bf0000018105ba000300ccb5010200080205b8ffc0b3383d3405b8
ffc0b333343405b8ffc0b32d303405b8ffc0b328293405b8ffc0b3232534
05b8ffc0b31d1e3405b8ffc0b3181a3405b8ffc0402a0d103420059005af
050303200100008f00a000b000042f0040005000df00f000051220008f00
90000305b8ffc0400b0d0d025500181010025500b8ffecb40f0f025500b8
ffeeb40d0d025500b8fff640100c0c025500200b0b065500a204d659182b
10f62b2b2b2b2b2b5d435c58b2800001015d5971723cfd5d2b2b2b2b2b2b
2b2b3c003f3f313033113311bfc205bafa46>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/I 44 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 47 /I put
pop
1020 155 M <2F19012505>[14 28 28 28  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 172 m 1076 186 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1090 183 m 1076 197 l 1063 183 l 1090 183 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
5 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1076 1984 m 1076 2028 l 134 2028 l 134 298 l 1060 298 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1057 283 m 1073 298 l 1057 314 l 1057 283 l CP 
eofill
GSE
GpPBeg1
1 1 1 SC
NP 3015 222 m 3251 222 l 3251 369 l 3015 369 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3015 369 m 3251 369 l 3251 222 l 3015 222 l 3015 369 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 3044 280 M <1C1E011A021E191A08>[33 11 28 28 11 11 28 28  0]xS 
689 VM?
2 7098 74 <00020042fe5103ea043e001e002a016f40600b0b05142c0b25144c0b4514
06091d191d2c0b26142c23390b36144a0b46145607580b680bfa0af5150e
2e232c273e233e274c27902ca02c07362136293f2c460b46214529542154
29690763216329602c802cda27e821ee23ef271117160615b802b1b4281c
130701b802aa401020003000600070008000c000d0000700b8027d403205
1c1c0f0a45221c0c0a16153325330a251818d01701101740176017801704
2c400b0c02552c400d0d025517121010025517b8fff440110f0f02551706
0e0e025517160d0d025517b8ffea400b0b0b065517121010065517b8ffee
b40c0c065517b8fffc404a0d0d065517740f012500221f24bf0fcf0fdf0f
ff0f041f0f3f0f4f0f030f200b0b02550f1a0c0c02550f220d0d02550f1c
0b0b06550f0c0d0d06550f1a0c0c06550f192b2c74213450182b2b4ef42b
2b2b2b2b2b5d714dedf4ed10fd2b2b2b2b2b2b2b2b2b2b5d713c10fde4f6
3c003fede43fedfd5de43fede43f3c3130015d71005d7117171617163332
363736270623220235341236333217353311140606232226131416333236
35342623220666af0b3243747d88180e0176b0dbf06ed18dbc7aa665dba0
beea99a67d7ca8ad7a78a8581a512532645a37b08b013cdd9801018c9880
fc6af8cf78ab032ad1c0bfccc3c6c300>/TTE1AB1D78t00 AddT42Char 
2 5440 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/g 74 def
/c 70 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 48 /g put
dup 49 /c put
pop
3081 340 M <022B301E31>[12 27 28 11  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 264 m 3272 264 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3274 275 m 3251 264 l 3274 252 l 3274 275 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3470 329 m 3272 329 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3274 340 m 3251 329 l 3274 317 l 3274 340 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3133 369 m 3133 408 l 3447 408 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 3444 397 m 3467 408 l 3444 420 l 3444 397 l CP 
eofill
GSE
GpPBeg1
0 0 0 SC
NP 1350 383 m 1362 376 l 1368 372 l 1370 373 l 1370 375 l 1364 379 l 1352 386 l 1350 385 l 1350 383 l CP 
1381 365 m 1397 355 l 1399 354 l 1401 354 l 1401 356 l 1399 357 l 1383 367 l 1381 367 l 1381 365 l CP 
1412 346 m 1421 340 l 1429 334 l 1432 335 l 1431 337 l 1422 342 l 1413 348 l 1411 348 l 1412 346 l CP 
1442 327 m 1446 325 l 1459 317 l 1460 316 l 1462 317 l 1462 319 l 1461 319 l 1447 327 l 1444 329 l 1442 329 l 1442 327 l CP 
1474 309 m 1489 300 l 1492 299 l 1494 299 l 1493 301 l 1490 303 l 1475 311 l 1473 311 l 1474 309 l CP 
1505 292 m 1522 284 l 1524 283 l 1526 283 l 1526 285 l 1523 286 l 1507 294 l 1505 294 l 1505 292 l CP 
1538 276 m 1541 275 l 1550 271 l 1557 268 l 1559 269 l 1558 271 l 1552 273 l 1542 278 l 1539 279 l 1537 278 l 1538 276 l CP 
1571 262 m 1571 262 l 1582 257 l 1591 254 l 1593 255 l 1592 257 l 1583 260 l 1572 265 l 1572 265 l 1570 264 l 1571 262 l CP 
1605 249 m 1615 245 l 1624 241 l 1626 242 l 1625 244 l 1616 248 l 1606 252 l 1604 251 l 1605 249 l CP 
1638 236 m 1650 232 l 1658 229 l 1660 230 l 1659 232 l 1651 235 l 1639 239 l 1638 238 l 1638 236 l CP 
1673 225 m 1688 220 l 1692 218 l 1694 219 l 1693 221 l 1689 222 l 1673 228 l 1672 227 l 1673 225 l CP 
1707 214 m 1708 213 l 1727 207 l 1729 208 l 1728 210 l 1709 216 l 1708 217 l 1706 216 l 1707 214 l CP 
1741 203 m 1750 201 l 1761 197 l 1763 198 l 1762 200 l 1751 203 l 1742 206 l 1740 205 l 1741 203 l CP 
1776 193 m 1794 188 l 1796 188 l 1798 189 l 1797 190 l 1795 191 l 1777 196 l 1775 195 l 1776 193 l CP 
1811 184 m 1817 182 l 1831 178 l 1833 179 l 1832 181 l 1818 185 l 1811 187 l 1810 186 l 1811 184 l CP 
1845 175 m 1864 170 l 1866 170 l 1868 171 l 1867 172 l 1864 173 l 1846 178 l 1844 176 l 1845 175 l CP 
1880 166 m 1888 164 l 1901 161 l 1903 162 l 1902 164 l 1888 167 l 1881 169 l 1879 168 l 1880 166 l CP 
1916 158 m 1936 153 l 1938 155 l 1937 156 l 1916 161 l 1914 160 l 1916 158 l CP 
1951 150 m 1962 148 l 1971 146 l 1973 147 l 1972 149 l 1962 151 l 1951 153 l 1950 152 l 1951 150 l CP 
1986 143 m 2007 139 l 2008 140 l 2007 142 l 1987 146 l 1985 145 l 1986 143 l CP 
2021 136 m 2042 132 l 2044 134 l 2043 135 l 2022 139 l 2020 138 l 2021 136 l CP 
2057 130 m 2064 128 l 2078 126 l 2079 127 l 2078 129 l 2065 131 l 2057 133 l 2056 131 l 2057 130 l CP 
2092 124 m 2113 120 l 2115 122 l 2114 123 l 2093 127 l 2091 125 l 2092 124 l CP 
2128 118 m 2149 115 l 2150 116 l 2149 118 l 2128 121 l 2127 120 l 2128 118 l CP 
2164 113 m 2169 112 l 2184 111 l 2186 112 l 2185 113 l 2170 115 l 2164 116 l 2162 115 l 2164 113 l CP 
2199 109 m 2220 106 l 2222 108 l 2221 109 l 2200 112 l 2198 110 l 2199 109 l CP 
2235 105 m 2256 103 l 2258 104 l 2256 106 l 2235 108 l 2234 106 l 2235 105 l CP 
2271 101 m 2275 101 l 2292 100 l 2294 101 l 2292 103 l 2275 104 l 2271 104 l 2270 103 l 2271 101 l CP 
2307 99 m 2327 97 l 2328 97 l 2329 99 l 2328 100 l 2328 100 l 2307 102 l 2306 100 l 2307 99 l CP 
2343 96 m 2364 95 l 2365 97 l 2364 98 l 2343 99 l 2341 98 l 2343 96 l CP 
2379 95 m 2379 95 l 2400 94 l 2401 96 l 2400 97 l 2379 98 l 2379 98 l 2377 96 l 2379 95 l CP 
2415 94 m 2430 94 l 2436 94 l 2437 95 l 2436 97 l 2430 97 l 2415 97 l 2413 96 l 2415 94 l CP 
2451 94 m 2472 94 l 2473 96 l 2472 97 l 2451 97 l 2449 95 l 2451 94 l CP 
2487 94 m 2508 95 l 2509 97 l 2508 98 l 2487 97 l 2485 96 l 2487 94 l CP 
2523 96 m 2531 96 l 2544 97 l 2545 98 l 2544 100 l 2531 99 l 2523 99 l 2521 97 l 2523 96 l CP 
2559 98 m 2580 99 l 2581 100 l 2580 102 l 2559 101 l 2557 99 l 2559 98 l CP 
2595 100 m 2616 102 l 2617 104 l 2616 105 l 2595 103 l 2593 101 l 2595 100 l CP 
2631 103 m 2652 106 l 2653 107 l 2651 108 l 2630 106 l 2629 105 l 2631 103 l CP 
2667 107 m 2678 108 l 2687 110 l 2689 111 l 2687 113 l 2677 111 l 2666 110 l 2665 108 l 2667 107 l CP 
2702 112 m 2723 115 l 2724 116 l 2723 118 l 2702 115 l 2701 113 l 2702 112 l CP 
2738 117 m 2759 120 l 2760 122 l 2758 123 l 2737 120 l 2736 118 l 2738 117 l CP 
2774 123 m 2794 127 l 2795 128 l 2794 129 l 2773 126 l 2772 124 l 2774 123 l CP 
2809 129 m 2819 131 l 2830 133 l 2831 135 l 2829 136 l 2818 134 l 2808 132 l 2807 130 l 2809 129 l CP 
2844 136 m 2864 141 l 2865 141 l 2866 143 l 2864 144 l 2864 144 l 2844 139 l 2842 138 l 2844 136 l CP 
2879 144 m 2900 149 l 2901 151 l 2899 152 l 2879 147 l 2878 145 l 2879 144 l CP 
2914 153 m 2935 158 l 2936 160 l 2934 161 l 2914 156 l 2913 154 l 2914 153 l CP 
2949 162 m 2954 163 l 2970 167 l 2971 169 l 2969 170 l 2953 166 l 2949 165 l 2947 163 l 2949 162 l CP 
2984 171 m 2998 175 l 3004 177 l 3005 179 l 3003 180 l 2997 178 l 2983 174 l 2982 172 l 2984 171 l CP 
3019 182 m 3039 188 l 3040 190 l 3038 191 l 3018 185 l 3017 183 l 3019 182 l CP 
3053 193 m 3073 199 l 3074 201 l 3072 202 l 3052 196 l 3051 194 l 3053 193 l CP 
fill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
3 setlinewidth
[] 0 setdash
0 0 0 SC
NP 3108 213 m 3087 191 l 3078 217 l 3108 213 l CP 
stroke
3133 222 m 3113 201 l 3103 226 l 3133 222 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 344 VM?
1 13668 49 <0001009c0000051f05ba0009017db1120bb8ffc0400a13153408180c1602
5503b8ffe840210c16025508020303200708140707080207030308090402
02090708040320060605b8ffecb40f0f025505b8fff2400b0d0d02550512
0c0c025505b8fff7401a0b0b0655055d200b01200b500b600b700b800b05
0b0809200100b8ffc0400d13153420000100201010025500b8fff6b40f0f
025500b8fff6b40d0d025500b8fffa400b0c0c025500040b0b065500b8ff
f7b40c0c065500b8fff8400a0d0d0655005d0a3b59182b10f62b2b2b2b2b
2b2b5d2b3cfd3c105d71f42b2b2b2b3c10fd3c003f3c3f3c123939011139
3987042e2b877dc4b10602435458b90003ffe0b70c113408200c1134002b
2b5931302b2b012b435c58b40840463903b8ffc0b646390840323903b8ff
c0b632390722193902b8ffdeb619390722323902b8ffdeb6323907222339
02b8ffde400b2339070e1439070e133902b8fff4b61339070e1d3902b8ff
f4b61d39070e153902b8fff8b115392b2b2b2b2b2b2b012b2b2b2b2b2b00
2b2b2b2b59331133011133112301119cc70302bac7fcfe05bafb81047ffa
460480fb8000>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/N 49 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 50 /N put
pop
F0S21 Ji 
797 363 M (2)S 
344 VM?
2 2874 60 <000100060000054605ba000c016ab608093a03043b09b8ffe7b312173408
b8ffe7400e1217340419121734031912173409b8ffd8b318213408b8ffd8
403b182134042818213412260429082a0a2f0e0468016806680bde060405
040303060807090606090603090a0c10025509200a0b140a0a0b06030609
03b8fff640160c1002550320020114020201060c0b0601030200010bb802
1940090a0a0903020200080eb8021840090c0952400a800a020ab801b540
0d0b0b0c200003524f028f020202b801b54009010100141010025500b8ff
f6400b0f0f0255000c0d0d025500b8ffe2b40c0c025500b80218b60d0ec2
2160a8182b2bf62b2b2b2b3c10f45ded10fd3c10f45ded10e6003f3f3c3c
3c10f43c11121739011239872e2b2b087d10c405872e182b2b087d10c487
0ec4c487100ec4c44bb017534bb01c515a58b4080c090c04bafff40003ff
f40138383838593130005d015d435c584009092219390822193904b8ffde
b119392b2b2b592b2b2b2b2b2b2b2b2b2111013301161736370133011102
3bfdcbec01215045425e011ce2fdb7026d034dfe467c7c739001affcb3fd
9300>/TTE1AB1D78t00 AddT42Char 
/TTE1AB1D78t00 findfont /CharStrings get begin
/Y 60 def
end
/TTE1AB1D78t00 findfont /Encoding get
dup 51 /Y put
pop
943 448 M (3)S 
795 1005 M (3)S 
939 1088 M (2)S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 1 1 SC
NP 1992 1137 m 2452 1137 l 2452 1351 l 1992 1351 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1992 1351 m 2452 1351 l 2452 1137 l 1992 1137 l 1992 1351 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F0S2A Ji 
2096 1231 M <2B250508>[23 23 12  0]xS 
2165 1231 M <09080E0E>[25 11 14  0]xS 
2229 1231 M <1E>S 
2238 1231 M <0A>S 
2261 1231 M <1010>[25  0]xS 
2310 1231 M <0D>S 
2333 1231 M <1408>[14  0]xS 
2000 1281 M <11>S 
2024 1281 M <1E>S 
2034 1281 M <13>S 
2057 1281 M <14>S 
2071 1281 M <15>S 
2090 1281 M <0E>S 
2104 1281 M <1E>S 
2113 1281 M <0A>S 
2136 1281 M <11>S 
2161 1281 M <1E>S 
2170 1281 M <0F>S 
2193 1281 M <14>S 
2207 1281 M <15>S 
2227 1281 M <0E0E>[13  0]xS 
2254 1281 M <1E>S 
2264 1281 M <0A>S 
2287 1281 M (\)\))[24  0]xS 
2335 1281 M <0C>S 
2359 1281 M <1411>[13  0]xS 
2397 1281 M <1E>S 
2406 1281 M ($)S 
2429 1281 M <14>S 
2044 1169 M <1E>S 
2053 1169 M <0A>S 
2172 1169 M <1E>S 
2182 1169 M <0F>S 
F0S21 Ji 
2277 1166 M <1E>S 
2285 1166 M <13>S 
F0S2A Ji 
2377 1168 M <1E>S 
2387 1168 M ($)S 
2192 1333 M (+%\005)[23 23  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
1 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2060 1118 m 2060 1137 l stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Pscript_T42Hdr 5.0 0
%%+ procset Pscript_Text 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF
%-12345X@PJL EOJ

%%EndDocument
 @endspecial 258 x Fv(Fig)o(.)12 b(4.)30 b Fx(Synthesized)g(circuit)g
(for)g(TEA)f(and)h(the)g(corresponding)i(operation)f(mapping)g(with)f
(pipelined)523 2322 y(CCDFG;)15 b(dotted)h(lines)g(represent)h(mapping)
g(from)f(CCDFG)f(operations)i(to)f(combinational)h(circuit)f(nodes.)523
2611 y Fr(De\002nition)k(11.)41 b Ft(Given)23 b(a)g(CCDFG)h
Ff(G)g Ft(and)e(a)h(cir)m(cuit)g Ff(M)9 b Ft(,)23 b Ff(G)h
Ft(is)g(equivalent)e(to)h Ff(M)32 b Ft(if)24 b(and)e(only)523
2711 y(if)f(for)f(any)g(e)n(xecution)f Fc([)p Ff(x)1255
2723 y Fz(0)1293 2711 y Ff(;)14 b(x)1377 2723 y Fz(1)1414
2711 y Ff(;)g(x)1498 2723 y Fz(2)1536 2711 y Ff(;)g(:)g(:)g(:)p
Fc(])20 b Ft(of)g Ff(G)h Ft(g)o(ener)o(ated)e(by)h(an)g(input)f
(sequence)g Fc([)p Ff(i)3006 2723 y Fz(0)3043 2711 y
Ff(;)14 b(i)3109 2723 y Fz(1)3145 2711 y Ff(;)g(i)3211
2723 y Fz(2)3248 2711 y Ff(;)g(:)g(:)g(:)p Fc(])523 2811
y Ft(and)26 b(by)h(micr)l(ostep)g(partition)f Fc([)p
Ff(t)1503 2823 y Fz(0)1540 2811 y Ff(;)14 b(t)1607 2823
y Fz(1)1644 2811 y Ff(;)g(:)g(:)g(:)p Fc(])28 b Ft(of)f
Ff(G)p Ft(,)g(and)f(the)h(state)g(sequence)f Fc([)p Ff(s)2893
2823 y Fz(0)2930 2811 y Ff(;)14 b(s)3006 2823 y Fz(1)3043
2811 y Ff(;)g(s)3119 2823 y Fz(2)3156 2811 y Ff(;)g(:)g(:)g(:)p
Fc(])27 b Ft(of)523 2910 y Ff(M)34 b Ft(g)o(ener)o(ated)24
b(by)h(the)g(input)f(sequence)g Fc([)p Ff(E)5 b(M)k(ap)p
Fc(\()p Ff(i)2077 2922 y Fz(0)2114 2910 y Fc(\))p Ff(;)14
b(E)5 b(M)k(ap)p Fc(\()p Ff(i)2486 2922 y Fz(1)2522 2910
y Fc(\))p Ff(;)14 b(E)5 b(M)k(ap)p Fc(\()p Ff(i)2894
2922 y Fz(2)2931 2910 y Fc(\))p Ff(;)14 b(:)g(:)g(:)p
Fc(])p Ft(,)25 b Ff(x)3213 2922 y Fm(k)3280 2910 y Ft(and)523
3010 y Ff(s)562 3022 y Fm(k)624 3010 y Ft(ar)m(e)20 b(equivalent)f
(with)h(r)m(espect)h(to)f Ff(t)1655 3022 y Fm(k)1717
3010 y Ft(under)f Ff(i)1960 3022 y Fm(k)2001 3010 y Ft(,)h
Ff(k)26 b Fg(\025)d Fc(0)p Ft(.)523 3262 y Fr(4.3)82
b(Dual-Rail)20 b(Simulation)g(f)n(or)g(Equi)o(v)o(alence)g(Checking)523
3431 y FA(W)-7 b(e)25 b(check)d(equi)n(v)n(alence)g(between)h(CCDFG)i
Ff(G)f FA(and)f(circuit)g Ff(M)33 b FA(by)23 b(dual-rail)f(symbolic)h
(simu-)523 3531 y(lation)i(\(Fig.)f(5\);)h(the)g(tw)o(o)g(rails)h
(simulate)f Ff(G)g FA(and)g Ff(M)34 b FA(respecti)n(v)o(ely)-5
b(,)22 b(and)j(are)g(synchronized)d(by)523 3631 y(clock)e(c)o(ycle.)f
(The)h(equi)n(v)n(alence)e(checking)g(in)j(clock)e(c)o(ycle)h
Ff(k)k FA(is)d(conducted)d(as)j(follo)n(ws:)1099 4651
y @beginspecial 0 @llx 0 @lly 543 @urx 255 @ury 2075
@rwi @setspecial
%%BeginDocument: figures/dual-rail.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: dual-rail.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5
%%CreationDate: Wed Dec  3 13:43:00 2008
%%For: xie@luoyang (U-LUOYANG\xie,S-1-5-21-1409082233-1177238915-725345543-1003)
%%BoundingBox: 0 0 543 255
%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 255 moveto 0 0 lineto 543 0 lineto 543 255 lineto closepath clip newpath
-70.7 379.3 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
/Times-Roman ff 240.00 scf sf
4500 4500 m
gs 1 -1 sc (or Execution up to Given Bound) col0 sh gr
% Polyline
0 slj
0 slc
15.000 slw
gs  clippath
8430 4990 m 8430 4785 l 8370 4785 l 8370 4990 l 8370 4990 l 8400 4840 l 8430 4990 l cp
eoclip
n 6000 6000 m 8400 6000 l
 8400 4800 l gs col0 s gr gr

% arrowhead
n 8430 4990 m 8400 4840 l 8370 4990 l 8400 4960 l 8430 4990 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1440 5700 m 1200 5700 1200 6060 240 arcto 4 {pop} repeat
  1200 6300 2160 6300 240 arcto 4 {pop} repeat
  2400 6300 2400 5940 240 arcto 4 {pop} repeat
  2400 5700 1440 5700 240 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
3110 6030 m 3315 6030 l 3315 5970 l 3110 5970 l 3110 5970 l 3260 6000 l 3110 6030 l cp
eoclip
n 2400 6000 m
 3300 6000 l gs col0 s gr gr

% arrowhead
n 3110 6030 m 3260 6000 l 3110 5970 l 3140 6000 l 3110 6030 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
8370 3410 m 8370 3615 l 8430 3615 l 8430 3410 l 8430 3410 l 8400 3560 l 8370 3410 l cp
eoclip
n 6000 2400 m 8400 2400 l
 8400 3600 l gs col0 s gr gr

% arrowhead
n 8370 3410 m 8400 3560 l 8430 3410 l 8400 3440 l 8370 3410 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4320 5510 m 4320 5715 l 4380 5715 l 4380 5510 l 4380 5510 l 4350 5660 l 4320 5510 l cp
eoclip
n 7500 4200 m 4350 4200 l
 4350 5700 l gs col0 s gr gr

% arrowhead
n 4320 5510 m 4350 5660 l 4380 5510 l 4350 5540 l 4320 5510 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4380 2890 m 4380 2685 l 4320 2685 l 4320 2890 l 4320 2890 l 4350 2740 l 4380 2890 l cp
eoclip
n 7500 4200 m 4350 4200 l
 4350 2700 l gs col0 s gr gr

% arrowhead
n 4380 2890 m 4350 2740 l 4320 2890 l 4350 2860 l 4380 2890 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [90] 0 sd
gs  clippath
3270 5510 m 3270 5715 l 3330 5715 l 3330 5510 l 3330 5510 l 3300 5660 l 3270 5510 l cp
3330 2890 m 3330 2685 l 3270 2685 l 3270 2890 l 3270 2890 l 3300 2740 l 3330 2890 l cp
eoclip
n 3300 2700 m
 3300 5700 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 3330 2890 m 3300 2740 l 3270 2890 l 3300 2860 l 3330 2890 l 
 cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 3270 5510 m 3300 5660 l 3330 5510 l 3300 5540 l 3270 5510 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [90] 0 sd
gs  clippath
1770 5510 m 1770 5715 l 1830 5715 l 1830 5510 l 1830 5510 l 1800 5660 l 1770 5510 l cp
1830 2890 m 1830 2685 l 1770 2685 l 1770 2890 l 1770 2890 l 1800 2740 l 1830 2890 l cp
eoclip
n 1800 2700 m
 1800 5700 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1830 2890 m 1800 2740 l 1770 2890 l 1800 2860 l 1830 2890 l 
 cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 1770 5510 m 1800 5660 l 1830 5510 l 1800 5540 l 1770 5510 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 8400 3600 m 7500 4200 l 8400 4800 l 9300 4200 l
 cp gs col0 s gr 
% Polyline
n 1440 2100 m 1200 2100 1200 2460 240 arcto 4 {pop} repeat
  1200 2700 2160 2700 240 arcto 4 {pop} repeat
  2400 2700 2400 2340 240 arcto 4 {pop} repeat
  2400 2100 1440 2100 240 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
3110 2430 m 3315 2430 l 3315 2370 l 3110 2370 l 3110 2370 l 3260 2400 l 3110 2430 l cp
eoclip
n 2400 2400 m
 3300 2400 l gs col0 s gr gr

% arrowhead
n 3110 2430 m 3260 2400 l 3110 2370 l 3140 2400 l 3110 2430 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3300 2100 m 6000 2100 l 6000 2700 l 3300 2700 l
 cp gs col0 s gr 
% Polyline
n 3300 5700 m 6000 5700 l 6000 6300 l 3300 6300 l
 cp gs col0 s gr 
/Times-Roman ff 240.00 scf sf
1350 4425 m
gs 1 -1 sc (Mapping) col0 sh gr
/Times-Roman ff 240.00 scf sf
1275 4125 m
gs 1 -1 sc (Eqivalence) col0 sh gr
/Times-Roman ff 240.00 scf sf
2775 4425 m
gs 1 -1 sc (Constraints) col0 sh gr
/Times-Roman ff 240.00 scf sf
3075 4125 m
gs 1 -1 sc (Input) col0 sh gr
/Times-Roman ff 240.00 scf sf
4500 4050 m
gs 1 -1 sc (Yes. Fixed Point Computation) col0 sh gr
/Times-Roman ff 240.00 scf sf
9525 4050 m
gs 1 -1 sc (No) col0 sh gr
/Times-Roman ff 240.00 scf sf
1425 2475 m
gs 1 -1 sc (CCDFG) col0 sh gr
/Times-Roman ff 240.00 scf sf
3525 2625 m
gs 1 -1 sc (Simulation of CCDFG) col0 sh gr
/Times-Roman ff 240.00 scf sf
3675 2325 m
gs 1 -1 sc (Single Clock Cycle) col0 sh gr
/Times-Roman ff 240.00 scf sf
3600 6225 m
gs 1 -1 sc (Simulation of Circuit) col0 sh gr
/Times-Roman ff 240.00 scf sf
3675 5925 m
gs 1 -1 sc (Single Clock Cycle) col0 sh gr
/Times-Roman ff 240.00 scf sf
7875 4275 m
gs 1 -1 sc (Equivalent?) col0 sh gr
/Times-Roman ff 240.00 scf sf
1425 6075 m
gs 1 -1 sc (Circuit) col0 sh gr
% Polyline
gs  clippath
10010 4230 m 10215 4230 l 10215 4170 l 10010 4170 l 10010 4170 l 10160 4200 l 10010 4230 l cp
eoclip
n 9300 4200 m
 10200 4200 l gs col0 s gr gr

% arrowhead
n 10010 4230 m 10160 4200 l 10010 4170 l 10040 4200 l 10010 4230 l 
 cp gs 0.00 setgray ef gr  col0 s
% here ends figure;
$F2psEnd
rs
showpage
%%Trailer
%EOF

%%EndDocument
 @endspecial 596 4908 a Fv(Fig)o(.)12 b(5.)18 b Fx(Dual-Rail)h
(simulation)g(scheme)h(for)e(equi)n(v)n(alence)j(checking)g(between)e
(CCDFG)f(and)i(circuit.)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 560 448 a FA(1.)41 b(The)18 b(current)g(CCDFG)h
(state)h Ff(x)1581 460 y Fm(k)1641 448 y FA(and)e(circuit)g(state)i
Ff(s)2222 460 y Fm(k)2282 448 y FA(are)e(check)o(ed)f(to)i(see)g
(whether)f(for)f(the)664 548 y(input)k Ff(i)886 560 y
Fm(k)926 548 y FA(,)g(the)h(inputs)e(to)h(each)g(operation)e
Ff(op)j FA(in)f(the)h(scheduling)d(step)i Ff(t)2791 560
y Fm(k)2854 548 y FA(are)g(equi)n(v)n(alent)e(to)664
648 y(the)h(inputs)g(to)g Ff(E)5 b(M)k(ap)p Fc(\()p Ff(op)p
Fc(\))p FA(.)21 b(If)f(yes,)g(continue;)f(otherwise,)g(report)g(inequi)
n(v)n(alence.)560 744 y(2.)41 b Ff(G)23 b FA(is)f(simulated)f(by)g(e)o
(x)o(ecuting)e Ff(t)1651 756 y Fm(k)1714 744 y FA(on)i
Ff(x)1866 756 y Fm(k)1930 744 y FA(under)f Ff(i)2170
756 y Fm(k)2232 744 y FA(to)i(compute)e Ff(x)2674 756
y Fm(k)q Fz(+1)2821 744 y FA(and)h(recording)e(the)664
844 y(outputs)k(of)h(each)g Ff(op)31 b Fg(2)f Ff(t)1432
856 y Fm(k)1473 844 y FA(.)25 b Ff(M)33 b FA(is)25 b(simulated)f(for)f
(one)h(clock)f(c)o(ycle)h(from)f Ff(s)2955 856 y Fm(k)3020
844 y FA(under)g(input)664 944 y Ff(E)5 b(M)k(ap)p Fc(\()p
Ff(i)967 956 y Fm(k)1007 944 y Fc(\))23 b FA(to)e(compute)f
Ff(s)1495 956 y Fm(k)q Fz(+1)1620 944 y FA(.)i(The)f(outputs)f(for)h
(each)g Ff(op)h FA(are)g(check)o(ed)e(for)h(equi)n(v)n(alence)664
1043 y(with)g(the)f(outputs)f(of)h Ff(E)5 b(M)k(ap)p
Fc(\()p Ff(op)p Fc(\))p FA(.)20 b(If)g(yes,)h(continue;)d(otherwise,)i
(report)f(inequi)n(v)n(alence.)560 1140 y(3.)41 b(The)24
b(ne)o(xt)f(scheduling)g(step)h Ff(t)1557 1152 y Fm(k)q
Fz(+1)1707 1140 y FA(is)h(determined)d(from)i(control)e(\003o)n(w)-5
b(.)24 b(If)g Ff(t)2927 1152 y Fm(k)2993 1140 y FA(has)g(multiple)664
1240 y(outgoing)15 b(control)h(edges,)g(the)h(last)h(microstep)d(of)i
Ff(t)2170 1252 y Fm(k)2228 1240 y FA(e)o(x)o(ecuted)e(is)j
(identi\002ed.)e(The)h(outgoing)664 1339 y(control)i(edge)h(from)f
(this)h(microstep)g(whose)g(condition)e(e)n(v)n(aluates)h(to)i(true)f
(leads)g(to)g Ff(t)3203 1351 y Fm(k)q Fz(+1)3328 1339
y FA(.)523 1494 y(W)-7 b(e)31 b(permit)f(both)f(bounded)e(and)j
(unbounded)c(\(\002x)o(ed-point\))h(simulations.)j(In)f(particular)m(,)
f(the)523 1593 y(simulation)18 b(proceeds)f(until)i(\(i\))f(the)h(equi)
n(v)n(alence)e(check)h(f)o(ails,)h(\(ii\))g(the)f(end)g(of)h(a)g
(bounded)d(input)523 1693 y(sequence)j(is)i(reached,)e(or)h(\(iii\))g
(a)h(\002x)o(ed)e(point)h(is)h(reached)e(for)g(an)h(unbounded)d(input)i
(sequence.)648 1793 y(W)-7 b(e)29 b(ha)n(v)o(e)e(implemented)f(the)i
(dual-rail)f(scheme)g(on)h(the)g(bit)g(le)n(v)o(el)g(in)g(the)g(Intel)g
Ft(F)-9 b(orte)28 b FA(en-)523 1892 y(vironment)21 b([17],)h(where)h
(symbolic)f(states)i(are)g(represented)d(using)i(BDDs.)h(W)-7
b(e)24 b(ha)n(v)o(e)f(also)h(im-)523 1992 y(plemented)c(the)h(scheme)g
(on)h(the)f(w)o(ord)g(le)n(v)o(el)g(with)h(se)n(v)o(eral)e(b)n(uilt-in)
h(optimizations,)f(using)h(Sat-)523 2091 y(is\002ability)26
b(Modulo)e(Theories)h(\(SMT\);)g(this)h(is)h(viable)e(since)h(w)o
(ord-le)n(v)o(el)d(mappings)h(between)523 2191 y(operations)d(and)i
(circuit)f(nodes)g(are)h(e)o(xplicit.)f(W)-7 b(e)24 b(use)f(bit-v)o
(ectors)e(to)i(encode)e(the)i(v)n(ariables)f(in)523 2291
y(the)c(CCDFG)h(and)e(the)g(circuit;)g(the)h(SMT)g(engine)e(checks)h
(input/output)e(equi)n(v)n(alence)h(and)h(deter)n(-)523
2390 y(mines)j(control)f(paths.)h(Our)g(w)o(ord-le)n(v)o(el)e(check)o
(er)h(is)i(based)f(on)g(the)g(CVC3)h(SMT)f(engine)f([18].)648
2490 y(The)f(bit-le)n(v)o(el)f(and)h(w)o(ord-le)n(v)o(el)f(check)o(ers)
g(are)i(complementary)-5 b(.)15 b(The)j(bit-le)n(v)o(el)g(check)o(er)f
(en-)523 2590 y(sures)i(that)g(the)g(equi)n(v)n(alence)e(checking)h(is)
i(decidable,)d(while)i(the)g(w)o(ord-le)n(v)o(el)e(check)o(er)h(pro)o
(vides)523 2689 y(the)k(optimizations)f(crucial)g(to)i(scalability)-5
b(.)21 b(The)h(w)o(ord-le)n(v)o(el)e(check)o(er)h(can)h(mak)o(e)g(ef)n
(fecti)n(v)o(e)e(use)523 2789 y(of)29 b(results)g(from)f(bit-le)n(v)o
(el)g(checking)f(in)j(man)o(y)d(cases.)j(One)f(typical)f(scenario)g(is)
i(as)g(follo)n(ws.)523 2888 y(Suppose)18 b Ff(M)28 b
FA(is)20 b(a)g(design)e(module)g(of)g(modest)h(comple)o(xity)e(b)n(ut)i
(is)h(a)o(wkw)o(ard)e(to)h(check)f(at)i(w)o(ord-)523
2988 y(le)n(v)o(el.)h(Then)g(the)h(bit-le)n(v)o(el)f(check)o(er)f(is)j
(used)e(to)h(check)f(the)h(equi)n(v)n(alence)e(of)h(the)h(CCDFG)h(of)e
Ff(M)523 3088 y FA(with)28 b(its)g(circuit)f(implementation;)f(when)h
(the)g(w)o(ord-le)n(v)o(el)f(check)o(er)g(is)i(used)g(for)f(equi)n(v)n
(alence)523 3187 y(checking)19 b(of)h(a)h(module)e(that)i(calls)g
Ff(M)9 b FA(,)20 b(it)i(skips)e(the)h(check)e(of)i Ff(M)9
b FA(,)20 b(treating)g(the)g(CCDFG)i(of)e Ff(M)523 3287
y FA(and)g(its)h(circuit)f(implementation)e(as)j(equi)n(v)n(alent)d
(black)i(box)o(es.)523 3541 y Fu(5)99 b(Experimental)26
b(Results)523 3729 y FA(W)-7 b(e)31 b(used)f(the)g(bit-le)n(v)o(el)g
(check)o(er)f(on)g(a)i(set)g(of)f(CCDFGs)i(for)d(GCD)i(and)f(the)g
(corresponding)523 3828 y(circuits)d(synthesized)f(by)h(AutoPilot.)f
(The)h(e)o(xperiments)e(were)i(conducted)e(on)h(a)i(w)o(orkstation)523
3928 y(with)20 b Fc(3)p FA(GHz)f(Intel)g(Xeon)g(processor)f(with)i
Fc(2)p FA(GB)g(memory)-5 b(.)17 b(T)-7 b(able)19 b(1)h(sho)n(ws)f(the)h
(statistics)h(before)523 4028 y(and)i(after)h(schedule)e(re\002nement)h
(\(Theorem)e(2\).)j(Since)f(we)h(bit-blast)g(all)g(CCDFG)h(operations,)
523 4127 y(the)g(running)e(time)i(gro)n(ws)g(e)o(xponentially)d(with)j
(the)g(bit)g(width;)g(for)f Fc(8)p FA(-bit)h(GCD,)g(checking)f(re-)523
4227 y(quires)29 b(about)f Fc(2)h FA(hours.)f(It)h(is)i(interesting)d
(to)h(understand)e(ho)n(w)i(schedule)f(re\002nement)g(af)n(fects)523
4327 y(the)21 b(performance)d(of)j(equi)n(v)n(alence)e(checking.)h
(Schedule)g(re\002nement)f(partitions)i(operations)e(in)523
4426 y(the)30 b(loop)f(body)f(into)i(tw)o(o)g(clock)f(c)o(ycles.)h
(This)g(does)f(not)h(change)e(\002x)o(ed-point)g(computation;)523
4526 y(ho)n(we)n(v)o(er)m(,)16 b(the)j(number)f(of)g(c)o(ycles)h(for)f
(which)h(the)g(circuit)g(is)h(simulated)e(doubles.)g(F)o(or)g(small)i
(bit-)523 4625 y(widths,)j(the)g(running)d(time)j(after)g(schedule)f
(re\002nement)f(is)j(about)e(tw)o(o)h(times)g(slo)n(wer)g(than)f(that)
523 4725 y(before.)d(Ho)n(we)n(v)o(er)m(,)f(for)i(lar)o(ge)f(bit)i
(widths,)f(the)g(running)e(time)j(is)g(dominated)d(by)i(the)h(comple)o
(xity)523 4825 y(of)j(the)g(CCDFG)h(simulation)e(instead)h(of)g(the)g
(circuit)g(simulation.)f(The)h(decrease)f(in)h(time)g(with)523
4924 y(the)c(increase)g(in)g(bit)h(width)f(from)f Fc(7)h
FA(to)g Fc(8)h FA(is)g(lik)o(ely)f(due)f(to)i(BDD)g(v)n(ariable)e
(reordering.)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 1232 417 a Fv(T)-7 b(able)18
b(1.)h Fx(Bit-le)n(v)o(el)f(equi)n(v)n(alence)j(checking)g(statistics)p
725 528 2460 4 v 723 619 4 92 v 983 592 a(Circuit)p 1447
619 V 1464 619 V 305 w(Before)e(schedule)h(re\002nement)p
2327 619 V 2344 619 V 70 w(After)e(schedule)i(re\002nement)p
3183 619 V 725 622 2460 4 v 723 714 4 92 v 755 686 a(Bit)e(W)m(idth)p
1078 714 V 61 w(#)h(of)g(Nodes)p 1447 714 V 1464 714
V 40 w(T)m(ime)g(\(Sec.\))p 1856 714 V 82 w(BDD)f(Nodes)p
2328 714 V 2344 714 V 100 w(T)m(ime)h(\(Sec.\))p 2755
714 V 60 w(BDD)f(Nodes)p 3183 714 V 725 717 2460 4 v
723 808 4 92 v 883 781 a(2)p 1078 808 V 307 w(96)p 1447
808 V 1464 808 V 295 w(0.02)p 1856 808 V 311 w(503)p
2328 808 V 2344 808 V 338 w(0.02)p 2755 808 V 299 w(783)p
3183 808 V 725 812 2460 4 v 723 903 4 92 v 883 875 a(3)p
1078 903 V 288 w(164)p 1447 903 V 1464 903 V 277 w(0.05)p
1856 903 V 293 w(4772)p 2328 903 V 2344 903 V 319 w(0.07)p
2755 903 V 261 w(11113)p 3183 903 V 725 906 2460 4 v
723 998 4 92 v 883 970 a(4)p 1078 998 V 288 w(246)p 1447
998 V 1464 998 V 277 w(0.11)p 1856 998 V 274 w(42831)p
2328 998 V 2344 998 V 301 w(0.24)p 2755 998 V 261 w(20937)p
3183 998 V 725 1001 2460 4 v 723 1092 4 92 v 883 1065
a(5)p 1078 1092 V 288 w(342)p 1447 1092 V 1464 1092 V
277 w(0.59)p 1856 1092 V 274 w(16244)p 2328 1092 V 2344
1092 V 301 w(1.93)p 2755 1092 V 261 w(99723)p 3183 1092
V 725 1095 2460 4 v 723 1187 4 92 v 883 1159 a(6)p 1078
1187 V 288 w(452)p 1447 1187 V 1464 1187 V 259 w(12.50)p
1856 1187 V 255 w(39968)p 2328 1187 V 2344 1187 V 282
w(27.27)p 2755 1187 V 224 w(118346)p 3183 1187 V 725
1190 2460 4 v 723 1281 4 92 v 883 1254 a(7)p 1078 1281
V 288 w(576)p 1447 1281 V 1464 1281 V 240 w(369.31)p
1856 1281 V 218 w(220891)p 2328 1281 V 2344 1281 V 245
w(383.98)p 2755 1281 V 206 w(164613)p 3183 1281 V 725
1285 2460 4 v 723 1376 4 92 v 883 1349 a(8)p 1078 1376
V 288 w(714)p 1447 1376 V 1464 1376 V 221 w(6850.56)p
1856 1376 V 182 w(1197604)p 2328 1376 V 2344 1376 V 208
w(3471.74)p 2755 1376 V 187 w(581655)p 3183 1376 V 725
1379 2460 4 v 648 1652 a FA(Using)27 b(our)f(w)o(ord-le)n(v)o(el)f
(check)o(er)m(,)g(we)j(ha)n(v)o(e)e(check)o(ed)g(se)n(v)o(eral)g(R)-5
b(TL)28 b(designs)f(synthesized)523 1751 y(by)20 b(AutoPilot)h(with)g
(CCDFGs)h(deri)n(v)o(ed)d(from)h(AutoPilot')-5 b(s)20
b(intermediate)f(representations;)g(the)523 1851 y(statistics)j(are)e
(sho)n(wn)g(in)h(T)-7 b(able)20 b(2.)g(The)g(designs)g(illustrate)h
(dif)n(ferent)e(f)o(acets)h(of)g(the)h(frame)n(w)o(ork.)1196
2109 y Fv(T)-7 b(able)18 b(2.)h Fx(W)-6 b(ord-le)n(v)o(el)19
b(equi)n(v)n(alence)i(checking)f(statistics)p 929 2220
2052 4 v 927 2312 4 92 v 1226 2284 a(Design)p 1733 2312
V 328 w(GCD)p 1951 2312 V 60 w(TEA)p 2157 2312 V 60 w(DCT)p
2367 2312 V 60 w(3DES)p 2606 2312 V 60 w(3DES)p 2821
2284 23 4 v 27 w(k)o(e)o(y)p 2978 2312 4 92 v 929 2315
2052 4 v 927 2406 4 92 v 959 2379 a(C)f(Code)g(Size)g(\(#)g(of)g
(Lines\))p 1733 2406 V 102 w(14)p 1951 2406 V 138 w(12)p
2157 2406 V 134 w(52)p 2367 2406 V 132 w(325)p 2606 2406
V 194 w(412)p 2978 2406 V 929 2409 2052 4 v 927 2501
4 92 v 1004 2473 a(R)l(TL)f(Size)g(\(#)h(of)g(Lines\))p
1733 2501 V 128 w(364)p 1951 2501 V 82 w(1001)p 2157
2501 V 79 w(688)p 2367 2501 V 76 w(18053)p 2606 2501
V 121 w(79976)p 2978 2501 V 929 2504 2052 4 v 927 2595
4 92 v 1096 2568 a(T)m(ime)f(\(Seconds\))p 1733 2595
V 258 w(2)p 1951 2595 V 129 w(15.6)p 2157 2595 V 78 w(30.1)p
2367 2595 V 76 w(355.7)p 2606 2595 V 119 w(2351.7)p 2978
2595 V 929 2599 2052 4 v 927 2690 4 92 v 1006 2663 a(Memory)i(\(Me)o
(gabytes\))p 1733 2690 V 140 w(4.1)p 1951 2690 V 101
w(24.6)p 2157 2690 V 78 w(49.2)p 2367 2690 V 94 w(59.4)p
2606 2690 V 157 w(307.2)p 2978 2690 V 929 2693 2052 4
v 523 2964 a FA(GCD)27 b(contains)e(a)h(loop)f(whose)h(number)e(of)i
(iterations)f(depends)g(on)g(the)h(inputs.)g(TEA)f(has)i(an)523
3064 y(e)o(xplicitly)15 b(bounded)f(loop.)h(DCT)h(contains)g
(sequential)f(computation)f(without)h(loop.)g(3DES)h(rep-)523
3163 y(resents)j(a)f(practical)g(design)g(of)g(signi\002cant)g(size.)h
(3DES)p 2195 3163 25 4 v 29 w(k)o(e)o(y)f(is)h(included)e(to)h
(illustrate)h(the)f(scal-)523 3263 y(ability)h(of)g(our)g(approach)e
(on)i(relati)n(v)o(ely)f(lar)o(ge)g(synthesized)h(designs.)f(The)h
(results)h(demonstrate)523 3363 y(the)25 b(ef)n(\002cac)o(y)f(of)h(our)
g(w)o(ord-le)n(v)o(el)e(equi)n(v)n(alence)g(checking.)g(In)i(contrast,)
g(full)g(w)o(ord-le)n(v)o(el)e(sym-)523 3462 y(bolic)16
b(simulation)g(comparing)f(the)i(input/output)d(relations)i(of)h(C)g
(and)g(R)-5 b(TL)17 b(runs)f(out)h(of)f(memory)523 3562
y(on)k(all)h(the)f(designs)g(b)n(ut)g(DCT)h(\(for)e(which)g(it)i(needs)
f(twice)h(as)g(much)e(time)h(and)g(memory\).)523 3828
y Fu(6)99 b(Related)26 b(W)-7 b(ork)523 4028 y FA(An)18
b(early)f(ef)n(fort)f([19])g(on)i(v)o(eri\002cation)e(of)h(high-le)n(v)
o(el)e(synthesis)j(tar)o(gets)f(the)g(beha)n(vioral)f(portion)523
4127 y(of)25 b(VHDL)g([20].)f(A)i(translation)f(from)f(beha)n(vioral)f
(VHDL)j(to)f(dependence)e(\003o)n(w)i(graphs)g([21])523
4227 y(w)o(as)h(v)o(eri\002ed)e(by)g(structural)h(induction)e(based)h
(on)h(the)g(CSP)h([22])e(semantics.)h(Recently)-5 b(,)24
b(there)523 4327 y(has)30 b(been)f(research)g(on)h(certi\002ed)f
(synthesis)h(of)g(hardw)o(are)e(from)h(formal)g(languages)f(such)i(as)
523 4426 y(HOL)c([23])f(in)g(which)h(a)g(compiler)e(that)i
(automatically)e(translates)i(recursi)n(v)o(e)e(function)g(de\002ni-)
523 4526 y(tions)h(in)f(HOL)h(to)g(clock)o(ed)f(synchronous)e(hardw)o
(are)h(has)i(been)f(de)n(v)o(eloped.)d(A)k(certi\002ed)g(hard-)523
4625 y(w)o(are)19 b(synthesis)f(from)g(programs)f(in)i(Esterel,)f(a)i
(synchronous)15 b(design)k(language,)d(has)j(been)f(also)523
4725 y(been)i(de)n(v)o(eloped)d([24])i(in)i(which)e(a)i(v)n(ariant)e
(of)h(Esterel)g(w)o(as)h(embedded)d(in)j(HOL.)648 4825
y(Da)n(v)o(e)h([25])g(pro)o(vides)f(a)i(comprehensi)n(v)o(e)c
(bibliography)g(of)k(compiler)e(v)o(eri\002cation.)g(One)i(of)523
4924 y(the)i(earliest)g(w)o(ork)f(on)g(compiler)g(v)o(eri\002cation)f
(w)o(as)j(the)e(Piton)h(project)f([26],)f(which)h(v)o(eri\002ed)g(a)p
eop end
%%Page: 14 14
TeXDict begin 14 13 bop 523 448 a FA(simple)22 b(assembly)f(language)f
(compiler)-5 b(.)20 b(Compiler)h(certi\002cation)g(forms)g(a)h
(critical)g(component)523 548 y(of)17 b(the)g(V)-9 b(erisoft)17
b(project)f([27],)g(aiming)h(at)h(correctness)e(of)h(implementations)e
(of)i(computing)e(sys-)523 648 y(tems)h(with)g(both)f(hardw)o(are)g
(and)g(softw)o(are)h(components.)d(The)j(V)-9 b(eri\002x)15
b([28])g(and)g(CompCert)h([29])523 747 y(projects)k(ha)n(v)o(e)f(e)o
(xplored)f(a)j(general)e(frame)n(w)o(ork)f(for)h(certi\002cation)h(of)g
(compilers)f(for)g(v)n(arious)h(C)523 847 y(subsets)e([30,)12
b(31].)17 b(There)g(has)h(also)g(been)f(w)o(ork)g(on)h(a)g
Fk(v)o(erifying)f FA(compiler)m(,)f(where)h(each)h(instance)523
946 y(of)i(a)h(transformation)c(generates)i(a)i(proof)e(obligation)f
(dischar)o(ged)g(by)h(a)i(theorem)e(pro)o(v)o(er)f([32].)648
1046 y(There)k(has)i(been)e(much)h(research)f(on)h(sequential)g(equi)n
(v)n(alence)e(checking)h(\(SEC\))h(between)523 1146 y(R)-5
b(TL)22 b(and)f(gate-le)n(v)o(el)f(hardw)o(are)h(designs)g([33,)12
b(34].)21 b(Research)h(has)g(also)g(be)f(done)g(on)g(combina-)523
1246 y(tional)15 b(equi)n(v)n(alence)e(checking)h(between)g(high-le)n
(v)o(el)g(designs)h(in)g(softw)o(are-lik)o(e)f(languages)g(\()p
Ft(e)o(.g)o(.)p FA(,)523 1345 y(SystemC\))k(and)e(R)-5
b(TL-le)n(v)o(el)17 b(designs)g([11].)f(There)h(has)g(also)h(been)f(ef)
n(fort)f(for)h(SEC)h(between)f(soft-)523 1445 y(w)o(are)29
b(speci\002cations)f(and)g(hardw)o(are)g(implementations)f([35]:)g
(GSTE)i(assertion)g(graphs)f([36])523 1545 y(were)c(e)o(xtended)d(so)j
(that)g(an)f(assertion)h(graph)e(edge)h(ha)n(v)o(e)g(pre)g(and)g(post)h
(condition)d(labels,)j(and)523 1644 y(also)k(associated)f(assignments)g
(that)h(update)e(state)i(v)n(ariables.)f(There)g(has)g(also)h(been)f(w)
o(ork)g(on)523 1744 y(equi)n(v)n(alence)18 b(checking)h(with)h(other)f
(graph)g(representations,)f Ft(e)o(.g)o(.)p FA(,)h(Signal)h(Flo)n(w)g
(Graph)g([37].)523 2011 y Fu(7)99 b(Conclusion)523 2213
y FA(W)-7 b(e)26 b(ha)n(v)o(e)f(presented)e(a)j(frame)n(w)o(ork)d(for)h
(certifying)f(beha)n(vioral)h(synthesis)h(\003o)n(ws.)g(The)g(frame-)
523 2312 y(w)o(ork)f(includes)g(a)h(combination)d(of)j
Fk(v)o(eri\002ed)g FA(and)f Fk(v)o(erifying)g FA(paradigms:)f(high-le)n
(v)o(el)g(transfor)n(-)523 2412 y(mations)g(are)h(certi\002ed)f(once)f
(and)h(for)g(all)h(by)g(theorem)e(pro)o(ving,)f(while)i(lo)n(w-le)n(v)o
(el)f(tweaks)i(and)523 2511 y(optimizations)19 b(can)h(be)g(handled)e
(through)g(model)i(checking.)e(W)-7 b(e)21 b(demonstrated)d(the)i(use)h
(of)e(the)523 2611 y(CCDFG)25 b(structure)d(as)i(an)f(interf)o(ace)f
(between)h(the)g(tw)o(o)g(components.)e(Certi\002cation)i(of)g(dif)n
(fer)n(-)523 2711 y(ent)17 b(compiler)e(transformations)g(is)i
(uniformly)e(speci\002ed)h(by)h(vie)n(wing)e(them)i(as)g(manipulation)e
(of)523 2810 y(CCDFGs.)k(The)e(transformed)f(CCDFG)j(can)e(then)g(be)h
(used)f(for)g(equi)n(v)n(alence)f(checking)g(with)h(the)523
2910 y(synthesized)k(design.)g(One)h(k)o(e)o(y)f(bene\002t)h(of)f(the)h
(approach)e(is)j(that)f(it)g(ob)o(viates)f(the)h(need)g(for)f(de-)523
3010 y(v)o(eloping)h(formal)h(semantics)g(for)h(each)f(dif)n(ferent)g
(intermediate)f(representation)g(generated)g(by)523 3109
y(the)e(compiler)-5 b(.)18 b(Furthermore,)g(the)h(lo)n(w-le)n(v)o(el)g
(optimizations)f(implemented)g(in)i(a)g(synthesis)g(tool)523
3209 y(are)j(abstracted)g(from)f(the)h(reasoning)f(frame)n(w)o(ork)f
(without)i(weak)o(ening)f(the)h(formal)f(guarantee)523
3308 y(on)d(the)g(synthesized)g(design.)f(Our)h(e)o(xperimental)e
(results)j(indicate)e(that)i(the)f(approach)e(scales)j(to)523
3408 y(v)o(eri\002cation)f(of)h(realistic)g(designs)g(synthesized)f(by)
h(production)d(synthesis)k(tools.)648 3508 y(In)26 b(future)g(w)o(ork,)
g(we)h(will)h(mak)o(e)e(further)g(impro)o(v)o(ements)e(to)j(impro)o(v)o
(e)e(scalability)-5 b(.)26 b(In)g(the)523 3608 y Fk(v)o(eri\002ed)18
b FA(component,)e(we)i(are)h(formalizing)d(other)h(generic)g
(transformations)f Ft(e)o(.g)o(.)p FA(,)h(code)h(motion)523
3707 y(across)k(loop)g(iterations.)f(In)h(the)g Fk(v)o(erifying)g
FA(component,)e(we)i(are)h(considering)d(the)i(use)g(of)g(theo-)523
3807 y(rem)h(pro)o(ving)e(to)j(partition)e(a)i(CCDFG)h(into)e(smaller)g
(subgraphs)f(for)g(compositional)g(certi\002ca-)523 3907
y(tion.)e(W)-7 b(e)21 b(are)g(also)f(e)o(xploring)e(w)o(ays)j(to)f
(tolerate)g(limited)g(perturbations)e(in)j(mappings)d(between)523
4006 y(CCDFGs)k(and)e(circuits)g(\()p Ft(e)o(.g)o(.)p
FA(,)e(due)i(to)g(manual)f(R)-5 b(TL)21 b(tweaks\))f(in)g(their)g(equi)
n(v)n(alence)e(checking.)523 4274 y Fu(Refer)n(ences)560
4467 y Fx(1.)42 b(F)o(orte)18 b(Design)i(Systems:)26
b(Beha)o(vioral)19 b(Design)h(Suite.)e(http://www)-5
b(.forteds.com.)560 4558 y(2.)42 b(Celoxica:)27 b(DK)19
b(Design)g(Suite.)f(http://www)-5 b(.celoxica.com.)560
4650 y(3.)42 b(Cong,)33 b(J.,)e(F)o(an,)h(Y)-10 b(.,)31
b(Han,)i(G.,)e(Jiang,)h(W)-7 b(.,)32 b(Zhang,)g(Z.:)69
b(Beha)o(vioral)32 b(and)h(Communication)h(Co-)658 4741
y(Optimizations)19 b(for)g(Systems)g(with)f(Sequential)h(Communication)
i(Media.)27 b(In:)19 b(D)m(A)m(C.)f(\(2006\))560 4833
y(4.)42 b(Gajski,)27 b(D.,)f(Dutt,)h(N.D.,)e(W)l(u,)i(A.,)g(Lin,)f(S.:)
52 b(High)28 b(Le)n(v)o(el)f(Synthesis:)g(Introduction)i(to)e(Chip)g
(and)658 4924 y(System)19 b(Design.)27 b(Kluwer)19 b(Academic)g
(Publishers)g(\(1993\))p eop end
%%Page: 15 15
TeXDict begin 15 14 bop 560 448 a Fx(5.)42 b(K)o(undu,)20
b(S.,)d(Lerner)m(,)i(S.,)e(Gupta,)i(R.:)26 b(V)-8 b(alidating)19
b(High-Le)n(v)o(el)g(Synthesis.)27 b(In:)19 b(CA)-10
b(V.)18 b(\(2008\))560 532 y(6.)42 b(Galois,)18 b(Inc.:)27
b(Cryptol:)19 b(The)g(Language)h(of)f(Cryptography)h(\(2007\))560
616 y(7.)42 b(Russinof)n(f,)20 b(D.:)31 b(A)21 b(Mechanically)g(Check)o
(ed)h(Proof)e(of)h(IEEE)e(Compliance)i(of)f(a)h(Re)o(gister)o(-T)m
(ransfer)o(-)658 707 y(Le)n(v)o(el)31 b(Speci\002cation)h(of)g(the)f
(AMD-K7)h(Floating-point)g(Multiplication,)g(Di)n(vision,)f(and)h
(Square)658 798 y(Root)19 b(Instructions.)27 b(JCM)19
b Fv(1)g Fx(\(1998\))560 882 y(8.)42 b(O'Leary)-5 b(,)26
b(J.,)g(Zhao,)g(X.,)g(Gerth,)g(R.,)f(Se)o(ger)m(,)h(C.J.H.:)50
b(F)o(ormally)26 b(V)-8 b(erifying)26 b(IEEE)f(Compliance)j(of)658
974 y(Floating-point)19 b(Hardw)o(are.)28 b(Intel)18
b(T)-5 b(echnology)21 b(Journal)e Fv(Q1)g Fx(\(1999\))560
1057 y(9.)42 b(Wheeler)m(,)18 b(D.J.,)g(Needham,)i(R.M.:)26
b(T)-5 b(ea,)18 b(a)h(tin)o(y)g(encryption)h(algorithm.)28
b(In:)18 b(F)o(ast)h(Softw)o(are)f(Encryp-)658 1149 y(tion.)h(\(1994\))
523 1232 y(10.)42 b(AutoESL:)26 b(AutoPilot)18 b(Reference)i(Manual.)28
b(AutoESL.)17 b(\(2008\))523 1316 y(11.)42 b(Hu,)17 b(A.J.:)23
b(High-le)n(v)o(el)18 b(vs.)f(R)l(TL)f(combinational)i(equi)n(v)n
(alence:)h(An)f(introduction.)24 b(In:)17 b(ICCD.)g(\(2006\))523
1400 y(12.)42 b(Kaufmann,)35 b(M.,)e(Manolios,)i(P)-8
b(.,)32 b(Moore,)j(J.S.:)74 b(Computer)o(-Aided)35 b(Reasoning:)g(An)f
(Approach.)658 1491 y(Kluwer)19 b(Academic)g(Publishers,)g(Boston,)g
(MA)g(\(June)h(2000\))523 1575 y(13.)42 b(Ray)-5 b(,)25
b(S.,)f(Chen,)h(Y)-10 b(.,)25 b(Xie,)f(F)-6 b(.,)24 b(Y)-7
b(ang,)25 b(J.:)46 b(Combining)27 b(theorem)e(pro)o(ving)i(and)e(model)
h(checking)h(for)658 1666 y(certi\002cation)20 b(of)g(beha)o(vioral)g
(synthesis)h(\003o)n(ws.)30 b(T)-5 b(echnical)20 b(Report)g(TR-08-48,)h
(Uni)n(v)o(ersity)f(of)g(T)-5 b(e)o(xas)658 1757 y(at)19
b(Austin)g(\(2008\))523 1841 y(14.)42 b(Abadi,)19 b(M.,)f(Lamport,)h
(L.:)26 b(The)19 b(Existence)g(of)g(Re\002nement)g(Mappings.)29
b(TCS)17 b Fv(82)p Fx(\(2\))j(\(1991\))523 1925 y(15.)42
b(Lamport,)19 b(L.:)26 b(What)18 b(Good)i(is)e(T)-5 b(emporal)19
b(Logic?)28 b(Information)19 b(Processing)h Fv(83)f Fx(\(1983\))523
2009 y(16.)42 b(Ray)-5 b(,)25 b(S.,)g(Hunt,)g(Jr)l(.,)f(W)-7
b(.A.:)47 b(Deducti)n(v)o(e)26 b(V)-8 b(eri\002cation)25
b(of)h(Pipelined)f(Machines)i(Using)f(First-Order)658
2100 y(Quanti\002cation.)h(In:)19 b(CA)-10 b(V.)18 b(\(2004\))523
2184 y(17.)42 b(Se)o(ger)m(,)23 b(C.J.H.,)f(Jones,)h(R.,)g(O'Leary)-5
b(,)23 b(J.,)f(Melham,)i(T)-6 b(.,)23 b(Aagaard,)g(M.,)g(Barrett,)g
(C.,)f(Syme,)h(D.:)41 b(An)658 2275 y(industrially)19
b(ef)n(fecti)n(v)o(e)g(en)m(vironment)i(for)d(formal)h(hardw)o(are)h(v)
o(eri\002cation.)27 b(TCAD)18 b Fv(24)p Fx(\(9\))i(\(2005\))523
2359 y(18.)42 b(Barrett,)18 b(C.,)g(T)m(inelli,)g(C.:)26
b(CVC3.)g(In:)19 b(CA)-10 b(V)g(.)19 b(\(2007\))523 2443
y(19.)42 b(Chapman,)20 b(R.O.:)26 b(V)-8 b(eri\002ed)18
b(high-le)n(v)o(el)h(synthesis.)28 b(PhD)19 b(thesis,)f(Ithaca,)h(NY)
-10 b(,)19 b(USA)f(\(1994\))523 2526 y(20.)42 b(IEEE:)25
b(IEEE)18 b(Std)g(1076:)i(IEEE)e(standards)i(VHDL)e(language)i
(reference)g(manual)523 2610 y(21.)42 b(Johnson,)20 b(R.,)e(Pingali,)g
(K.:)26 b(Dependence-based)c(program)e(analysis.)27 b(In:)19
b(PLDI.)e(\(1993\))523 2694 y(22.)42 b(Hoare,)19 b(C.A.R.:)25
b(Communicating)20 b(Sequential)g(Processes.)27 b(Prentice-Hall)18
b(\(1985\))523 2778 y(23.)42 b(Gordon,)22 b(M.,)g(Iyoda,)g(J.,)f
(Owens,)g(S.,)g(Slind,)f(K.:)35 b(Automatic)22 b(formal)g(synthesis)g
(of)g(hardw)o(are)h(from)658 2869 y(higher)d(order)f(logic.)27
b(TCS)18 b Fv(145)h Fx(\(2006\))523 2953 y(24.)42 b(Schneider)m(,)19
b(K.:)26 b(A)19 b(v)o(eri\002ed)g(hardw)o(are)h(synthesis)f(for)g
(Esterel.)26 b(In:)19 b(DIPES.)e(\(2000\))523 3036 y(25.)42
b(Da)o(v)o(e,)18 b(M.A.:)27 b(Compiler)19 b(v)o(eri\002cation:)f(a)h
(bibliography.)28 b(SIGSOFT)17 b(SEN)h Fv(28)p Fx(\(6\))h(\(2003\))523
3120 y(26.)42 b(Moore,)22 b(J.S.:)35 b(Piton:)21 b(A)h(Mechanically)h
(V)-8 b(eri\002ed)21 b(Assembly)h(Language.)38 b(Kluwer)21
b(Academic)i(Pub-)658 3211 y(lishers)c(\(1996\))523 3295
y(27.)42 b(V)-8 b(erisoft)18 b(Project:)27 b(http://www)-5
b(.v)o(erisoft.de.)523 3379 y(28.)42 b(V)-8 b(eri\002x)18
b(Project:)26 b(http://www)-5 b(.info.uni-karlsruhe.de/\230v)o
(eri\002x.)523 3463 y(29.)42 b(CompCert)19 b(Project:)26
b(http://pauillac.inria.fr/\230xlero)o(y/compcert.)523
3546 y(30.)42 b(Leinenbach,)24 b(D.,)d(P)o(aul,)h(W)-7
b(.J.,)22 b(Petro)o(v)n(a,)g(E.:)38 b(T)-6 b(o)n(w)o(ards)23
b(the)g(formal)g(v)o(eri\002cation)g(of)f(a)h(C0)g(compiler:)658
3638 y(Code)c(generation)h(and)g(implementation)g(correctness.)27
b(In:)19 b(SEFM.)f(\(2005\))523 3721 y(31.)42 b(Lero)o(y)-5
b(,)22 b(X.:)37 b(F)o(ormal)22 b(certi\002cation)g(of)g(a)g(compiler)h
(back-end)h(or:)d(programming)j(a)e(compiler)h(with)f(a)658
3813 y(proof)d(assistant.)27 b(In:)19 b(POPL.)e(\(2006\))523
3896 y(32.)42 b(Pik)o(e,)21 b(L.,)g(Shields,)g(M.,)g(Matthe)n(ws,)h
(J.:)35 b(A)21 b(V)-8 b(erifying)22 b(Core)g(for)f(a)h(Cryptographic)h
(Language)g(Com-)658 3988 y(piler)l(.)j(In:)19 b(A)m(CL2.)f(\(2006\))
523 4072 y(33.)42 b(Baumgartner)m(,)28 b(J.,)g(Mon)o(y)-5
b(,)29 b(H.,)e(P)o(aruthi,)g(V)-10 b(.,)28 b(Kanzelman,)g(R.,)f
(Janssen,)i(G.:)56 b(Scalable)28 b(sequential)658 4163
y(equi)n(v)n(alence)21 b(checking)f(across)g(arbitrary)f(design)g
(transformations.)28 b(In:)19 b(ICCD.)e(\(2006\))523
4247 y(34.)42 b(Kaiss,)23 b(D.,)f(Goldenber)o(g,)j(S.,)d(Hanna,)i(Z.,)e
(Khasidashvili,)i(Z.:)40 b(Seqv)o(er:)23 b(A)h(sequential)g(equi)n(v)n
(alence)658 4338 y(v)o(eri\002er)18 b(for)h(hardw)o(are)h(designs.)28
b(In:)18 b(ICCD.)g(\(2006\))523 4422 y(35.)42 b(Feng,)23
b(X.,)e(Hu,)i(A.J.,)e(Y)-7 b(ang,)23 b(J.:)39 b(P)o(artitioned)22
b(model)h(checking)i(from)d(softw)o(are)h(speci\002cations.)40
b(In:)658 4513 y(ASP-D)m(A)m(C.)17 b(\(2005\))523 4597
y(36.)42 b(Y)-7 b(ang,)21 b(J.,)g(Se)o(ger)m(,)g(C.J.H.:)35
b(Introduction)23 b(to)e(generalized)i(symbolic)g(trajectory)e(e)n(v)n
(aluation.)37 b(TVLSI)658 4688 y Fv(11)p Fx(\(3\))19
b(\(2003\))523 4772 y(37.)42 b(Claesen,)22 b(L.,)e(Genoe,)i(M.,)f(V)-8
b(erlind,)22 b(E.:)34 b(Implementation/speci\002cation)24
b(v)o(eri\002cation)d(by)h(means)h(of)658 4863 y(SFG-T)m(racing.)j(In:)
19 b(CHARME.)f(\(1993\))p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
